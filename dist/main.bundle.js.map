{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/addImage/add-image-routing.module.ts","./src/app/addImage/add-image.component.css","./src/app/addImage/add-image.component.html","./src/app/addImage/add-image.component.ts","./src/app/addImage/add-image.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/classification-center/add-classification/add-classification.component.css","./src/app/classification-center/add-classification/add-classification.component.html","./src/app/classification-center/add-classification/add-classification.component.ts","./src/app/classification-center/add-classification/add-classification.module.ts","./src/app/confirmbox/confirm-box.component.css","./src/app/confirmbox/confirm-box.component.html","./src/app/confirmbox/confirm-box.component.ts","./src/app/confirmbox/confirm-box.module.ts","./src/app/createRecords/createLabel/create-label-routing.module.ts","./src/app/createRecords/createLabel/create-label.component.css","./src/app/createRecords/createLabel/create-label.component.html","./src/app/createRecords/createLabel/create-label.component.ts","./src/app/createRecords/createLabel/create-label.module.ts","./src/app/createRecords/createNft/create-nft-routing.module.ts","./src/app/createRecords/createNft/create-nft.component.css","./src/app/createRecords/createNft/create-nft.component.html","./src/app/createRecords/createNft/create-nft.component.ts","./src/app/createRecords/createNft/create-nft.module.ts","./src/app/createRecords/createNftPrepared/create-nft-as-prepared-routing.module.ts","./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.css","./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.html","./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.ts","./src/app/createRecords/createNftPrepared/create-nft-as-prepared.module.ts","./src/app/createRecords/createProduct/create-product-routing.module.ts","./src/app/createRecords/createProduct/create-product.component.css","./src/app/createRecords/createProduct/create-product.component.html","./src/app/createRecords/createProduct/create-product.component.ts","./src/app/createRecords/createProduct/create-product.module.ts","./src/app/createRecords/createSales/create-sales-routing.module.ts","./src/app/createRecords/createSales/create-sales.component.css","./src/app/createRecords/createSales/create-sales.component.html","./src/app/createRecords/createSales/create-sales.component.ts","./src/app/createRecords/createSales/create-sales.module.ts","./src/app/data-model.ts","./src/app/editForms/editNft/edit-nft-routing.module.ts","./src/app/editForms/editNft/edit-nft.component.css","./src/app/editForms/editNft/edit-nft.component.html","./src/app/editForms/editNft/edit-nft.component.ts","./src/app/editForms/editNft/edit-nft.module.ts","./src/app/editForms/editPackage/edit-label-routing.module.ts","./src/app/editForms/editPackage/edit-label.component.css","./src/app/editForms/editPackage/edit-label.component.html","./src/app/editForms/editPackage/edit-label.component.ts","./src/app/editForms/editPackage/edit-label.module.ts","./src/app/editForms/editProduct/dialog.service.ts","./src/app/editForms/editProduct/edit-product-rouding.module.ts","./src/app/editForms/editProduct/edit-product.component.css","./src/app/editForms/editProduct/edit-product.component.html","./src/app/editForms/editProduct/edit-product.component.ts","./src/app/editForms/editProduct/edit-product.module.ts","./src/app/editForms/editProduct/save-forms-guard.ts","./src/app/editForms/editSales/edit-sales-routing.module.ts","./src/app/editForms/editSales/edit-sales.component.css","./src/app/editForms/editSales/edit-sales.component.html","./src/app/editForms/editSales/edit-sales.component.ts","./src/app/editForms/editSales/edit-sales.module.ts","./src/app/forms-center/forms-center.component.css","./src/app/forms-center/forms-center.component.html","./src/app/forms-center/forms-center.component.ts","./src/app/forms-center/forms-center.module.ts","./src/app/forms/labelForm/label-form.component.css","./src/app/forms/labelForm/label-form.component.html","./src/app/forms/labelForm/label-form.component.ts","./src/app/forms/labelForm/label-form.module.ts","./src/app/forms/productForm/form-routing.module.ts","./src/app/forms/productForm/form.component.css","./src/app/forms/productForm/form.component.html","./src/app/forms/productForm/form.component.ts","./src/app/forms/productForm/form.module.ts","./src/app/forms/productFormRelink/form-relink-routing.module.ts","./src/app/forms/productFormRelink/form-relink.component.css","./src/app/forms/productFormRelink/form-relink.component.html","./src/app/forms/productFormRelink/form-relink.component.ts","./src/app/forms/productFormRelink/form-relink.module.ts","./src/app/forms/salesForm/sales-form.component.css","./src/app/forms/salesForm/sales-form.component.html","./src/app/forms/salesForm/sales-form.component.ts","./src/app/forms/salesForm/sales-form.module.ts","./src/app/forms/searchAllForm/search-all.component.css","./src/app/forms/searchAllForm/search-all.component.html","./src/app/forms/searchAllForm/search-all.component.ts","./src/app/forms/searchAllForm/search-all.module.ts","./src/app/imports/importCSV/import-csv-routing.module.ts","./src/app/imports/importCSV/import-csv.component.css","./src/app/imports/importCSV/import-csv.component.html","./src/app/imports/importCSV/import-csv.component.ts","./src/app/imports/importCSV/import-csv.module.ts","./src/app/imports/importImages/import-images-routing.module.ts","./src/app/imports/importImages/import-images.component.css","./src/app/imports/importImages/import-images.component.html","./src/app/imports/importImages/import-images.component.ts","./src/app/imports/importImages/import-images.module.ts","./src/app/modal-box/autofocus.directive.ts","./src/app/modal-box/modal-box.component.css","./src/app/modal-box/modal-box.component.html","./src/app/modal-box/modal-box.component.ts","./src/app/modal-box/modal-box.module.ts","./src/app/pagination/pagination.component.css","./src/app/pagination/pagination.component.html","./src/app/pagination/pagination.component.ts","./src/app/pagination/pagination.model.ts","./src/app/pagination/style.directive.ts","./src/app/progressSpinner/progress-spinner.component.css","./src/app/progressSpinner/progress-spinner.component.html","./src/app/progressSpinner/progress-spinner.component.ts","./src/app/progressSpinner/progress-spinner.module.ts","./src/app/radio-button/radio-button-routing.module.ts","./src/app/radio-button/radio-button.component.css","./src/app/radio-button/radio-button.component.html","./src/app/radio-button/radio-button.component.ts","./src/app/radio-button/radio-button.module.ts","./src/app/services/create-records.service.ts","./src/app/services/delete-record.service.ts","./src/app/services/edit-records.service.ts","./src/app/services/getRecord.service.ts","./src/app/services/search.service.ts","./src/app/shared/format-cell.pipe.ts","./src/app/shared/shared.module.ts","./src/app/shared/style-cell.directive.ts","./src/app/shared/table-layout.component.css","./src/app/shared/table-layout.component.html","./src/app/shared/table-layout.component.ts","./src/app/table/table.component.css","./src/app/table/table.component.html","./src/app/table/table.component.ts","./src/app/table/table.module.ts","./src/app/views/viewPackage/view-package-routing.module.ts","./src/app/views/viewPackage/view-package.component.css","./src/app/views/viewPackage/view-package.component.html","./src/app/views/viewPackage/view-package.component.ts","./src/app/views/viewPackage/view-package.module.ts","./src/app/views/viewProduct/view-product-routing.module.ts","./src/app/views/viewProduct/view-product.component.css","./src/app/views/viewProduct/view-product.component.html","./src/app/views/viewProduct/view-product.component.ts","./src/app/views/viewProduct/view-product.module.ts","./src/app/views/viewSales/view-sales-routing.module.ts","./src/app/views/viewSales/view-sales.component.css","./src/app/views/viewSales/view-sales.component.html","./src/app/views/viewSales/view-sales.component.ts","./src/app/views/viewSales/view-sales.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { AddImageComponent }    from './add-image.component';\n \nconst addSingleImage: Routes = [\n  { path: 'addImage',  component: AddImageComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(addSingleImage)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AddImageRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/addImage/add-image-routing.module.ts","module.exports = \"\\n\\n\\n.selected{\\n    font-weight: bold;\\n    color: crimson;\\n}\\n.selectedSales{\\n    font-weight: bold;\\n    color: darkblue;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/addImage/add-image.component.css\n// module id = ./src/app/addImage/add-image.component.css\n// module chunks = main","module.exports = \"\\n<div style=\\\"background-color:white; padding:20px; border:1px solid lightgray; background-color:transparent\\\">\\n    <!-- <span style=\\\"margin-left:10px; font-size:1.5em\\\">Import images</span> -->\\n\\n    <div class=\\\"row\\\" style=\\\"display: flex; min-height:150px;flex-wrap: wrap\\\">\\n        \\n        \\n        <div style=\\\"flex: 1 0 150px; background-color:white; border:1.5px solid lightgray;margin:10px;\\\">\\n\\n            <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"addImageForm\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\" style=\\\"margin-top:13%\\\">\\n\\n\\n\\n      \\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label col-sm-3\\\" for=\\\"file\\\">Select a file:</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <input type=\\\"file\\\" class=\\\"form-control\\\" #fileInput name=\\\"image\\\" id=\\\"file\\\" formControlName=\\\"image\\\"  (change)=\\\"validateFile($event)\\\" style=\\\"width:100%\\\" accept=\\\".jpg, .jpeg, .png\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"float:right;\\\">\\n\\n                            <button style=\\\"margin-right:20px; width:80px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" >Import</button>\\n                            <button style=\\\" margin-right:20px; width:80px\\\" (click)=\\\"cancelAction()\\\" class=\\\"btn btn-default\\\" >Cancel</button>\\n\\n                    </div>\\n\\n            </form>\\n\\n\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\" style=\\\"margin:6px\\\">\\n                    <strong>Error!</strong> {{errorMessage}}\\n            </div>\\n                  <div *ngIf=\\\"isLoading\\\">\\n                        \\n                        <progress-spinner></progress-spinner>\\n                      </div>\\n                      \\n        </div>\\n\\n    </div>\\n</div>\\n\\n<confirm-box [flag]=\\\"flag\\\"></confirm-box>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/addImage/add-image.component.html\n// module id = ./src/app/addImage/add-image.component.html\n// module chunks = main","import { Component, OnChanges, Input, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { CreateRecordService } from '../services/create-records.service';\nimport { saveAs } from 'file-saver/FileSaver';\nimport { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions, ResponseContentType } from '@angular/http';\n// import { EventEmitter } from 'events';\n\n\nexport const saveFile = (blobContent: Blob, fileName: string) => {\n    const blob = new Blob([blobContent], { type: 'application/octet-stream' });\n    saveAs(blob, fileName);\n};\n\n\nexport const getFileNameFromResponseContentDisposition = (res: Response) => {\n    const contentDisposition = res.headers.get('content-disposition') || '';\n    const matches = /filename=([^;]+)/ig.exec(contentDisposition);\n    const fileName = (matches[1] || 'untitled').trim();\n\n    return fileName;\n};\n\nexport type ImageModel = {\n    image_name: string,\n    image_id: number\n};\n@Component({\n    selector: 'add-image',\n    templateUrl: './add-image.component.html',\n    styleUrls: ['./add-image.component.css']\n\n\n})\n@Injectable()\nexport class AddImageComponent {\n\n    flag: number;\n    @Input() id: number;\n    @Output() imagesList = new EventEmitter<ImageModel[]>();\n    listReturn: string[];\n    addImageForm: FormGroup;\n    isLoading: boolean = false;\n    submitted = false;\n    serverDown: boolean = false;\n    errorMessage: string = null;\n    file: File;\n    validFile: boolean;\n    validSize: boolean;\n    sizeOfFile: string = \"20 Mb\";\n    currentlySelectedValue: number = 1;\n\n    @ViewChild('fileInput') fileInput;\n\n\n    constructor(private fb: FormBuilder, private createRecordService: CreateRecordService, private http: Http) {\n        this.createForm();\n    }\n\n\n\n    createForm() {\n        this.addImageForm = this.fb.group({\n            image: null\n        });\n\n    }\n\n    onSubmit() {\n        this.flag = null;\n        const options = new RequestOptions({ responseType: ResponseContentType.Blob });\n\n\n        let headers = new Headers();\n        headers.append('Accept', 'text/plain');\n        let fileBrowser = this.fileInput.nativeElement;\n        let formData: FormData = new FormData();\n\n\n        if (fileBrowser.files.size < 1) {\n            this.validFile = false;\n            this.errorMessage = \"Must select at least one file\";\n        }\n\n\n        formData.append('image', fileBrowser.files[0], fileBrowser.files[0].name);\n\n\n        this.submitted = true;\n        this.isLoading = true\n\n        this.http.post(`http://localhost:8080/fcdr-rest-service/rest/PackageService/addImage/${this.id}`, formData)\n            .map(r => r.json())\n            .finally(() => { this.isLoading = false; this.submitted = false; })\n            .subscribe(response => {\n                console.log(\"Here\", response);\n        if (response.status == 200) {\n                    this.flag = 1;\n                    //setTimeout(()=>{this.flag = 1;},3000)\n\n                    setTimeout(() => { this.imagesList.emit(response.dataList) }, 3000)\n\n\n                } else {\n                    this.flag = 2;\n                    setTimeout(() => { this.imagesList.emit(null) }, 3000)\n                }\n\n                //  saveFile(response, \"importImagesReport.txt\");\n                this.addImageForm.controls['image'].setValue(null);\n            }\n                , (error) => {\n                    this.errorMessage = \"Can't access the server at this time\";\n                    this.serverDown = true;\n                    this.addImageForm.controls['image'].setValue(null);\n                    this.imagesList.emit(null);\n\n                });\n\n\n    }\n\n    downloadFile(data: Response) {\n        var blob = new Blob([data], { type: 'text/plain' });\n        var url = window.URL.createObjectURL(blob);\n        window.open(url);\n    }\n    validateFile(input: EventTarget) {\n\n        this.validFile = true;\n        this.validSize = true;\n        this.errorMessage = null;\n\n\n        let eventObj: MSInputMethodContext = <MSInputMethodContext>input;\n        let target: HTMLInputElement = <HTMLInputElement>eventObj.target;\n        let files: FileList = target.files;\n\n\n        this.file = files[0];\n        let totalSize = 0;\n        for (var i = 0; i < files.length; i++) {\n\n            totalSize += files[i].size;\n\n        }\n\n\n    }\n    cancelAction() {\n        this.imagesList.emit(null);\n\n\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/addImage/add-image.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AddImageComponent }  from './add-image.component';\nimport {AddImageRoutingModule} from './add-image-routing.module'\n import {PaginationModelModule} from '../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\nimport {ProgressSpinnerModule} from '../progressSpinner/progress-spinner.module'\nimport {ConfirmBoxModule} from '../confirmbox/confirm-box.module'\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatProgressBarModule,\nAddImageRoutingModule,\nProgressSpinnerModule,\nBrowserModule,\nPaginationModelModule,\nConfirmBoxModule\n      \n       ],\n  declarations: [ \n\n    AddImageComponent\n    ],\n  exports: [\n    AddImageComponent\n   ]\n\n})\nexport class AddImageModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/addImage/add-image.module.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n import { FormComponent } from './forms/productForm/form.component';\n\n\n\nconst appRoutes: Routes = [\n    { path: '',   redirectTo: '/searchengine/search', pathMatch: 'full' },\n\n];\n\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(\n            appRoutes,\n            { enableTracing: true } // <-- debugging purposes only\n        )\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"/*.homeIcon{\\n\\n    font-size: 170%\\n}\\n.title{\\n\\n    font-size: 200%\\n}\\n.headerCard{\\n    top:0;\\n    background-color: #33cccc;\\n   position: fixed;\\n    width: 100%;\\n    height: 130px;\\n    z-index: 99;\\n}\\n.groupHeader{\\n    position: absolute;\\n    padding-left: 2.5%;\\n    padding-top: 40px;\\n \\n}\\n\\n\\n\\n\\n\\n  ul{\\n      \\n      list-style-type: none;\\n      \\n     padding: 0;\\n     margin: 0;\\n     overflow: hidden;\\n     margin-bottom: 5px;\\n  \\n  }\\nli a{\\n    text-decoration: none;\\n    padding: 18px;\\n    display: block;\\n    background-color: white;\\n    text-transform: uppercase;\\n}\\nul li{\\n    \\n  \\n     \\n     float: left;\\n        \\n}\\n\\n* {\\n    filter: blue(.0px);\\n    perspective: 1000;\\n    backface-visibility: hidden;\\n}\\n.navBar{\\n \\n    margin-top: 132px;\\n    height: 40px;\\n    width: 100%;\\n    border-bottom-color: #33cccc;\\n\\n    \\n}\\n.content{\\n    margin-top:25px;\\n    z-index: 100;\\n}*/\\n\\n\\n/*html, html a, *{\\n  -webkit-transform: translate3d(0,0,0) !important;\\n  transform: translate3d(0,0,0) !important;\\n}*/\\n\\n\\n/** {\\n    font-family: Roboto, sans-serif;\\n}*/\\n\\n\\n#wb-cont{\\n    border-bottom: 1px solid #af3c43;\\n    font-size: 34px;\\n    margin-bottom:.2em;\\n    margin-top:1.25em;\\n    padding-bottom: .2em;\\n}\\n\\n\\n.innerNav a {\\n  padding: 5px 10px;\\n  text-decoration: none;\\n  margin-right: 10px;\\n  margin-top: 10px;\\n  display: inline-block;\\n  background-color: #eee;\\n  border-radius: 4px;\\n}\\n\\n\\n.innerNav nav a:visited,.innerNav a:link {\\n  color: #607D8B;\\n}\\n\\n\\n.innerNav a:hover {\\n  color: #039be5;\\n  background-color: #CFD8DC;\\n}\\n\\n\\n.innerNav  a.active {\\n  color: #039be5;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"\\n\\n\\t  <header role=\\\"banner\\\">\\n<div id=\\\"wb-bnr\\\" class=\\\"container\\\">\\n\\n<div class=\\\"row\\\">\\n<div class=\\\"brand col-xs-8 col-sm-9 col-md-6\\\">\\n<a href=\\\"https://www.canada.ca/en.html\\\">\\n<img src='GCWeb/assets/sig-blk-en.svg' alt=\\\"Symbol of the Government of Canada\\\">\\n\\n<!--<object type=\\\"image/svg+xml\\\" tabindex=\\\"-1\\\" data=\\\"GCWeb/assets/sig-blk-en.svg\\\"></object>-->\\n<span class=\\\"wb-inv\\\"> Government of Canada / <span lang=\\\"fr\\\">Gouvernement du Canada</span></span></a>\\n</div>\\n<section class=\\\"wb-mb-links col-xs-4 col-sm-3 visible-sm visible-xs\\\" id=\\\"wb-glb-mn\\\">\\n<h2>Search and menus</h2>\\n<ul class=\\\"list-inline text-right chvrn\\\">\\n<li><a href=\\\"#mb-pnl\\\" title=\\\"Search and menus\\\" aria-controls=\\\"mb-pnl\\\" class=\\\"overlay-lnk\\\" role=\\\"button\\\"><span class=\\\"glyphicon glyphicon-search\\\"><span class=\\\"glyphicon glyphicon-th-list\\\"><span class=\\\"wb-inv\\\">Search and menus</span></span></span></a></li>\\n</ul>\\n<div id=\\\"mb-pnl\\\"></div>\\n</section>\\n</div>\\n</div>\\n<nav role=\\\"navigation\\\" id=\\\"wb-sm\\\" data-ajax-replace=\\\"ajax/sitemenu-en.html\\\" data-trgt=\\\"mb-pnl\\\" class=\\\"wb-menu visible-md visible-lg\\\" typeof=\\\"SiteNavigationElement\\\">\\n<div class=\\\"container nvbar\\\">\\n<h2>Food Component Data Repository</h2>\\n<div class=\\\"row\\\">\\n<ul class=\\\"list-inline menu\\\">\\n<li><a routerLink=\\\"/searchengine\\\" routerLinkActive=\\\"active fluffy\\\">Search</a></li>\\n<li><a routerLink=\\\"/createproduct\\\" routerLinkActive=\\\"active fluffy\\\">Create product</a></li>\\n<li><a routerLink=\\\"/importFile\\\" routerLinkActive=\\\"active fluffy\\\">Import CSV files</a></li>\\n<li><a routerLink=\\\"/importImages\\\" routerLinkActive=\\\"active fluffy\\\">Import images</a></li>\\n</ul>\\n</div>\\n</div>\\n</nav>\\n\\n</header>\\n\\n\\n<main class=\\\"container\\\">\\n<h2 id=\\\"wb-cont\\\">Food Component Data Repository</h2>\\n<div style=\\\"min-height: 550px\\\">\\n\\n     <router-outlet></router-outlet>\\n     <!-- <router-outlet name=\\\"popup\\\"></router-outlet> -->\\n\\n</div>\\n</main>\\n<!--</div>-->\\n<!--<radio-button></radio-button>-->\\n<!--<form-comp></form-comp>-->\\n<!--<ct-project-center></ct-project-center>-->\\n\\n\\n<!--[if gte IE 9 | !IE ]><!-->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport {SearchService} from './services/search.service';\n// import {MatIconRegistry} from '@angular/material';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  list  = [\"radiobutton\"]\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule }       from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations'\nimport {Headers, HttpModule} from '@angular/http';\nimport {  MatIconRegistry} from '@angular/material';\nimport { CommonModule } from '@angular/common'; \nimport {MatIconModule} from '@angular/material/icon';\n\nimport { AppComponent }  from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport {MatRadioModule} from '@angular/material/radio'\n\n\n\nimport { SearchService } from './services/search.service';\nimport { CreateRecordService } from './services/create-records.service';\nimport { EditRecordService } from './services/edit-records.service'\nimport { DeleteRecordService } from './services/delete-record.service'\n\n\n\n\nimport {FormModule} from './forms/productForm/form.module';\nimport {FormRelinkModule} from './forms/productFormRelink/form-relink.module';\n\n\nimport { SalesFormModule }  from './forms/salesForm/sales-form.module'; \nimport {ViewSalesModule} from './views/viewSales/view-sales.module';\nimport {CreateSalesModule} from './createRecords/createSales/create-sales.module'\nimport { EditSalesModule}  from './editForms/editSales/edit-sales.module'; \nimport { EditLabelModule}  from './editForms/editPackage/edit-label.module'; \n\n\n\n\nimport { LabelFormComponent }  from './forms/labelForm/label-form.component'; \nimport { LabelFormModule}  from './forms/labelForm/label-form.module'; \nimport { CreateLabelModule }  from './createRecords/createLabel/create-label.module'; \nimport {ViewPackageModule} from './views/viewPackage/view-package.module';\n\n\n\nimport { SearchAllModule }  from './forms/searchAllForm/search-all.module'; \n\nimport {ViewProductModule} from './views/viewProduct/view-product.module';\n\nimport { EditProductModule}  from './editForms/editProduct/edit-product.module'; \nimport { CreateProductModule }  from './createRecords/createProduct/create-product.module'; \nimport {FormsCenterModule} from './forms-center/forms-center.module'\nimport {ProgressSpinnerModule} from './progressSpinner/progress-spinner.module'\n\n\nimport {EditNftModule} from './editForms/editNft/edit-nft.module'\n\nimport {PaginationModelModule} from './pagination/pagination.model'\nimport {CustumTableModule} from './table/table.module'\nimport {RadioButtonModule} from './radio-button/radio-button.module'\nimport {SharedModule} from './shared/shared.module';\nimport {ModalBoxModule} from './modal-box/modal-box.module'\nimport { AddClassificationModule }  from './classification-center/add-classification/add-classification.module'; \n \nimport {ImportCsvModule} from './imports/importCSV/import-csv.module'\n\nimport {ImportImagesModule} from './imports/importImages/import-images.module'\n\nimport {CreateNftModule} from './createRecords/createNft/create-nft.module'\n\nimport {ConfirmBoxModule} from './confirmbox/confirm-box.module';\nimport {AddImageModule} from './addImage/add-image.module'\n\n\n\n\n@NgModule({\n  imports:      [ \n      BrowserAnimationsModule,\n      BrowserModule,\n      FormsCenterModule,\n      FormModule,\n      ConfirmBoxModule,\n      EditSalesModule,\n      AppRoutingModule,\n      HttpModule,\n      SalesFormModule,\n      LabelFormModule,\n      EditProductModule,\n      CreateSalesModule,\n      ViewSalesModule,\n      MatRadioModule,\n      SearchAllModule,\n      CreateLabelModule,\n      RadioButtonModule,\n      CustumTableModule,\n      PaginationModelModule,\n      SharedModule,\n      CommonModule,\n      ViewProductModule,\n      MatIconModule,\n      ModalBoxModule,\n      AddClassificationModule,\n      CreateProductModule,\n      CreateNftModule,\n      EditLabelModule,\n      EditNftModule,\n      FormRelinkModule,\n      ImportCsvModule,\n      ProgressSpinnerModule,\n      ImportImagesModule,\n      AddImageModule\n      \n       ],\n  declarations: [ \n    AppComponent\n    \n    ],\n   providers: [\n        MatIconRegistry,\n     //   SearchService,\n        CreateRecordService\n    \n\n    ],\n  bootstrap:    [ AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"md-input-container,  div.flex {\\n    width: 98%;\\n    margin-left: 10px;\\n    margin-right: 10px;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n     -webkit-box-flex: 1;\\n         -ms-flex: 1;\\n             flex: 1;\\n     \\n}\\n md-select{\\n    width: 96%;\\n    margin-left: 10px;\\n    margin-right: 23px;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n\\n }\\n div.flex{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classification-center/add-classification/add-classification.component.css\n// module id = ./src/app/classification-center/add-classification/add-classification.component.css\n// module chunks = main","module.exports = \"<!--<div *ngIf=\\\"1\\\">\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"classificationtForm\\\" *ngIf=\\\"dataSaved\\\">\\n        <div class=\\\"flex row\\\" *ngIf=\\\"listOfClass != null\\\">\\n\\n\\n\\n            <md-select  placeholder=\\\"Classification Number\\\" formControlName=\\\"classificationNumber\\\">\\n                <md-option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classificationNumber\\\">{{classifi.classificationNumber}}</md-option>\\n\\n            </md-select>\\n\\n        </div>\\n        <div class=\\\"flex row\\\" *ngIf=\\\"listOfClass != null\\\">\\n      \\n\\n\\n            <md-select placeholder=\\\"Classification Name\\\" formControlName=\\\"classificationName\\\">\\n                <md-option *ngFor=\\\"let class of listOfClass;let i = index\\\" [value]=\\\"class.classificationName\\\">{{class.classificationName}}</md-option>\\n\\n            </md-select>\\n    \\n\\n        </div>\\n        <div class=\\\"flex row\\\">\\n\\n            <md-input-container>\\n                <input mdInput placeholder=\\\"Classification Type\\\" formControlName=\\\"classificationType\\\">\\n            </md-input-container>\\n\\n\\n        </div>\\n        <div style=\\\"float: right\\\">\\n<button type=\\\"submit\\\" [disabled]=\\\"!classificationtForm.valid\\\">SUBMIT</button>\\n<button (click)=\\\"resetValues()\\\">RESET</button>\\n</div>\\n</form>\\n<div *ngIf=\\\"!dataSaved\\\">\\n    Data successfuly saved, exit now!\\n</div>\\n</div>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/classification-center/add-classification/add-classification.component.html\n// module id = ./src/app/classification-center/add-classification/add-classification.component.html\n// module chunks = main","import { Component, OnChanges, Input, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { SearchService } from '../../services/search.service';\n\nimport { Classification_name, Classification_number, addClass,InsertDataMessage,ClassificationList } from '../../data-model';\n\n@Component({\n    selector: 'add-classification',\n    templateUrl: './add-classification.component.html',\n    styleUrls: ['./add-classification.component.css']\n\n\n})\nexport class AddClassificationComponent implements OnChanges {\n\n    @Input() credentials: any;\n    classificationList: addClass = new addClass();\n    listOfClass: addClass[];\n    classificationtForm: FormGroup;\n    Classification_name = Classification_name;\n    Classification_number = Classification_number;\n    dataSaved: boolean = true;\n    constructor(private fb: FormBuilder,\n                private service: SearchService) {\n        this.createForm();\n\n\n    }\n\n    ngOnChanges() {\n\n\n        this.classificationtForm.setValue({\n            classificationName: this.classificationList.classificationName,\n            classificationNumber: this.classificationList.classificationNumber,\n            classificationType: this.classificationList.classificationType\n\n        }\n        );\n\n\n    }\n    ngOnInit(){\n   \n                this.service.getClassification().subscribe(response =>\n                {  \n                 const cl = response;\n                  this.listOfClass = response.data.dataList;\n                 console.log(\"HUMMM\",  this.listOfClass);\n\n                 }\n            );\n\n    }\n\n\n    createForm() {\n        this.classificationtForm = this.fb.group({\n            classificationNumber: '',\n            classificationName: '',\n            classificationType: ''\n        });\n\n    }\n\n\n    onSubmit() {\n        this.setValues();\n        console.log(JSON.stringify(this.classificationList), \"PYESSOOO\");\n\n\n    }\n    setValues() {\n        this.classificationList = this.classificationtForm.value;\n        this.classificationList.productId = this.credentials.productId;\n    }\n\n    callAlex(n: string) {\n\n        console.log(n, \"is the index\");\n\n        this.classificationtForm.controls['classificationName'].setValue(this.Classification_name[0]);\n\n    }\n    resetValues() {\n        this.classificationtForm.reset();\n        \n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/classification-center/add-classification/add-classification.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AddClassificationComponent }  from './add-classification.component';\n//  import {MdCardModule,MdProgressBarModule, MdInputModule, MdButtonModule,MdSidenavModule, MdSelectModule, MdSliderModule,MdNativeDateModule, MdRadioModule, MdDatepickerModule} from '@angular/material'\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\n// MdCardModule,\n// MdProgressBarModule,\n// MdInputModule,\n// MdButtonModule,\n// MdSidenavModule,\n// MdSelectModule,\n// MdSliderModule,\nBrowserModule,\n      \n       ],\n  declarations: [ \n\n    AddClassificationComponent\n    ],\n  exports: [\n    AddClassificationComponent\n   ]\n\n})\nexport class AddClassificationModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/classification-center/add-classification/add-classification.module.ts","module.exports = \".confirmBox{\\n\\nposition: fixed;\\nleft: 0;\\nright: 0;\\nbottom: -100px;\\nheight: 100px;\\n-webkit-animation-name: example;\\n-webkit-animation-duration: 3s;\\nanimation-name: example;\\nanimation-duration: 3s;\\nz-index: 100;\\n\\n}\\n\\n.mainContaint{\\n\\n    top: 20%;\\n    left:70%;     \\n    position: absolute;\\n    -webkit-transform: translate(-50%,-50%);\\n            transform: translate(-50%,-50%);\\n    width: 80%;\\n    font-size: 2em;\\n    margin: auto;\\n\\n    -webkit-transform: translate3d(-50%,0,0) !important;\\n    transform: translate3d(-50%,0,0) !important;\\n}\\n\\n@-webkit-keyframes example{\\n0% {bottom: -100px; }    \\n20%{bottom: 0;}\\n80%{bottom: 0;}\\n100%{bottom: -100px}\\n\\n\\n}\\n\\n@keyframes example{\\n0% {bottom: -100px; }    \\n20%{bottom: 0;}\\n80%{bottom: 0;}\\n100%{bottom: -100px}\\n\\n\\n}\\n\\n.success{\\nbackground-color: #dff0d8;\\ncolor: #3c763d;\\n}\\n\\n.failure{\\n    background-color: #f2dede;\\ncolor: #a94442;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/confirmbox/confirm-box.component.css\n// module id = ./src/app/confirmbox/confirm-box.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"flag\\\" class=\\\"confirmBox\\\" [ngClass]=\\\"{'success': flag ===1 , 'failure':flag ===2} \\\">\\n<div class=\\\"mainContaint\\\">\\n    <ng-container *ngIf=\\\"flag === 1\\\">\\n        Transaction successfully executed. One moment...\\n    </ng-container>\\n        <ng-container *ngIf=\\\"flag === 2\\\">\\n        Failed transaction.\\n    </ng-container>\\n</div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/confirmbox/confirm-box.component.html\n// module id = ./src/app/confirmbox/confirm-box.component.html\n// module chunks = main","import { Component, Input, EventEmitter, Output } from '@angular/core';\n// import {MdIconRegistry} from '@angular/material';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n\n@Component({\n    selector: 'confirm-box',\n    templateUrl: './confirm-box.component.html',\n    styleUrls: ['./confirm-box.component.css']\n\n\n})\nexport class ConfirmBoxComponent{\n\n@Input() flag: number;\n\n// @Output() displayModal= new EventEmitter<boolean>();\n\n  constructor() {\n\n  }\n\n\n\n// update(){\n//     this.displayModal.emit(true);\n// }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/confirmbox/confirm-box.component.ts","import { NgModule } from '@angular/core';\n import { CommonModule } from '@angular/common';\n import { ConfirmBoxComponent} from './confirm-box.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n    imports:[\n        CommonModule,\n         BrowserModule,\n\n    ],\n    declarations:[\n    ConfirmBoxComponent\n    ],\n    exports: [\n        ConfirmBoxComponent\n    ]\n\n\n})\n\nexport class ConfirmBoxModule{\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/confirmbox/confirm-box.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateLabelComponent }  from './create-label.component';\n\n\nconst createLabeltRoutes: Routes = [\n\n    {\n        path: 'add-label/:id', component: CreateLabelComponent\n    },\n\n\n];\n\n@NgModule({\n  imports: [\n            RouterModule.forRoot(\n            createLabeltRoutes,\n            { enableTracing: true } // <-- debugging purposes only\n        )\n  ],\n  declarations: []\n})\nexport class CreateLabelRoutingModule {\n\n\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createLabel/create-label-routing.module.ts","module.exports = \"\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n\\n.form-control {\\n    width: 100% !important;\\n}\\n\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n\\n.DivHeader{\\n    position: relative;\\n}\\n\\ndiv.bodycard{\\n    position: relative;\\n}\\n\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n\\n.dateIcon{\\n\\n    position: absolute;\\ntop: 26px;\\n    right: 9px;\\n\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createLabel/create-label.component.css\n// module id = ./src/app/createRecords/createLabel/create-label.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\" style=\\\"margin-bottom: 60px;\\\">\\n    <div class=\\\"DivLogo\\\">\\n        Create Label\\n    </div>\\n\\n    <div class=\\\"bodycard\\\">\\n        <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n            <div class=\\\"well2\\\">\\n\\n                <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"labelForm\\\">\\n\\n\\n\\n\\n                    <div class=\\\"row\\\">\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"informedDiningProgram\\\">Informed Dining Program</label>\\n                            <select class=\\\"form-control\\\" id=\\\"informedDiningProgram\\\" formControlName=\\\"informed_dining_program\\\">\\n\\n                                <option value=\\\"\\\" selected>Informed Dining Program?</option>\\n                                <option value=\\\"1\\\">Yes</option>\\n                                <option value=\\\"0\\\">No</option>\\n                            </select>\\n                        </div>\\n\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"nftLastUpdate\\\">NFT Last Update (mm-dd-yyyy)</label>\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"nftLastUpdate\\\" formControlName=\\\"nft_last_update_date\\\">\\n\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"childItem\\\">Child Item</label>\\n                            <select class=\\\"form-control\\\" id=\\\"childItem\\\" formControlName=\\\"child_item\\\">\\n\\n                                <option value=\\\"\\\" selected>Child Item?</option>\\n                                <option value=\\\"1\\\">Yes</option>\\n                                <option value=\\\"0\\\">No</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"productGrouping\\\">Product Grouping</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productGrouping\\\" placeholder=\\\"Product Grouping\\\" formControlName=\\\"product_grouping\\\">\\n\\n                            <div *ngIf=\\\"formErrors.product_grouping\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.product_grouping}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageUpc\\\" class=\\\"required\\\">Label UPC\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageUpc\\\" placeholder=\\\"Label UPC\\\" formControlName=\\\"package_upc\\\">\\n                            <div *ngIf=\\\"formErrors.package_upc\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_upc}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageDescription\\\" class=\\\"required\\\">Label Description\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageDescription\\\" placeholder=\\\"Label Description\\\" formControlName=\\\"package_description\\\">\\n\\n                            <div *ngIf=\\\"formErrors.package_description\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_description}}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"packageClassificationName\\\">Classification Name</label>\\n                            <select class=\\\"form-control\\\" id=\\\"packageClassificationName\\\" formControlName=\\\"classification_name\\\" (ngModelChange)=\\\"setClassificationName($event)\\\">\\n                                <option value=\\\"\\\" selected>Select a Classification Name</option>\\n                                <option *ngFor=\\\"let class of listOfClass;let i = index\\\" [value]=\\\"class.classification_name\\\">{{class.classification_name}}</option>\\n\\n                            </select>\\n\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"packageClassificationNumber\\\">Classification Number</label>\\n                            <select class=\\\"form-control\\\" id=\\\"packageClassificationNumber\\\" formControlName=\\\"classification_number\\\" (ngModelChange)=\\\"callAlex($event)\\\">\\n                                <option value=\\\"\\\" selected>Select a Classification Number</option>\\n                                <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n\\n\\n                            </select>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"nielsenItemRank\\\">Nielsen Item Rank UPC</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nielsenItemRank\\\" placeholder=\\\"Nielsen Item Rank UPC\\\" formControlName=\\\"nielsen_item_rank\\\">\\n                            <div *ngIf=\\\"formErrors.nielsen_item_rank\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.nielsen_item_rank}}</span>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"nielsenCategory\\\">Nielsen Category</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nielsenCategory\\\" placeholder=\\\"Nielsen Category\\\" formControlName=\\\"package_nielsen_category\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageBrand\\\">Brand</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageBrand\\\" placeholder=\\\"Brand\\\" formControlName=\\\"package_brand\\\">\\n\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageManufacturer\\\">Manufacturer </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageManufacturer\\\" placeholder=\\\"Manufacturer\\\" formControlName=\\\"package_manufacturer\\\">\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"packageCountry\\\">Country</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageCountry\\\" placeholder=\\\"Country\\\" formControlName=\\\"package_country\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageSize\\\">Net Quantity</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageSize\\\" [required]=\\\"requiredField\\\" (ngModelChange)=\\\"validateNetQuantiyOther($event)\\\"  placeholder=\\\"Net Quantity\\\" formControlName=\\\"package_size\\\">\\n                            <div *ngIf=\\\"formErrors.package_size\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_size}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n                            <label for=\\\"packageSizeUnitOfMeasure\\\">Net Quantity unit of measure</label>\\n                            <select class=\\\"form-control\\\" id=\\\"packageSizeUnitOfMeasure\\\"  (ngModelChange)=\\\"validateNetQuantiy($event)\\\" [required]=\\\"requiredFieldOther\\\" formControlName=\\\"package_size_unit_of_measure\\\">\\n\\n                                <option value=\\\"\\\" selected>Net Quantity unit of measure</option>\\n\\n                                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n\\n                            </select>\\n                            <div *ngIf=\\\"formErrors.package_size_unit_of_measure\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_size_unit_of_measure}}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"numberOfUnits\\\">Number of Units</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"numberOfUnits\\\" placeholder=\\\"Number of Units\\\" style=\\\"width:540px\\\" formControlName=\\\"number_of_units\\\">\\n                            <div *ngIf=\\\"formErrors.number_of_units\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.number_of_units}}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"multiPartPackage\\\">Multi Part Package?</label>\\n                            <select class=\\\"form-control\\\" id=\\\"multiPartPackage\\\" formControlName=\\\"multi_part_flag\\\" style=\\\"width:540px\\\">\\n\\n                                <option value=\\\"\\\" selected>Select a Multi Part Package</option>\\n                                <option value=\\\"1\\\">Yes</option>\\n                                <option value=\\\"0\\\">No</option>\\n                            </select>\\n                        </div>\\n\\n\\n\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"storageType\\\">Storage Type</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"storageType\\\" style=\\\"width:540px\\\" placeholder=\\\"Storage Type\\\" formControlName=\\\"storage_type\\\">\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"commonHouseholdMeasure\\\">Common Household Measure</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"commonHouseholdMeasure\\\" style=\\\"width:540px\\\" placeholder=\\\"Common Household Measure\\\"\\n                                formControlName=\\\"common_household_measure\\\">\\n\\n                        </div>\\n\\n\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <label for=\\\"Ingredients\\\">Ingredients</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"Ingredients\\\" placeholder=\\\"Ingredients\\\" formControlName=\\\"ingredients\\\" rows=\\\"2\\\">\\n                </textarea>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <label for=\\\"nutritionFactTable\\\">Ingredients</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"nutritionFactTable\\\" placeholder=\\\"Nutrition Fact Table\\\" formControlName=\\\"nutrition_fact_table\\\"\\n                                rows=\\\"2\\\">\\n                </textarea>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"suggestedDirections\\\">Suggested Direction </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"suggestedDirections\\\" placeholder=\\\"Suggested Directions\\\" formControlName=\\\"suggested_directions\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"nutrientClaims\\\">Nutrient Claims </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nutrientClaims\\\" placeholder=\\\"Nutrient Claims\\\" formControlName=\\\"nutrient_claims\\\">\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"otherPackageStatements\\\">Other Package Statements </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"otherPackageStatements\\\" placeholder=\\\"Other Package Statements\\\" formControlName=\\\"other_package_statements\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"healthClaims\\\">Health Claims </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"healthClaims\\\" placeholder=\\\"Health Claims\\\" formControlName=\\\"health_claims\\\">\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"storageStatements\\\">Storage Statements </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"storageStatements\\\" placeholder=\\\"Storage Statements\\\" formControlName=\\\"storage_statements\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"packageComments\\\">Comments</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageComments\\\" placeholder=\\\"Comments\\\" formControlName=\\\"package_comment\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"package_collection_date\\\" class=\\\"required\\\">Collection Date\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"package_collection_date\\\" formControlName=\\\"package_collection_date\\\">\\n                            <div *ngIf=\\\"formErrors.package_collection_date\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_collection_date}}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageSource\\\" class=\\\"required\\\">Source\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageSource\\\" placeholder=\\\" Source\\\" formControlName=\\\"package_source\\\">\\n\\n                            <div *ngIf=\\\"formErrors.package_source\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_source}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"asSoldPerServingAmountInGram\\\">Per Serving Amount (grams)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"asSoldPerServingAmountInGram\\\" style=\\\"width:540px\\\" placeholder=\\\"Per Serving Amount (grams)\\\"\\n                                formControlName=\\\"as_sold_per_serving_amount_in_grams\\\">\\n                            <div *ngIf=\\\"formErrors.as_sold_per_serving_amount_in_grams\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_sold_per_serving_amount_in_grams}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"numberOfUnits\\\">PPD Per Serving Amount (grams)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"numberOfUnits\\\" style=\\\"width:540px\\\" placeholder=\\\"PPD Per Serving Amount (grams)\\\"\\n                                formControlName=\\\"as_prepared_per_serving_amount_in_grams\\\">\\n                            <div *ngIf=\\\"formErrors.as_prepared_per_serving_amount_in_grams\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_prepared_per_serving_amount_in_grams}}</span>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"productDescription\\\">Product Description</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productDescription\\\" placeholder=\\\"Product Description\\\" formControlName=\\\"package_product_description\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"asSoldPerServingAmount\\\">Per Serving Amount(As sold)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"asSoldPerServingAmount\\\" style=\\\"width:540px\\\" [required]=\\\"requiredFieldAmountAsSold\\\" (ngModelChange)=\\\"validatePerServingAmountAsSold($event)\\\" placeholder=\\\"Per Serving Amount(As sold)\\\"\\n                                formControlName=\\\"as_sold_per_serving_amount\\\">\\n                            <div *ngIf=\\\"formErrors.as_sold_per_serving_amount\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_sold_per_serving_amount}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n                            <label for=\\\"asSoldUnitOfMeasure\\\">Per Serving Unit of Measure (As sold)</label>\\n                            <select class=\\\"form-control\\\" id=\\\"asSoldUnitOfMeasure\\\" formControlName=\\\"as_sold_unit_of_measure\\\" [required]=\\\"requiredFieldUnitOfMeasure\\\" (ngModelChange)=\\\"validateUnitOfMeasureAsSold($event)\\\" style=\\\"width:540px\\\">\\n\\n                                <option value=\\\"\\\" selected>Per Serving Unit of Measure (As sold)</option>\\n                                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n\\n                            </select>\\n                            <div *ngIf=\\\"formErrors.as_sold_unit_of_measure\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_sold_unit_of_measure}}</span>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"asPreparedPerServingAmount\\\">Per Serving Amount(As prepared)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\"  [required]=\\\"requiredFieldAmountAsPrepared\\\" (ngModelChange)=\\\"validatePerServingAmountAsPrepared($event)\\\" id=\\\"asPreparedPerServingAmount\\\" placeholder=\\\"Per Serving Amount(As prepared)\\\" formControlName=\\\"as_prepared_per_serving_amount\\\">\\n                            <div *ngIf=\\\"formErrors.as_prepared_per_serving_amount\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_prepared_per_serving_amount}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n                            <label for=\\\"asSoldUnitOfMeasure\\\">Per Serving Unit of Measure (As prepared)</label>\\n                            <select class=\\\"form-control\\\" id=\\\"asSoldUnitOfMeasure\\\"  [required]=\\\"requiredFieldUnitOfMeasureAsPrepared\\\" (ngModelChange)=\\\"validateUnitOfMeasureAsPrepared($event)\\\" formControlName=\\\"as_prepared_unit_of_measure\\\">\\n\\n                                <option value=\\\"\\\" selected>Per Serving Unit of Measure (As prepared)</option>\\n\\n\\n                                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n\\n                            </select>\\n                            <div *ngIf=\\\"formErrors.as_prepared_unit_of_measure\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_prepared_unit_of_measure}}</span>\\n                            </div>\\n                            \\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"calculated\\\">calculated?</label>\\n                            <select class=\\\"form-control\\\" id=\\\"calculated\\\" formControlName=\\\"calculated\\\">\\n\\n                                <option value=\\\"\\\" selected>calculated?</option>\\n                                <option value=\\\"1\\\">Yes</option>\\n                                <option value=\\\"0\\\">No</option>\\n                            </select>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!labelForm.valid || labelForm.pristine || isLoading || submitted\\\">Save</button>\\n\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<confirm-box [flag]=\\\"flag\\\" *ngIf=\\\"flag\\\"></confirm-box>\\n\\n<div *ngIf=\\\"isLoading\\\">\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n<div *ngIf=\\\"message\\\">\\n    <h3>{{message}}</h3>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createLabel/create-label.component.html\n// module id = ./src/app/createRecords/createLabel/create-label.component.html\n// module chunks = main","import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { labelCreateFields, classificationList, Classification_name, Classification_number, Response } from '../../data-model';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { GetRecordService } from '../../services/getRecord.service'\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { DatePipe } from '@angular/common';\ndeclare var $: any;\n@Component({\n    selector: 'add-label',\n    templateUrl: './create-label.component.html',\n    styleUrls: ['./create-label.component.css'],\n    providers: [CreateRecordService]\n\n})\nexport class CreateLabelComponent implements OnChanges {\n\n\n\n    date_input: any;\n    isLoading: boolean = false;\n    submitted: boolean = false;\n    offset: number = 0;\n    message: string = null;\n    labelField: labelCreateFields;\n    id: number;\n    flag: number = null;\n\n    requiredField: boolean = false;\n    requiredFieldOther: boolean = false;\n\n    requiredFieldAmountAsSold: boolean = false;\n    requiredFieldUnitOfMeasure: boolean = false;\n\n    requiredFieldAmountAsPrepared: boolean = false;\n    requiredFieldUnitOfMeasureAsPrepared: boolean = false;\n\n    listOfClass: classificationList[];\n    listOfUnitOfMeasure: string[];\n    serverDown: boolean = false;\n    labelForm: FormGroup;\n    @Output() updateView = new EventEmitter<number>();\n\n    constructor(private fb: FormBuilder,\n        private createRecordService: CreateRecordService,\n        private searchService: SearchService,\n        private getRecordService: GetRecordService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n\n        this.createForm();\n    }\n    ngOnInit(): void {\n        this.searchService.getClassificationAndUnitofMeasure().subscribe(response => {\n            console.log(response);\n\n            const {data, message, status} = response[0];\n            const {dataList} = response[1];\n         \n            this.listOfClass = data.dataList;\n            this.listOfUnitOfMeasure  = dataList;\n\n\n\n        }\n        );\n    }\n\n    ngOnChanges() {\n        this.flag = null;\n        this.submitted = false;\n\n        this.labelForm.reset({\n\n            package_description: this.labelField.package_description,\n            package_upc: this.labelField.package_upc,\n            package_brand: this.labelField.package_brand,\n            package_manufacturer: this.labelField.package_manufacturer,\n            package_country: this.labelField.package_country,\n            package_size: this.labelField.package_size,\n            package_size_unit_of_measure: this.labelField.package_size_unit_of_measure,\n            storage_type: this.labelField.storage_type,\n            storage_statements: this.labelField.storage_statements,\n            health_claims: this.labelField.health_claims,\n            other_package_statements: this.labelField.other_package_statements,\n            suggested_directions: this.labelField.suggested_directions,\n            ingredients: this.labelField.ingredients,\n            multi_part_flag: this.labelField.multi_part_flag,\n            nutrition_fact_table: this.labelField.nutrition_fact_table,\n            as_prepared_per_serving_amount: this.labelField.as_prepared_per_serving_amount,\n            as_prepared_unit_of_measure: this.labelField.as_prepared_unit_of_measure,\n            as_sold_per_serving_amount: this.labelField.as_sold_per_serving_amount,\n            as_sold_unit_of_measure: this.labelField.as_sold_unit_of_measure,\n            as_prepared_per_serving_amount_in_grams: this.labelField.as_prepared_per_serving_amount_in_grams,\n            as_sold_per_serving_amount_in_grams: this.labelField.as_sold_per_serving_amount_in_grams,\n            package_comment: this.labelField.package_comment,\n            package_source: this.labelField.package_source,\n            package_product_description: this.labelField.package_product_description,\n            package_collection_date: this.labelField.package_collection_date,\n            number_of_units: this.labelField.number_of_units,\n            informed_dining_program: this.labelField.informed_dining_program,\n            nft_last_update_date: this.labelField.nft_last_update_date,\n            product_grouping: this.labelField.product_grouping,\n            child_item: this.labelField.child_item,\n            classification_number: this.labelField.classification_number,\n            classification_name: this.labelField.classification_name,\n            nielsen_item_rank: this.labelField.nielsen_item_rank,\n            nutrient_claims: this.labelField.nutrient_claims,\n            package_nielsen_category: this.labelField.package_nielsen_category,\n            common_household_measure: this.labelField.common_household_measure,\n            calculated: this.labelField.calculated\n\n\n\n        }\n        );\n\n    }\n\n    createForm() {\n\n        this.labelForm = this.fb.group({\n            package_description: ['', [Validators.required]],\n            package_upc: ['', [\n                Validators.pattern('^[0-9]+([,.][0-9]+)?$'),\n                Validators.required\n            ]],\n            package_brand: '',\n            package_manufacturer: '',\n            package_country: '',\n            package_size: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            package_size_unit_of_measure: '',\n            storage_type: '',\n            storage_statements: '',\n            health_claims: '',\n            other_package_statements: '',\n            suggested_directions: '',\n            ingredients: '',\n            multi_part_flag: \"\",\n            nutrition_fact_table: '',\n            as_prepared_per_serving_amount: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            as_prepared_unit_of_measure: '',\n            as_sold_per_serving_amount: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            as_sold_unit_of_measure: '',\n            as_prepared_per_serving_amount_in_grams: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            as_sold_per_serving_amount_in_grams: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            package_comment: '',\n            package_source: ['', [Validators.required]],\n            package_product_description: '',\n            package_collection_date: ['', [Validators.required]],\n            number_of_units: [null, [Validators.pattern('\\\\d+')]],\n            informed_dining_program: \"\",\n            nft_last_update_date: '',\n            product_grouping: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            child_item: \"\",\n            classification_number: \"\",\n            classification_name: '',\n            nielsen_item_rank: ['', [\n                Validators.pattern('\\\\d+')\n            ]],\n            nutrient_claims: '',\n            package_nielsen_category: '',\n            common_household_measure: '',\n            calculated: \"\"\n\n        });\n\n        this.labelForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.labelForm) { return; }\n        const form = this.labelForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n\n        this.flag = null;\n        this.setValues();\n\n        this.isLoading = true;\n\n        this.createRecordService.createLabel(JSON.stringify(this.labelField)).finally(() => this.isLoading = false).subscribe(response => {\n\n            const { message, status} = response;\n\n            if (status === 202) {\n                this.flag = 2;\n\n                this.submitted = false;\n            } else if (status === 203) {\n                this.flag = 2;\n                this.submitted = false;\n\n            } else if (status === 204) {\n                this.flag = 2;\n\n                this.submitted = false;\n            } else if (status === 200) {\n                this.flag = 1;\n                setTimeout(() => {\n                    this.router.navigate(['/viewproduct', this.id]);\n\n                },\n                    4000);\n            } else if (status === 604) {\n                this.flag = 2;\n                this.message = \"UPC code belong to a diffent product\";\n                this.submitted = false;\n            } else if (status === 803) {\n                this.flag = 2;\n                this.message = \"Missing mandatory field(s)\";\n                this.submitted = false;\n            }\n            else {\n                this.flag = 2;\n                this.message = \"Something went wrong, try again...\";\n                this.submitted = false;\n\n            }\n\n        }, (error) => {\n\n            this.serverDown = true;\n            this.flag = 2;\n            this.submitted = false;\n\n        });\n\n    }\n\n    prepareSaveProduct(): labelCreateFields {\n        return this.labelForm.value;\n    }\n\n\n\n\n\n    formErrors = {\n        'package_description': '',\n        'package_upc': '',\n        'as_prepared_per_serving_amount': '',\n        'as_sold_per_serving_amount': '',\n        'as_prepared_per_serving_amount_in_grams': '',\n        'as_sold_per_serving_amount_in_grams': '',\n        'number_of_units': '',\n        'product_grouping': '',\n        'nielsen_item_rank': '',\n        'package_source': '',\n        'package_collection_date': '',\n        'package_size': '',\n        'package_size_unit_of_measure':'',\n        'as_sold_unit_of_measure':'',\n        'as_prepared_unit_of_measure':''\n\n    }\n\n    validationMessages = {\n\n        'package_description': {\n            'required': 'Package description is required'\n        },\n        'package_upc': {\n            'required': 'Label is required',\n            'pattern': 'Must be a number'\n        },\n        'as_prepared_per_serving_amount_in_grams': {\n            'pattern': 'Must be a number'\n        },\n        'as_sold_per_serving_amount': {\n            'pattern': 'Must be a number',\n            'required': 'This field is required'\n        },\n        'as_sold_per_serving_amount_in_grams': {\n            'pattern': 'Must be a number'\n        },\n        'number_of_units': {\n            'pattern': 'Must be a number'\n        },\n        'product_grouping': {\n            'pattern': 'Must be a number'\n        },\n        'nielsen_item_rank': {\n            'pattern': 'Must be a number'\n        },\n        'package_source': {\n            'required': 'Source is required'\n        },\n        'package_collection_date': {\n            'required': 'Collection date is required'\n        },\n        'package_size': {\n            'pattern': 'Must be a number',\n            'required':'Net quantity is required'\n        },\n        'as_prepared_per_serving_amount':{\n            'pattern': 'Must be a number',\n            'required':'Per Serving Amount (As prepared) is required' \n        },\n        'package_size_unit_of_measure':{ \n            'required':'Net quantity unit of measure is required'\n        },\n        'as_sold_unit_of_measure':{\n            'required':'Per Serving Unit of Measure (As sold) is required' \n        },\n        'as_prepared_unit_of_measure':{\n            'required':'Per Serving Unit of Measure (As prepared) is required' \n        }\n\n    }\n    setValues(): void {\n        this.submitted = true;\n        var date = new DatePipe('en-US');\n\n        this.labelField = this.prepareSaveProduct();\n        this.labelField.package_collection_date = this.labelField.package_collection_date ? date.transform(this.labelField.package_collection_date, 'yyyy-MM-dd') : this.labelField.package_collection_date;\n        this.labelField.nft_last_update_date = this.labelField.nft_last_update_date ? date.transform(this.labelField.nft_last_update_date, 'yyyy-MM-dd') : this.labelField.nft_last_update_date;\n\n        this.route.params.subscribe(params => {\n            this.labelField.product_id = +params['id'];\n            this.id = this.labelField.product_id;\n        });\n\n        this.labelField.multi_part_flag = this.labelField.multi_part_flag == \"\" ? null : this.labelField.multi_part_flag;\n        this.labelField.as_prepared_per_serving_amount = this.labelField.as_prepared_per_serving_amount == \"\" ? null : this.labelField.as_prepared_per_serving_amount;\n        this.labelField.as_sold_per_serving_amount = this.labelField.as_sold_per_serving_amount == \"\" ? null : this.labelField.as_sold_per_serving_amount;\n        this.labelField.as_prepared_per_serving_amount_in_grams = this.labelField.as_prepared_per_serving_amount_in_grams == \"\" ? null : this.labelField.as_prepared_per_serving_amount_in_grams;\n        this.labelField.as_sold_per_serving_amount_in_grams = this.labelField.as_sold_per_serving_amount_in_grams == \"\" ? null : this.labelField.as_sold_per_serving_amount_in_grams;\n        this.labelField.number_of_units = this.labelField.number_of_units == \"\" ? null : this.labelField.number_of_units;\n        this.labelField.informed_dining_program = this.labelField.informed_dining_program == \"\" ? null : this.labelField.informed_dining_program;\n        this.labelField.product_grouping = this.labelField.product_grouping == \"\" ? null : this.labelField.product_grouping;\n        this.labelField.child_item = this.labelField.number_of_units == \"\" ? null : this.labelField.child_item;\n        this.labelField.calculated = this.labelField.calculated == \"\" ? null : this.labelField.calculated;\n        this.labelField.nielsen_item_rank = this.labelField.nielsen_item_rank == \"\" ? null : this.labelField.nielsen_item_rank;\n        this.labelField.package_size = this.labelField.package_size == \"\" ? null : this.labelField.package_size;\n\n\n\n\n    }\n\n    setClassificationName(n: String) {\n\n\n\n        if (n != null && n != \"\") {\n\n            var index = this.listOfClass.findIndex(function (item, i) {\n                return item.classification_name === n;\n            });\n\n            if (this.labelForm.controls['classification_number'].value != this.listOfClass[index]['classification_number']) {\n                this.labelForm.controls['classification_number'].patchValue(this.listOfClass[index]['classification_number']);\n            }\n        } else {\n            if (this.labelForm.controls['classification_name'].value != null && this.labelForm.controls['classification_name'].value != \"\") {\n                this.labelForm.controls['classification_number'].patchValue(\"\");\n\n            }\n        }\n    }\n\n\n    callAlex(n: String) {\n        \n        if (n != null && n != \"\") {\n            var index = this.listOfClass.findIndex(function (item, i) {\n                return item.classification_number === n;\n            });\n\n            if (this.labelForm.controls['classification_name'].value != this.listOfClass[index]['classification_name']) {\n                this.labelForm.controls['classification_name'].patchValue(this.listOfClass[index]['classification_name']);\n            }\n        } else {\n\n            if (this.labelForm.controls['classification_number'].value != null && this.labelForm.controls['classification_number'].value!= \"\") {\n                this.labelForm.controls['classification_name'].patchValue(\"\");\n\n            }\n        }\n\n    }\n\n    validateNetQuantiy(value : any){\n\n\n\n        if((value != null && value!= \"\") && (this.labelForm.get('package_size').value == \"\" || this.labelForm.get('package_size').value ==null)){\n            this.requiredField = true;\n            this.requiredFieldOther = false;\n        }else if((value == null || value == \"\") && (this.labelForm.get('package_size').value != \"\" && this.labelForm.get('package_size').value !=null)){\n            \n           \n            this.requiredField = false;\n            this.requiredFieldOther = true;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('package_size').value == \"\" || this.labelForm.get('package_size').value ==null)){\n\n            this.requiredField = false;\n            this.requiredFieldOther = false;\n        }\n        \n        else{\n            this.requiredField = true;\n            this.requiredFieldOther = false;\n        }\n    }\n\n    validateNetQuantiyOther(value : any){\n\n        if((value != null && value!= \"\") && (this.labelForm.get('package_size_unit_of_measure').value == \"\" || this.labelForm.get('package_size_unit_of_measure').value ==null)){\n            this.requiredField = false;\n            this.requiredFieldOther = true;\n        }else if((value == null || value == \"\") && (this.labelForm.get('package_size_unit_of_measure').value != \"\" && this.labelForm.get('package_size_unit_of_measure').value !=null)){\n                    \n            this.requiredField = true;\n            this.requiredFieldOther = false;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('package_size_unit_of_measure').value == \"\" || this.labelForm.get('package_size_unit_of_measure').value ==null)){\n\n            this.requiredField = false;\n            this.requiredFieldOther = false;\n        }\n        else{\n            this.requiredField = false;\n            this.requiredFieldOther = true;\n        }\n\n    }\n\n    validatePerServingAmountAsSold(value: any){\n\n        if((value != null && value!= \"\") && (this.labelForm.get('as_sold_unit_of_measure').value == \"\" || this.labelForm.get('as_sold_unit_of_measure').value ==null)){\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = true;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_sold_unit_of_measure').value != \"\" && this.labelForm.get('as_sold_unit_of_measure').value !=null)){\n                    \n            this.requiredFieldAmountAsSold = true;\n            this.requiredFieldUnitOfMeasure = false;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_sold_unit_of_measure').value == \"\" || this.labelForm.get('as_sold_unit_of_measure').value ==null)){\n\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = false;\n        }\n        else{\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = true;\n        }\n\n    }\n\n    validateUnitOfMeasureAsSold(value: any){\n       \n        if((value != null && value!= \"\") && (this.labelForm.get('as_sold_per_serving_amount').value == \"\" || this.labelForm.get('as_sold_per_serving_amount').value ==null)){\n           \n            this.requiredFieldAmountAsSold = true;\n            this.requiredFieldUnitOfMeasure = false;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_sold_per_serving_amount').value != \"\" && this.labelForm.get('as_sold_per_serving_amount').value !=null)){\n                    \n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = true;\n\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_sold_per_serving_amount').value == \"\" || this.labelForm.get('as_sold_per_serving_amount').value ==null)){\n\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = false;\n        }\n        else{\n            this.requiredFieldAmountAsSold = true;\n            this.requiredFieldUnitOfMeasure = false;\n        }\n    }\n\n    validatePerServingAmountAsPrepared(value: any){\n\n        if((value != null && value!= \"\") && (this.labelForm.get('as_prepared_unit_of_measure').value == \"\" || this.labelForm.get('as_prepared_unit_of_measure').value ==null)){\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = true;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_prepared_unit_of_measure').value != \"\" && this.labelForm.get('as_prepared_unit_of_measure').value !=null)){\n                    \n            this.requiredFieldAmountAsPrepared = true;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_prepared_unit_of_measure').value == \"\" || this.labelForm.get('as_prepared_unit_of_measure').value ==null)){\n\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }\n        else{\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = true;\n        }\n    }\n\n    validateUnitOfMeasureAsPrepared(value: any){\n        if((value != null && value!= \"\") && (this.labelForm.get('as_prepared_per_serving_amount').value == \"\" || this.labelForm.get('as_prepared_per_serving_amount').value ==null)){\n            this.requiredFieldAmountAsPrepared = true;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_prepared_per_serving_amount').value != \"\" && this.labelForm.get('as_prepared_per_serving_amount').value !=null)){\n                    \n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = true;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_prepared_per_serving_amount').value == \"\" || this.labelForm.get('as_prepared_per_serving_amount').value ==null)){\n\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }\n        else{\n            this.requiredFieldAmountAsPrepared = true;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createLabel/create-label.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport { ViewProductModule} from '../../views/viewProduct/view-product.module'\nimport { CreateLabelComponent }  from './create-label.component';\nimport {RouterModule} from '@angular/router';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {CreateLabelRoutingModule} from './create-label-routing.module'\n\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nBrowserModule,\nConfirmBoxModule,\nViewProductModule,\nMatDatepickerModule,\nCreateLabelRoutingModule\n\n      \n       ],\n  declarations: [ \n\n    CreateLabelComponent\n    ],\n  exports: [\n    CreateLabelComponent\n   ]\n\n})\nexport class CreateLabelModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createLabel/create-label.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \n  import { CreateNftComponent} from './create-nft.component';\n\n \nconst createNftRoutes: Routes = [\n  { path: 'add-nft/:id',  component: CreateNftComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(createNftRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CreateNftRoutingModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createNft/create-nft-routing.module.ts","module.exports = \" input[text], button {\\n  color: #888;\\n  font-family: Cambria, Georgia;\\n}\\n\\nbutton {\\n  font-family: Arial;\\n  background-color: #eee;\\n  padding: 5px 10px;\\n  /*border-radius: 4px;*/\\n  cursor: pointer;\\n  cursor: hand;\\n}\\n\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\n\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #aaa;\\n  cursor: auto;\\n}\\n\\n.form-control{\\n    display: block;\\n    width: 100%;\\n    /*height: 34px;\\n    padding: 6px 12px;\\n  \\n    line-height: 1.42857143;\\n    color: #555;\\n    background-color: #fff;\\n    background-image: none;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;*/\\n}\\n\\n.deleteIcon{\\n    position: absolute;\\n    top: 10px;\\n    right: 20px;\\n    cursor:pointer;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createNft/create-nft.component.css\n// module id = ./src/app/createRecords/createNft/create-nft.component.css\n// module chunks = main","module.exports = \"\\n\\n<div *ngIf=\\\"invalidInputDailyValue\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"invalidInputDailyValue\\\"><strong>Error!</strong> Invalid daily value amount for {{invalidInputDailyValue}} </div>\\n</div>\\n<div *ngIf=\\\"fibreExeeced\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{fibreExeeced}} </div>\\n</div>\\n<div *ngIf=\\\"fatExeeced\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{fatExeeced}} </div>\\n</div>\\n\\n<div *ngIf=\\\"missingName\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{missingName}} </div>\\n</div>\\n\\n<div *ngIf=\\\"invalidInput\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"invalidInput\\\"><strong>Error!</strong> Invalid amount for {{invalidInput}} </div>\\n</div>\\n<div *ngIf=\\\"duplicateEntries\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{duplicateEntries}} </div>\\n</div>\\n<div *ngIf=\\\"errorMessage\\\">\\n\\n\\n  <div *ngFor=\\\"let name of nameChangeLog\\\" class=\\\"alert alert-danger\\\"><strong>{{name}}</strong>  is missing amount or unit of Measure</div>\\n</div>\\n\\n<form [formGroup]=\\\"nftForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n\\n\\n<div formArrayName=\\\"secretComponents\\\">\\n  <div *ngFor=\\\"let address of secretComponents.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n    <!-- The repeated address template -->\\n    <div class=\\\"row append\\\">\\n\\n\\n      <div class=\\\"form-group col-sm-3\\\"  *ngIf=\\\"responseComponentName && i > 17\\\">\\n\\n\\n                <select class=\\\"form-control\\\" id=\\\"componentName\\\" formControlName=\\\"name\\\" >\\n      <option *ngFor=\\\"let component of responseComponentName;let i = index\\\" [value]=\\\"component.component_name\\\" >{{component.component_name}}</option>\\n     \\n\\n        </select>\\n\\n            </div>\\n\\n         <div class=\\\"form-group col-sm-3\\\"  *ngIf=\\\"responseComponentName && i <= 17\\\">\\n\\n        <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"Component's Name\\\" [readOnly]=\\\"  i <= 17\\\">\\n\\n            </div>   \\n\\n      <div class=\\\"form-group col-sm-3\\\">\\n\\n        <input class=\\\"form-control\\\" formControlName=\\\"amount\\\" placeholder=\\\"Component's Amount\\\" >\\n\\n      </div>\\n\\n      <div class=\\\"form-group col-sm-3\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n\\n        <select class=\\\"form-control\\\" formControlName=\\\"unit_of_measure\\\">\\n              <option value=\\\"\\\" selected>Select a unit of measure</option>\\n                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n            </select>\\n\\n      </div>\\n      <div class=\\\"form-group col-sm-3\\\">\\n        <input class=\\\"form-control\\\" formControlName=\\\"daily_value\\\" placeholder=\\\"Component's daily value\\\">\\n        <span class=\\\"glyphicon glyphicon-remove deleteIcon\\\" (click)=\\\"deleteClassification(i)\\\" *ngIf=\\\"i > 17\\\"></span>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n\\n</div>\\n\\n  \\n            <div class=\\\"form-group \\\">\\n              <button (click)=\\\"addComponent()\\\" type=\\\"button\\\" style=\\\"float:right\\\" [disabled]=\\\"submitted\\\">Add a Component</button>\\n                <button style=\\\"float:right;  width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\"  [disabled]=\\\"nftForm.pristine || !formValid || !nftForm.valid || submitted\\\">Save</button>\\n\\n</div>\\n</form>\\n\\n<confirm-box [flag]=\\\"flag\\\"  *ngIf=\\\"flag\\\"></confirm-box>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createNft/create-nft.component.html\n// module id = ./src/app/createRecords/createNft/create-nft.component.html\n// module chunks = main","import { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { nftFields, UofM, nftFieldsList, nftList, ResponseComponentName, Components } from '../../data-model';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { GetRecordService } from '../../services/getRecord.service';\n\n\n\n@Component({\n  selector: 'add-nft',\n  templateUrl: './create-nft.component.html',\n  styleUrls: ['./create-nft.component.css']\n})\nexport class CreateNftComponent implements OnChanges {\n\n\n  nftForm: FormGroup;\n  nameChangeLog: string[] = [];\n  unit_of_measure = UofM;\n  nftFieldsInput: nftFields;\n  nftListArray: nftList;\n  errorMessage: string = null;\n  missingName: string = null;\n  fat: number = 0;\n  sumOfAllFat: number = 0;\n  duplicateEntries: string = null;\n  invalidInput: string = null;\n  id: number;\n  flag: number = null;\n  submitted: boolean = false;\n  listOfUnitOfMeasure: string[];\n\n  responseComponentName: Components[];\n  isLoading: boolean;\n  fatExeeced: string;\n  fibreExeeced: string;\n  fibre: number = 0;\n  totalFibre: number = 0;\n  formValid: boolean = true;\n  invalidInputDailyValue: string = null;\n\n\n  constructor(\n    private fb: FormBuilder, private router: Router,\n    private route: ActivatedRoute,\n    private createRecordService: CreateRecordService,\n    private getRecordService: GetRecordService) {\n\n    this.createForm();\n    this.logNameChange();\n  }\n\n  ngOnInit(): void {\n\n    this.responseComponentName = null;\n\n    this.getRecordService.getComponentNames().subscribe(response => {\n      const {dataList} = response[0];\n      //const cl = response;\n      this.responseComponentName = dataList;\n      this.listOfUnitOfMeasure  = response[1].dataList;\n\n\n\n\n    });\n\n\n\n  }\n  check() {\n    console.log(\"yes\")\n  }\n  createForm() {\n    this.nftForm = this.fb.group({\n\n      secretComponents: this.fb.array([])\n\n    });\n    this.setComponents(nftFieldsList);\n  }\n\n  ngOnChanges() {\n    this.submitted = false;\n    this.nftForm.reset({\n    });\n\n    this.setComponents(nftFieldsList);\n\n  }\n\n  get secretComponents(): FormArray {\n    return this.nftForm.get('secretComponents') as FormArray;\n  };\n\n  setComponents(components: nftFields[]) {\n    const componentsFGs = components.map(component => this.fb.group(component));\n    const componentFormArray = this.fb.array(componentsFGs);\n    this.nftForm.setControl('secretComponents', componentFormArray);\n  }\n\n  addComponent() {\n    this.secretComponents.push(this.fb.group(new nftFields()));\n  }\n\n  onSubmit() {\n    this.nftListArray = this.preparenftFieldsInput();\n    this.submitted = true;\n    this.isLoading = true;\n    this.flag = null\n    this.createRecordService.createNft(JSON.stringify(this.nftListArray)).finally(() => this.isLoading = false).subscribe(response => {\n      const {id, message, status} = response;\n\n      if (status === 803) {\n        this.flag = 2;\n        this.errorMessage = \"Missing mandatory fields\";\n      } else if (status === 804) {\n        //Invalid input fields\n        this.errorMessage = \"Invalid input fields\";\n        this.flag = 2;\n        // console.log(\"Here 203\",data.dataList);\n      } else if (status === 205) {\n        this.flag = 2;\n        this.errorMessage = \"Can't create a record with no argument provided\";\n        //console.log(\"Here 204\",data.dataList);\n      } else if (status === 200) {\n        // this.flag = 1;\n        this.flag = 1;\n        setTimeout(() => {\n          this.router.navigate(['/view-package', this.nftListArray.package_id]);\n\n        },\n          4000);\n      }\n      else {\n        this.flag = 2;\n        this.errorMessage = \"Something happened, try again\";\n\n      }\n\n    }, (error) => {\n      this.errorMessage = \"Can't access the server at this time\";\n      this.flag = 2;\n\n    });;\n  }\n\n  preparenftFieldsInput(): nftList {\n    const formModel = this.nftForm.value;\n\n    console.log(\"on save\", formModel);\n    // deep copy of form model lairs\n\n    const componentsDeepCopy: nftFields[] = formModel.secretComponents.map(\n      (component: nftFields) => Object.assign({}, component)\n    );\n\n    componentsDeepCopy.forEach((element: any) => {\n      if (element.amount == \"\") {\n        element.amount = null;\n      }\n      if (element.daily_value == \"\") {\n        element.daily_value = null;\n      }\n\n    });\n\n    this.route.params.subscribe(params => {\n      this.id = +params['id'];\n    });\n\n\n    const saveNft: nftList = {\n\n      nft: componentsDeepCopy,\n      package_id: this.id,\n      flag: true\n    };\n    return saveNft;\n  }\n\n  revert() { this.ngOnChanges(); }\n\n  deleteClassification(i: number) {\n\n    this.secretComponents.removeAt(i)\n\n  }\n\n  logNameChange() {\n    const nameControl = this.nftForm.get('secretComponents');\n\n    // nameControl.value.forEach(function (element : any)  {\n    //   if((element.amount!= \"\" && element.unit_of_measure == \"\") ||(element.amount== \"\" && element.unit_of_measure != \"\")){\n    //     this.errorMessage = element.name;\n    //   }\n    //   console.log(\"oyesooo\", element.name, element.amount)\n    // });\n\n    nameControl.valueChanges.forEach(\n\n      (value: any) => {\n        this.fat = 0;\n        this.sumOfAllFat = 0;\n        this.errorMessage = null;\n        this.nameChangeLog = [];\n        this.missingName = null;\n        this.duplicateEntries = null;\n        this.invalidInput = null;\n        this.fatExeeced = null;\n        this.fibre = 0;\n        this.totalFibre = 0;\n        this.formValid = true;\n        this.fibreExeeced = null;\n        this.invalidInputDailyValue = null;\n\n\n        //Will return an array containing all of the names\n        var valueArr = value.map((item: any) => item.name);\n        valueArr = valueArr.filter(function (n: any) { return n != undefined });\n\n        var isDuplicate = valueArr.some(function (item: any, idx: number) {\n\n          return valueArr.indexOf(item) != idx\n        });\n        if (isDuplicate) {\n          this.duplicateEntries = \"One or more components have been selected more than once\";\n          this.formValid = false;\n        }\n\n        value.forEach((element: any) => {\n\n          if (element.name != null && element.name != \"\") {\n\n            if ((element.amount != \"\" && element.unit_of_measure == \"\") || (element.amount == \"\" && element.unit_of_measure != \"\")) {\n\n              this.nameChangeLog.push(element.name);\n              this.formValid = false;\n              this.errorMessage = \"not null\";\n            }\n            ///^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/.test(this.value);\n            var re = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$\");\n            if (element.amount.length && !re.test(element.amount)) {\n              this.invalidInput = element.name;\n              this.formValid = false;\n            }\n            if (element.daily_value.length && !re.test(element.daily_value)) {\n              this.invalidInputDailyValue = element.name;\n              this.formValid = false;\n            }\n            //Sum all fats\n            //               sumOfAllFat: number = 0;\n            // duplicateEntries: string = null; \n\n\n          } else {\n            this.missingName = \"Missing component's name in one or more fields\";\n            this.formValid = false;\n          }\n\n\n\n\n\n        });\n\n\n      }\n    );\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createNft/create-nft.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport { CreateNftComponent }  from './create-nft.component';\nimport {RouterModule} from '@angular/router';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {CreateNftRoutingModule} from './create-nft-routing.module'\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nBrowserModule,\nConfirmBoxModule,\nMatProgressBarModule,\nCreateNftRoutingModule\n       ],\n  declarations: [ \n\n    CreateNftComponent\n    ],\n  exports: [\n    CreateNftComponent\n   ]\n\n})\nexport class CreateNftModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createNft/create-nft.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { CreateNftAsPreparedComponent }  from './create-nft-as-prepared.component';\n\n \nconst createNftAsPreparedRoutes: Routes = [\n  { path: 'add-nft-prepared/:id',  component: CreateNftAsPreparedComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(createNftAsPreparedRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CreateNftAsPreparedRoutingModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createNftPrepared/create-nft-as-prepared-routing.module.ts","module.exports = \" input[text], button {\\n  color: #888;\\n  font-family: Cambria, Georgia;\\n}\\n\\nbutton {\\n  font-family: Arial;\\n  background-color: #eee;\\n  padding: 5px 10px;\\n  /*border-radius: 4px;*/\\n  cursor: pointer;\\n  cursor: hand;\\n}\\n\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\n\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #aaa;\\n  cursor: auto;\\n}\\n\\n.form-control{\\n    display: block;\\n    width: 100%;\\n    /*height: 34px;\\n    padding: 6px 12px;\\n  \\n    line-height: 1.42857143;\\n    color: #555;\\n    background-color: #fff;\\n    background-image: none;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;*/\\n}\\n\\n.deleteIcon{\\n    position: absolute;\\n    top: 10px;\\n    right: 20px;\\n    cursor:pointer;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.css\n// module id = ./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"invalidInputDailyValue\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"invalidInputDailyValue\\\"><strong>Error!</strong> Invalid daily value amount for {{invalidInputDailyValue}} </div>\\n</div>\\n<div *ngIf=\\\"fibreExeeced\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{fibreExeeced}} </div>\\n</div>\\n<div *ngIf=\\\"fatExeeced\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{fatExeeced}} </div>\\n</div>\\n\\n<div *ngIf=\\\"missingName\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{missingName}} </div>\\n</div>\\n\\n<div *ngIf=\\\"invalidInput\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"invalidInput\\\"><strong>Error!</strong> Invalid amount for {{invalidInput}} </div>\\n</div>\\n<div *ngIf=\\\"duplicateEntries\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{duplicateEntries}} </div>\\n</div>\\n<div *ngIf=\\\"errorMessage\\\">\\n\\n\\n  <div *ngFor=\\\"let name of nameChangeLog\\\" class=\\\"alert alert-danger\\\"><strong>{{name}}</strong> is missing amount or unit of Measure</div>\\n</div>\\n\\n<form [formGroup]=\\\"nftForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n\\n\\n\\n  <div formArrayName=\\\"secretComponents\\\">\\n    <div *ngFor=\\\"let address of secretComponents.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n      <!-- The repeated address template -->\\n      <div class=\\\"row append\\\">\\n\\n\\n        <div class=\\\"form-group col-sm-3\\\">\\n\\n\\n          <select class=\\\"form-control\\\" id=\\\"componentName\\\" formControlName=\\\"name\\\">\\n      <option *ngFor=\\\"let component of responseComponentName;let i = index\\\" [value]=\\\"component.component_name\\\" >{{component.component_name}}</option>\\n     \\n\\n        </select>\\n\\n        </div>\\n\\n\\n\\n        <div class=\\\"form-group col-sm-3\\\">\\n\\n          <input class=\\\"form-control\\\" formControlName=\\\"amount\\\" placeholder=\\\"Component's Amount\\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-group col-sm-3\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n\\n          <select class=\\\"form-control\\\" formControlName=\\\"unit_of_measure\\\">\\n              <option value=\\\"\\\" selected>Select a unit of measure</option>\\n                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n            </select>\\n\\n        </div>\\n        <div class=\\\"form-group col-sm-3\\\">\\n          <input class=\\\"form-control\\\" formControlName=\\\"daily_value\\\" placeholder=\\\"Component's daily value\\\">\\n          <span class=\\\"glyphicon glyphicon-remove deleteIcon\\\" (click)=\\\"deleteClassification(i)\\\"></span>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n\\n  <div class=\\\"form-group \\\">\\n    <button (click)=\\\"addComponent()\\\" type=\\\"button\\\" style=\\\"float:right\\\" [disabled]=\\\"submitted\\\">Add a Component</button>\\n<button style=\\\"float:right;  width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\" !formValid || !nftForm.valid || submitted\\\">Save</button>\\n\\n</div>\\n</form>\\n\\n<confirm-box [flag]=\\\"flag\\\" *ngIf=\\\"flag\\\"></confirm-box>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.html\n// module id = ./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.html\n// module chunks = main","import { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { nftFields, UofM, nftFieldsList, nftList,ResponseComponentName, Components, nftFieldsListAsPrepared } from '../../data-model';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { GetRecordService } from '../../services/getRecord.service';\nimport 'rxjs/add/operator/finally';\n\n\n\n@Component({\n  selector: 'app-create-nft-as-prepared',\n  templateUrl: './create-nft-as-prepared.component.html',\n  styleUrls: ['./create-nft-as-prepared.component.css']\n})\nexport class CreateNftAsPreparedComponent implements OnChanges{\n\n\n  nftForm: FormGroup;\n  nameChangeLog: string[] = [];\n  unit_of_measure = UofM;\n  nftFieldsInput: nftFields;\n  nftListArray: nftList;\n  errorMessage: string = null;\n  missingName: string = null;\n  fat: number = 0;\n  sumOfAllFat: number = 0;\n  duplicateEntries: string = null; \n  invalidInput: string = null;\n  id: number;\n  flag: number = null;\n  submitted: boolean = false;\n      listOfUnitOfMeasure: string[];\n\n  responseComponentName: Components[];\n  isLoading: boolean;\n  fatExeeced: string;\n  fibreExeeced: string;\n  fibre: number = 0;\n  totalFibre: number = 0; \n  formValid: boolean = true;\n  invalidInputDailyValue: string = null;\n\n\n  constructor(\n    private fb: FormBuilder, private router: Router,\n         private route: ActivatedRoute,\n         private createRecordService: CreateRecordService,\n         private getRecordService: GetRecordService) {\n\n    this.createForm();\n    this.logNameChange();\n  }\n\n    ngOnInit(): void {\n        \n    this.responseComponentName = null;\n\n    this.getRecordService.getComponentNames().subscribe(response => {\n      const {dataList} = response[0];\n      //const cl = response;\n      this.responseComponentName = dataList;\n      this.listOfUnitOfMeasure  = response[1].dataList;\n\n\n\n\n    });\n\n\n    }\n    check(){\n      console.log(\"yes\")\n    }\n  createForm() {\n    this.nftForm = this.fb.group({\n\n      secretComponents: this.fb.array([])\n     \n\n    });\n   this.setComponents(nftFieldsListAsPrepared);\n  }\n\n  ngOnChanges() {\n     this.submitted = false;\n    this.nftForm.reset({\n    });\n\n    this.setComponents(nftFieldsListAsPrepared);\n\n  }\n\n  get secretComponents(): FormArray {\n    return this.nftForm.get('secretComponents') as FormArray;\n  };\n\n  setComponents(components: nftFields[]) {\n    const componentsFGs = components.map(component => this.fb.group(component));\n    const componentFormArray = this.fb.array(componentsFGs);\n    this.nftForm.setControl('secretComponents', componentFormArray);\n  }\n\n  addComponent() {\n    this.secretComponents.push(this.fb.group(new nftFields()));\n  }\n\n  onSubmit() {\n    this.nftListArray = this.preparenftFieldsInput();\n    this.submitted = true;\n    this.isLoading = true;\n    console.log(\"listtooo\",this.nftListArray);\nthis.flag = null\n this.createRecordService.createNft(JSON.stringify(this.nftListArray)).finally(() => {this.isLoading = false; }).subscribe(response => {\n            const {id, message, status} = response;\n\n            if (status === 803) {\n               this.flag = 2;\n                this.errorMessage = \"Missing mandatory fields\";\n            } else if (status === 804) {\n                //Invalid input fields\n                this.errorMessage = \"Invalid input fields\";\n                this.flag = 2;\n                // console.log(\"Here 203\",data.dataList);\n            } else if (status === 205) {\n              this.flag = 2;\n                this.errorMessage = \"Can't create a record with no argument provided\";\n                //console.log(\"Here 204\",data.dataList);\n            } else if (status === 200) {\n                // this.flag = 1;\n                 this.flag = 1;\n                setTimeout(() => {\n                    this.router.navigate(['/view-package', this.nftListArray.package_id]);\n\n                },\n                4000);  \n            }\n            else {\n              this.flag = 2;\n              this.errorMessage = \"Something happened, try again\";\n\n            }\n\n        }, (error) => {\n            this.errorMessage = \"Can't access the server at this time\";\n            this.flag = 2;\n\n        });;\n  }\n\n  preparenftFieldsInput(): nftList {\n    const formModel = this.nftForm.value;\n \nconsole.log(\"on save\", formModel);\n    // deep copy of form model lairs\n\n    const componentsDeepCopy: nftFields[] = formModel.secretComponents.map(\n      (component: nftFields) => Object.assign({}, component)\n    );\n\ncomponentsDeepCopy.forEach((element: any) => {\n  if(element.amount == \"\"){\n    element.amount = null;\n  }\n    if(element.daily_value == \"\"){\n    element.daily_value = null;\n  }\n\n});\n    \n    this.route.params.subscribe( params => {\n        this.id = +params['id'];\n        });\n\n\n    const saveNft: nftList = {\n\n      nft: componentsDeepCopy,\n      package_id:this.id,\n      flag:false\n    };\n    return saveNft;\n  }\n\n  revert() { this.ngOnChanges(); }\n\n  deleteClassification(i: number) {\n\n    this.secretComponents.removeAt(i)\n\n  }\n\n  logNameChange() {\n    const nameControl = this.nftForm.get('secretComponents');\n\n   \n    nameControl.valueChanges.forEach(\n\n      (value: any) => {\n          this.fat = 0;\n        this.sumOfAllFat = 0;\n        this.errorMessage = null;\n        this.nameChangeLog = [];\n        this.missingName = null;\n        this.duplicateEntries = null;\n        this.invalidInput = null;\n        this.fatExeeced = null;\n        this.fibre = 0;\n        this.totalFibre = 0;\n        this.formValid = true;\n        this.fibreExeeced = null;\n        this.invalidInputDailyValue = null;\n\n\n          //Will return an array containing all of the names\n          var valueArr = value.map((item: any ) =>  item.name );\n\n         valueArr = valueArr.filter(function(n: any){ return n != undefined }); \n\n          var isDuplicate = valueArr.some(function(item : any, idx : number){ \n\n               return valueArr.indexOf(item) != idx \n          });\n          if(isDuplicate){\n            this.duplicateEntries = \"One or more components have been selected more than once\";\n            this.formValid = false;\n          }\n\n        value.forEach((element: any) => {\n\n          if (element.name != null && element.name!= \"\"){\n            \n            if ((element.amount != \"\" && element.unit_of_measure == \"\") || (element.amount == \"\" && element.unit_of_measure != \"\")) {\n\n              this.nameChangeLog.push(element.name);\n              this.formValid = false;\n              this.errorMessage = \"not null\";\n            }\n            ///^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$/.test(this.value);\n            var re = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$\");\n              if(element.amount.length && !re.test(element.amount)){\n                  this.invalidInput = element.name;\n                  this.formValid = false;\n              }\n              if(element.daily_value.length && !re.test(element.daily_value)){\n                  this.invalidInputDailyValue = element.name;\n                  this.formValid = false;\n              }\n              //Sum all fats\n  //               sumOfAllFat: number = 0;\n  // duplicateEntries: string = null; \n\n            \n          } else {\n            this.missingName = \"Missing component's name in one or more fields\";\n            this.formValid = false;\n          }\n\n\n          if(element.name === 'Fat'){\n            this.fat = (element.amount.length && re.test(element.amount) ? parseFloat(element.amount) : 0);\n          }\n          if(element.name === 'Saturated + Trans Fat' || element.name==='Saturated Fat' || element.name==='Trans Fat' || element.name==='Polyunsaturated Fat'\n          || element.name === 'Omega-6 Polyunsaturated Fat' || element.name === 'Omega-3 Polyunsaturated Fat' || element.name === 'Monounsaturated Fat'){\n\n            this.sumOfAllFat += (element.amount.length && re.test(element.amount) ? parseFloat(element.amount) : 0);\n\n\n          }\n          \n         if(element.name === 'Fibre'){\n           this.fibre = (element.amount.length && re.test(element.amount) ? parseFloat(element.amount) : 0);\n         }    \n                 \n         if(element.name === 'Soluble Fibre' || element.name==='Insoluble Fibre' ){\n\n            this.totalFibre += (element.amount.length && re.test(element.amount) ? parseFloat(element.amount) : 0);\n\n\n          }\n        });\n\n if(this.sumOfAllFat > this.fat){\n\n          this.fatExeeced = \"Sum of all fats should not exceed total fat\";\n          this.formValid = false;\n        }\n\n     if(this.totalFibre > this.fibre){\n\n          this.fibreExeeced = \"Sum of all fibres should not exceed total fibre\";\n          this.formValid = false;\n        }\n      }\n    );\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createNftPrepared/create-nft-as-prepared.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport { CreateNftAsPreparedComponent }  from './create-nft-as-prepared.component';\nimport {RouterModule} from '@angular/router';\n// import {ViewPackageModule} from '../../views/viewPackage/view-package.module'\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {CreateNftAsPreparedRoutingModule} from './create-nft-as-prepared-routing.module'\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\n//ViewPackageModule,\nBrowserModule,\nConfirmBoxModule,\nMatProgressBarModule,\nCreateNftAsPreparedRoutingModule\n\n      \n       ],\n  declarations: [ \n\nCreateNftAsPreparedComponent    ],\n  exports: [\n    CreateNftAsPreparedComponent\n   ]\n\n})\nexport class CreateNftAsPreparedModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createNftPrepared/create-nft-as-prepared.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { CreateProductComponent }  from './create-product.component';\n \nconst ceateProductRoutes: Routes = [\n  { path: 'createproduct',  component: CreateProductComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(ceateProductRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CreateProductRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createProduct/create-product-routing.module.ts","module.exports = \"\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n\\n.form-control {\\n    width: 100% !important;\\n}\\n\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n\\n.DivHeader{\\n    position: relative;\\n}\\n\\ndiv.bodycard{\\n    position: relative;\\n}\\n\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createProduct/create-product.component.css\n// module id = ./src/app/createRecords/createProduct/create-product.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\">\\n    <div class=\\\"DivLogo\\\">\\n        Create Product\\n    </div>\\n\\n    <div class=\\\"bodycard\\\">\\n        <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n<div class=\\\"well2\\\">\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"productForm\\\">\\n\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                <label for=\\\"classification_name\\\">Classification Name</label>\\n                <select class=\\\"form-control\\\" id=\\\"classification_name\\\" formControlName=\\\"classification_name\\\" (ngModelChange)=\\\"setClassificationName($event)\\\">\\n<option value=\\\"\\\" selected>Select a Classification Name</option>\\n<option *ngFor=\\\"let class of listOfClass;let i = index\\\" [value]=\\\"class.classification_name\\\">{{class.classification_name}}</option>\\n\\n</select>\\n\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                <label for=\\\"classification_number\\\">Classification Number</label>\\n                <select class=\\\"form-control\\\" id=\\\"classification_number\\\" formControlName=\\\"classification_number\\\" (ngModelChange)=\\\"setClassificationNumber($event)\\\">\\n      <option value=\\\"\\\" selected>Select a Classification Number</option>\\n      <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n     \\n\\n</select>\\n\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"classification_type\\\">Classification Type  </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classification_type\\\" placeholder=\\\"Enter the Classification Type\\\" formControlName=\\\"classification_type\\\" readOnly>\\n\\n            </div>\\n\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"product_manufacturer\\\">Product Manufactuer </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_manufacturer\\\" placeholder=\\\"Product Manufactuer\\\" formControlName=\\\"product_manufacturer\\\">\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"product_brand\\\">Product Brand</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_brand\\\" placeholder=\\\"Product Brand\\\" formControlName=\\\"product_brand\\\">\\n\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"cnf_code\\\">CNF CODE    </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cnf_code\\\" placeholder=\\\"CNF CODE\\\" formControlName=\\\"cnf_code\\\">\\n\\n                <div *ngIf=\\\"formErrors.cnf_code\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.cnf_code}}</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n        <div class=\\\" row\\\">\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"cluster_number\\\">Cluster Number</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cluster_number\\\" placeholder=\\\"Cluster Number\\\" formControlName=\\\"cluster_number\\\">\\n                <div *ngIf=\\\"formErrors.cluster_number\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\"> {{formErrors.cluster_number}}</span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"product_description\\\" class=\\\"required\\\">Product Description <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_description\\\" placeholder=\\\"Product Description\\\" formControlName=\\\"product_description\\\">\\n\\n                <div *ngIf=\\\"formErrors.product_description\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">   {{formErrors.product_description}}</span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"product_comment\\\">Product Comment</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_comment\\\" placeholder=\\\"Product Comment\\\" formControlName=\\\"product_comment\\\">\\n\\n            </div>\\n        </div>\\n        <div class=\\\" row\\\">\\n            <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"restaurantTypes\\\">\\n                <label for=\\\"restaurant_type\\\">Restaurant Type</label>\\n                <select class=\\\"form-control\\\" id=\\\"restaurant_type\\\" placeholder=\\\"Select a Restaurant Type\\\" formControlName=\\\"restaurant_type\\\">\\n\\n                    <option value=\\\"\\\" selected>Select a Restaurant Type</option>\\n                    <option *ngFor=\\\"let restaurantTypes of restaurantTypes;let i = index\\\" [value]=\\\"restaurantTypes\\\">{{restaurantTypes}}</option>\\n\\n                </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"types\\\">\\n                <label for=\\\"type\\\">Type</label>\\n                <select class=\\\"form-control\\\" id=\\\"Type\\\" formControlName=\\\"type\\\">\\n\\n                    <option value=\\\"\\\" selected>Select a Type</option>\\n                    <option *ngFor=\\\"let type of types;let i = index\\\" [value]=\\\"type\\\">{{type}}</option>\\n\\n                </select>\\n            </div>\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!productForm.valid || submitted\\\">Save</button>\\n</div>\\n</div>\\n\\n</form>\\n</div>\\n\\n</mat-card>\\n</div>\\n</div>\\n<confirm-box [flag]=\\\"flag\\\"  *ngIf=\\\"flag\\\"></confirm-box>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createProduct/create-product.component.html\n// module id = ./src/app/createRecords/createProduct/create-product.component.html\n// module chunks = main","import { Component, OnChanges, Input } from '@angular/core';\nimport { createProductFields, classificationList, Classification_name, Classification_number, Response, productCreateResponse, GenericList } from '../../data-model';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n    selector: 'create-product',\n    templateUrl: './create-product.component.html',\n    styleUrls: ['./create-product.component.css'],\n    providers: [CreateRecordService]\n\n})\nexport class CreateProductComponent implements OnChanges {\n\n\n\n    isLoading: boolean = false;\n    submitted = false;\n    offset: number = 0;\n    product: createProductFields;\n\n    errorMessage: string;\n    listOfClass: classificationList[];\n    flag: number;\n    restaurantTypes: GenericList;\n    types: GenericList;\n    previousClassificationNumberValue: string;\n    previousClassificationNameValue: string;\n\n\n    serverDown: boolean = false;\n\n    productForm: FormGroup;\n\n    constructor(private fb: FormBuilder,\n        private createRecordService: CreateRecordService,\n        private searchService: SearchService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n\n        this.createForm();\n\n\n    }\n    ngOnInit(): void {\n        this.searchService.getClassificationRestaurant().subscribe(response => {\n            const { data, message, status } = response[0];\n            //const cl = response;\n            this.listOfClass = data.dataList;\n            this.restaurantTypes = response[1].dataList;\n            this.types = response[2].dataList;\n\n\n\n        }\n        );\n    }\n\n    ngOnChanges() {\n        this.flag = null;\n        this.submitted = false;\n        this.productForm.reset({\n            classification_name: this.product.classification_name,\n            Classification_number: this.product.classification_number,\n            classification_type: this.product.classification_type,\n            product_manufacturer: this.product.product_manufacturer,\n            product_brand: this.product.product_brand,\n            cnf_code: this.product.cnf_code,\n            cluster_number: this.product.cluster_number,\n            product_description: this.product.product_description,\n            product_comment: this.product.product_comment,\n            restaurant_type: this.product.restaurant_type,\n            type: this.product.type\n\n        }\n        );\n\n    }\n\n    createForm() {\n        this.productForm = this.fb.group({\n            classification_name: '',\n            classification_number: '',\n            classification_type: \"Sodium GBL\",\n            product_manufacturer: '',\n            product_brand: '',\n            cnf_code: ['', [Validators.pattern('\\\\d+')]],\n            cluster_number: ['', [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            product_description: ['', [Validators.required]],\n            product_comment: '',\n            restaurant_type: \"\",\n            type: \"\"\n\n\n        });\n        this.productForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.productForm) { return; }\n        const form = this.productForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n\n        this.submitted = true;\n        this.setValues();\n\n        this.isLoading = true;\n        this.createRecordService.createProduct(JSON.stringify(this.product)).finally(() => this.isLoading = false).subscribe(response => {\n            const { id, message, status } = response;\n\n            if (status === 803) {\n                //Mandatory fields missing\n                this.errorMessage = \"Missing mandatory fields\";\n            } else if (status === 804) {\n                //Invalid input fields\n                this.errorMessage = \"Invalid input fields\";\n\n                // console.log(\"Here 203\",data.dataList);\n            } else if (status === 205) {\n                this.errorMessage = \"Can't create a record with no argument provided\";\n                //console.log(\"Here 204\",data.dataList);\n            } else if (status === 200) {\n                this.flag = 1;\n                setTimeout(() => {\n                    this.router.navigate(['/viewproduct', id.value]);\n\n                },\n                    4000);\n            }\n            else {\n                this.errorMessage = \"Something happened, try again\";\n\n            }\n\n        }, (error) => {\n            this.errorMessage = \"Can't access the server at this time\";\n            this.serverDown = true;\n\n        });\n\n\n\n        // this.ngOnChanges();\n    }\n\n    prepareSaveProduct(): createProductFields {\n        return this.productForm.value;\n    }\n\n\n\n\n    formErrors = {\n        'product_description': '',\n        'cnf_code': '',\n        'cluster_number': ''\n    }\n    validationMessages = {\n        'product_description': {\n            'required': 'Description is required'\n        },\n        'cnf_code': {\n            'pattern': 'Must be a digit'\n        },\n        'cluster_number': {\n            'pattern': 'Must be a number'\n        }\n\n    }\n    setValues(): void {\n\n        this.product = this.prepareSaveProduct();\n        this.submitted = true;\n        this.product.classification_number = this.product.classification_number == \"\" ? null : this.product.classification_number;\n        this.product.cnf_code = this.product.cnf_code == \"\" ? null : this.product.cnf_code;\n        this.product.cluster_number = this.product.cluster_number == \"\" ? null : this.product.cluster_number;\n\n\n    }\n\n    setClassificationName(n: string) {\n\n\n        //this.previousClassificationNumberValue = n;\n\n        if (n != null && n != \"\") {\n\n            var index = this.listOfClass.findIndex(function (item, i) {\n                return item.classification_name === n;\n            });\n\n            if (this.productForm.controls['classification_number'].value != this.listOfClass[index]['classification_number']) {\n                this.productForm.controls['classification_number'].patchValue(this.listOfClass[index]['classification_number']);\n            }\n        } else {\n            if (this.productForm.controls['classification_name'].value != null && this.productForm.controls['classification_name'].value != \"\") {\n                this.productForm.controls['classification_number'].patchValue(\"\");\n\n            }\n        }\n    }\n\n\n    setClassificationNumber(n: String) {\n\n        // if (n != null && n != \"\") {\n\n        // if(this.productForm.controls['classification_name'].value != null)\n\n        if (n != null && n != \"\") {\n            var index = this.listOfClass.findIndex(function (item, i) {\n                return item.classification_number === n;\n            });\n\n            if (this.productForm.controls['classification_name'].value != this.listOfClass[index]['classification_name']) {\n                this.productForm.controls['classification_name'].patchValue(this.listOfClass[index]['classification_name']);\n            }\n        } else {\n\n            if (this.productForm.controls['classification_number'].value != null && this.productForm.controls['classification_number'].value!= \"\") {\n                this.productForm.controls['classification_name'].patchValue(\"\");\n\n            }\n        }\n\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createProduct/create-product.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\n// import { ViewProductModule} from '../../views/viewProduct/view-product.module'\nimport { CreateProductComponent }  from './create-product.component';\nimport {RouterModule} from '@angular/router';\nimport {CreateProductRoutingModule} from './create-product-routing.module'\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nBrowserModule,\nConfirmBoxModule,\n// ViewProductModule\nCreateProductRoutingModule\n\n      \n       ],\n  declarations: [ \n\n    CreateProductComponent\n    ],\n  exports: [\n    CreateProductComponent\n   ]\n\n})\nexport class CreateProductModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createProduct/create-product.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateSalesComponent }  from './create-sales.component';\n\n\nconst createSalestRoutes: Routes = [\n\n    {\n        path: 'salescreate/:id', component: CreateSalesComponent\n    },\n\n\n];\n\n@NgModule({\n  imports: [\n            RouterModule.forRoot(\n            createSalestRoutes,\n            { enableTracing: true } // <-- debugging purposes only\n        )\n  ],\n  declarations: []\n})\nexport class CreateSalesRoutingModule {\n\n\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createSales/create-sales-routing.module.ts","module.exports = \"\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n\\n.form-control {\\n    width: 100% !important;\\n}\\n\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n\\n.DivHeader{\\n    position: relative;\\n}\\n\\ndiv.bodycard{\\n    position: relative;\\n}\\n\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n\\n.dateIcon{\\n\\n    position: absolute;\\ntop: 26px;\\n    right: 9px;\\n\\n}\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createSales/create-sales.component.css\n// module id = ./src/app/createRecords/createSales/create-sales.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"message\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{message}}</div>\\n</div>\\n<div class=\\\"DivHeader\\\" style=\\\"margin-bottom: 60px;\\\">\\n<div class=\\\"DivLogo\\\">\\n    Create Sales\\n</div>\\n\\n<div class=\\\"bodycard\\\">\\n    <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n<div class=\\\"well2\\\">\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"salesForm\\\">\\n\\n\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"salesUPC\\\" class=\\\"required\\\">Sales UPC <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesUPC\\\" placeholder=\\\"Sales UPC\\\" formControlName=\\\"sales_upc\\\">\\n                <div *ngIf=\\\"formErrors.sales_upc\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.sales_upc}}</span>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"dollarVolume\\\" class=\\\"required\\\">Dollar Volume <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dollarVolume\\\" placeholder=\\\"Dollar Volume\\\" formControlName=\\\"dollar_volume\\\">\\n                <div *ngIf=\\\"formErrors.dollar_volume\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_volume}}</span>\\n                </div>\\n\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"KiloVolume\\\" class=\\\"required\\\">Kilo Volume <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloVolume\\\" placeholder=\\\"Kilo Volume\\\" formControlName=\\\"kilo_volume\\\">\\n\\n                <div *ngIf=\\\"formErrors.kilo_volume\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume}}</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"salesYear\\\">Sales Year</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesYear\\\" placeholder=\\\"Sales Year\\\" formControlName=\\\"sales_year\\\">\\n                               \\n                <div *ngIf=\\\"formErrors.sales_year\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.sales_year}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"NielsenCategory\\\" class=\\\"required\\\">Nielsen Category <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NielsenCategory\\\" placeholder=\\\"Nielsen Category\\\" formControlName=\\\"nielsen_category\\\">\\n                <div *ngIf=\\\"formErrors.nielsen_category\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.nielsen_category}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"salesSource\\\">Sales Source</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesSource\\\" placeholder=\\\"Sales Source\\\" formControlName=\\\"sales_source\\\">\\n\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"salesDescription\\\" class=\\\"required\\\">Sales Description <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesDescription\\\" placeholder=\\\"Sales Description\\\" formControlName=\\\"sales_description\\\">\\n                <div *ngIf=\\\"formErrors.sales_description\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.sales_description}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"SalesComment\\\">Sales Comment</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"SalesCsomment\\\" placeholder=\\\"Sales Comment\\\" formControlName=\\\"sales_comment\\\">\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                    <label for=\\\"salesCollectionDate\\\">Sales Collection Date (mm-dd-yyyy)</label>\\n                <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"salesCollectionDate\\\"  formControlName=\\\"sales_collection_date\\\">\\n\\n            </div>\\n\\n\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"salesBrand\\\">Sales Brand</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesBrand\\\" placeholder=\\\"Sales Brand\\\" formControlName=\\\"sales_brand\\\">\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"DollarRank\\\">Dollar Rank</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarRank\\\" placeholder=\\\"Dollar Rank\\\" formControlName=\\\"dollar_rank\\\">\\n                <div *ngIf=\\\"formErrors.dollar_rank\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_rank}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"DollarVolumePercentageChange\\\" class=\\\"required\\\">Dollar Volume % Change <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarVolumePercentageChange\\\" placeholder=\\\"Dollar Volume % Change\\\" formControlName=\\\"dollar_volume_percentage_change\\\">\\n\\n                <div *ngIf=\\\"formErrors.dollar_volume_percentage_change\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_volume_percentage_change}}</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"KiloVolumePercentageChange\\\" class=\\\"required\\\">Kilo Volume % Change <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloVolumePercentageChange\\\" placeholder=\\\"Kilo Volume % Change\\\" formControlName=\\\"kilo_volume_percentage_change\\\">\\n                <div *ngIf=\\\"formErrors.kilo_volume_percentage_change\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume_percentage_change}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"AverageAcDist\\\">Average AC Dist</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"AverageAcDist\\\" placeholder=\\\"Average AC Dist\\\" formControlName=\\\"average_ac_dist\\\">\\n                <div *ngIf=\\\"formErrors.average_ac_dist\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.average_ac_dist}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"AverageRetailPrice\\\">Average Retail Price</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"AverageRetailPrice\\\" placeholder=\\\"Average Retail Price\\\" formControlName=\\\"average_retail_price\\\">\\n                <div *ngIf=\\\"formErrors.average_retail_price\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.average_retail_price}}</span>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"DollarVolumeTotal\\\" class=\\\"required\\\">Dollar Volume Total <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarVolumeTotal\\\" placeholder=\\\"Dollar Volume Total\\\" formControlName=\\\"dollar_volume_total\\\">\\n                <div *ngIf=\\\"formErrors.dollar_volume_total\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_volume_total}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"KiloVolumeTotal\\\" class=\\\"required\\\">Kilo Volume Total <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloVolumeTotal\\\" placeholder=\\\"Kilo Volume Total\\\" formControlName=\\\"kilo_volume_total\\\">\\n                <div *ngIf=\\\"formErrors.kilo_volume_total\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume_total}}</span>\\n                </div>\\n            </div>\\n\\n\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"ControlLabelFlag\\\">Control label flag</label>\\n                <select class=\\\"form-control\\\" id=\\\"ControlLabelFlag\\\" formControlName=\\\"control_label_flag\\\">\\n\\n\\t\\t\\t<option value=\\\"\\\" selected>Control label flag?</option>\\n\\t\\t\\t  <option value=\\\"1\\\" >Yes</option>\\n\\t\\t\\t<option value=\\\"0\\\">No</option>\\n\\t\\t\\t </select>\\n            </div>\\n\\n\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"DollarShare\\\" class=\\\"required\\\">Dollar Share <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarShare\\\" placeholder=\\\"Dollar Share\\\" formControlName=\\\"dollar_share\\\">\\n                <div *ngIf=\\\"formErrors.dollar_share\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_share}}</span>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"KiloShare\\\" class=\\\"required\\\">Kilo Share <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloShare\\\" placeholder=\\\"Kilo Share\\\" formControlName=\\\"kilo_share\\\">\\n                <div *ngIf=\\\"formErrors.kilo_share\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_share}}</span>\\n                </div>\\n\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"ClusterNumber\\\"> Cluster Number</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ClusterNumber\\\" placeholder=\\\"Cluster Number\\\" formControlName=\\\"cluster_number\\\">\\n\\n                <div *ngIf=\\\"formErrors.cluster_number\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.cluster_number}}</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"KiloRank\\\">Kilo Rank</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloRank\\\" placeholder=\\\"Kilo Rank\\\" formControlName=\\\"kilo_volume_rank\\\">\\n                <div *ngIf=\\\"formErrors.kilo_volume_rank\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume_rank}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\">\\n\\n                <label for=\\\"SalesManufacturer\\\">Sales Manufacturer</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"SalesManufacturer\\\" placeholder=\\\"Sales Manufacturer\\\" formControlName=\\\"sales_manufacturer\\\">\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                <label for=\\\"classificationNumber\\\">Classification Number</label>\\n                <select class=\\\"form-control\\\" id=\\\"classificationNumber\\\" formControlName=\\\"classification_number\\\">\\n      <option value=\\\"\\\" selected>Select a Classification Number</option>\\n      <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n     \\n\\n</select>\\n\\n            </div>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n                   <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"numberOfUnits\\\">Number of units</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"numberOfUnits\\\" placeholder=\\\"Number of units\\\" formControlName=\\\"number_of_units\\\">\\n                <div *ngIf=\\\"formErrors.number_of_units\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.number_of_units}}</span>\\n                </div>\\n            </div>\\n       \\n       \\n                        <div class=\\\"form-group col-lg-4\\\">\\n                <label for=\\\"classificationType\\\">Classification Type  </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classificationType\\\" placeholder=\\\"Enter the Classification Type\\\" formControlName=\\\"classification_type\\\">\\n\\n            </div>\\n\\n</div>\\n<div class=\\\"row\\\">\\n            <div class=\\\"form-group col-lg-12\\\">\\n                <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!salesForm.valid || salesForm.pristine || isLoading || submitted\\\">Save</button>\\n</div>\\n\\n</div>\\n</form>\\n</div>\\n\\n</mat-card>\\n</div>\\n</div>\\n\\n<confirm-box [flag]=\\\"flag\\\"  *ngIf=\\\"flag\\\"></confirm-box>\\n\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/createRecords/createSales/create-sales.component.html\n// module id = ./src/app/createRecords/createSales/create-sales.component.html\n// module chunks = main","import { Component, OnChanges, Input, Output, EventEmitter, AfterViewInit } from '@angular/core';\nimport { salesFieldsCreate, classificationList, Classification_name, Classification_number, Response } from '../../data-model';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { Subscription } from 'rxjs/Subscription';\n\nconst NUMBER_REGEX = '^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$';\n\n\ndeclare var $: any;\n@Component({\n    selector: 'add-sales',\n    templateUrl: './create-sales.component.html',\n    styleUrls: ['./create-sales.component.css'],\n    providers: [CreateRecordService]\n\n})\nexport class CreateSalesComponent implements OnChanges {\n\n\n\n\n    date_input: any;\n    isLoading: boolean = false;\n    submitted: boolean = false;\n    offset: number = 0;\n    message: string = null;\n    salesField: salesFieldsCreate;\n    id: number;\n    flag: number = null;\n    listOfClass: classificationList[];\n    serverDown: boolean = false;\n    salesForm: FormGroup;\n    confirmed = false;\n    announced = false;\n    subscription: Subscription;\n      mission = null;\n\n\n    @Output() updateView = new EventEmitter<number>();\n\n    constructor(private fb: FormBuilder,\n        private createRecordService: CreateRecordService,\n        private searchService: SearchService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n\n this.createForm();\n  \n       \n\n\n    }\n    ngOnInit(): void {\n\n        this.searchService.getClassificationLatest().subscribe(response => {\n            const {data, message, status} = response;\n            //const cl = response;\n            this.listOfClass = data.dataList;\n            console.log(this.listOfClass[0]['classification_name'], \"is the class number\");\n\n\n\n\n        }\n        );\n\n\n    }\n\n    ngOnChanges() {\n\n\n\n        this.flag = null;\n        this.submitted = false;\n\n        this.salesForm.reset({\n            sales_description: this.salesField.sales_description,\n            sales_upc: this.salesField.sales_upc,\n            sales_brand: this.salesField.sales_brand,\n            sales_manufacturer: this.salesField.sales_manufacturer,\n            dollar_rank: this.salesField.dollar_rank,\n            dollar_volume: this.salesField.dollar_volume,\n            dollar_share: this.salesField.dollar_share,\n            dollar_volume_percentage_change: this.salesField.dollar_volume_percentage_change,\n            kilo_volume: this.salesField.kilo_volume,\n            kilo_share: this.salesField.kilo_share,\n            kilo_volume_percentage_change: this.salesField.kilo_volume_percentage_change,\n            average_ac_dist: this.salesField.average_ac_dist,\n            average_retail_price: this.salesField.average_retail_price,\n            sales_source: this.salesField.sales_source,\n            nielsen_category: this.salesField.nielsen_category,\n            sales_year: this.salesField.sales_year,\n            control_label_flag: this.salesField.control_label_flag,\n            kilo_volume_total: this.salesField.kilo_volume_total,\n            kilo_volume_rank: this.salesField.kilo_volume_rank,\n            dollar_volume_total: this.salesField.dollar_volume_total,\n            cluster_number: this.salesField.cluster_number,\n            product_grouping: this.salesField.product_grouping,\n            sales_product_description: this.salesField.sales_product_description,\n            classification_number: this.salesField.classification_number,\n            classification_type: this.salesField.classification_type,\n            sales_comment: this.salesField.sales_comment,\n            sales_collection_date: this.salesField.sales_collection_date,\n            number_of_units: this.salesField.number_of_units\n            // kilo_rank: this.salesField.kilo_rank\n\n        }\n        );\n\n    }\n\n    createForm() {\n        this.salesForm = this.fb.group({\n            sales_description: ['', [Validators.required]],\n            sales_upc: ['', [\n                Validators.pattern('\\\\d+'),\n                Validators.required\n            ]],\n            sales_brand: '',\n            sales_manufacturer: '',\n            dollar_rank: [null, [Validators.pattern(NUMBER_REGEX)]],\n            dollar_volume: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            dollar_share: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            dollar_volume_percentage_change: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            kilo_volume: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required\n\n            ]],\n            kilo_share: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            kilo_volume_percentage_change: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            average_ac_dist: [null, [Validators.pattern(NUMBER_REGEX)]],\n            average_retail_price: [null, [Validators.pattern(NUMBER_REGEX)]],\n            sales_source: ['', [Validators.required]],\n            nielsen_category: ['', [Validators.required]],\n            sales_year: [null, [\n                Validators.pattern('\\\\d+')]],\n            control_label_flag: \"\",\n            kilo_volume_total: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            kilo_volume_rank: [null, [Validators.pattern(NUMBER_REGEX)]],\n            dollar_volume_total: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            cluster_number: [null, [Validators.pattern(NUMBER_REGEX)]],\n            product_grouping: [null, [Validators.pattern(NUMBER_REGEX)]],\n            sales_product_description: '',\n            classification_number: \"\",\n            classification_type: '',\n            sales_comment: '',\n            sales_collection_date: '',\n            number_of_units: [null, [Validators.pattern('\\\\d+')]]\n        });\n        this.salesForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.salesForm) { return; }\n        const form = this.salesForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n\n        this.flag = null;\n        this.message = null;\n        this.setValues();\n\n        this.isLoading = true;\n\n        this.createRecordService.createSales(JSON.stringify(this.salesField)).finally(() => this.isLoading = false).subscribe(response => {\n\n            const { message, status} = response;\n            console.log(\"status\",status);\n\n            if (status === 202) {\n                this.flag = 2;\n                // setTimeout(() => {\n                //     this.router.navigate(['/viewproduct', this.id]);\n\n                // },\n                // 4000); \n                this.submitted = false;\n            } else if (status === 203) {\n                this.flag = 2;\n                this.submitted = false;\n                // setTimeout(() => {\n                //     this.router.navigate(['/viewproduct', this.id]);\n\n                // },\n                // 4000); \n\n            } else if (status === 204) {\n                this.flag = 2;\n                // setTimeout(() => {\n                //     this.router.navigate(['/viewproduct', this.id]);\n\n                // },\n                // 4000); \n                this.submitted = false;\n            } else if (status === 200) {\n                this.flag = 1;\n                setTimeout(() => {\n                    this.router.navigate(['/viewproduct', this.id]);\n\n                },\n                    4000);\n            } else if (status === 604) {\n                this.flag = 2;\n                this.message = \"UPC code belong to a diffent product\";\n                this.submitted = false;\n                window.scrollTo(0, 0);\n\n            }\n            else {\n                this.flag = 2;\n                this.submitted = false;\n                // setTimeout(() => {\n                //     this.router.navigate(['/viewproduct', this.id]);\n\n                // },\n                // 4000); \n            }\n\n        }, (error) => {\n\n            this.serverDown = true;\n            this.flag = 2;\n            this.submitted = false;\n\n        });\n\n    }\n\n    prepareSaveProduct(): salesFieldsCreate {\n        return this.salesForm.value;\n    }\n\n\n\n\n\n    formErrors = {\n        'sales_description': '',\n        'sales_upc': '',\n        'dollar_rank': '',\n        'dollar_volume': '',\n        'dollar_share': '',\n        'dollar_volume_percentage_change': '',\n        'kilo_volume': '',\n        'kilo_share': '',\n        'kilo_volume_percentage_change': '',\n        'average_ac_dist': '',\n        'average_retail_price': '',\n        'sales_source': '',\n        'nielsen_category': '',\n        'sales_year': '',\n        'kilo_volume_total': '',\n        'kilo_volume_rank': '',\n        'dollar_volume_total': '',\n        'cluster_number': '',\n        'product_grouping': '',\n        'number_of_units': ''\n        // 'kilo_rank': ''\n    }\n\n    validationMessages = {\n        'sales_description': {\n            'required': 'Sales description is required'\n        },\n        'sales_upc': {\n            'pattern': 'Must be a digit',\n            'required': 'Sales UPC is required'\n        },\n        'dollar_rank': {\n            'pattern': 'Must be a number'\n        }\n        ,\n        'dollar_volume': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar volume is required'\n        },\n        'dollar_share': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar share is required'\n        },\n        'dollar_volume_percentage_change': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar volume % change is required'\n        },\n        'kilo_volume': {\n            'pattern': 'Must be a number',\n            'required': 'Kilo volume is required'\n        },\n        'kilo_share': {\n            'pattern': 'Must be a number',\n            'required': 'Kilo share is required'\n        },\n        'kilo_volume_percentage_change': {\n            'pattern': 'Must be a number',\n            'required': 'Kilo volume % change is required'\n        },\n        'average_ac_dist': {\n            'pattern': 'Must be a number'\n        },\n        'average_retail_price': {\n            'pattern': 'Must be a number'\n        },\n        'sales_source': {\n            'required': 'Sales source is required'\n        },\n        'nielsen_category': {\n            'required': 'Nielsen Category is required',\n\n        },\n        'sales_year': {\n            'pattern': 'Must be a digit'\n        },\n        'kilo_volume_total': {\n            'pattern': 'Must be a number'\n        },\n        'kilo_volume_rank': {\n            'pattern': 'Must be a number'\n        },\n        'dollar_volume_total': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar volume total is required'\n        },\n        'cluster_number': {\n            'pattern': 'Must be a number'\n        },\n        'product_grouping': {\n            'pattern': 'Must be a number'\n        },\n        'number_of_units': {\n            'pattern': 'Must be a digit'\n        }//,\n        // 'kilo_rank': {\n        //     'pattern': 'Must be a number'\n        // }\n    }\n    setValues(): void {\n        this.submitted = true;\n        var date = new DatePipe('en-US');\n\n        this.salesField = this.prepareSaveProduct();\n        // this.salesField.sales_collection_date = this.salesField.sales_collection_date ? date.transform(this.salesField.sales_collection_date, 'yyyy-MM-dd') : this.salesField.sales_collection_date;\n        this.salesField.sales_collection_date = this.salesField.sales_collection_date && this.salesField.sales_collection_date != \"\" ? this.salesField.sales_collection_date: null;\n\n        this.route.params.subscribe(params => {\n\n             this.salesField.product_id = +params['id'];\n                       // this.salesField.product_id = this.mission;\n\n            this.id = this.salesField.product_id;\n\n            this.salesField.number_of_units = this.salesField.number_of_units == \"\" ? null : this.salesField.number_of_units;\n            this.salesField.product_grouping = this.salesField.product_grouping == \"\" ? null : this.salesField.product_grouping;\n            this.salesField.average_retail_price = this.salesField.average_retail_price == \"\" ? null : this.salesField.average_retail_price;\n            this.salesField.sales_year = this.salesField.sales_year == \"\" ? null : this.salesField.sales_year;\n\n            this.salesField.dollar_rank = this.salesField.dollar_rank == \"\" ? null : this.salesField.dollar_rank;\n            this.salesField.dollar_volume = this.salesField.dollar_volume == \"\" ? null : this.salesField.dollar_volume;\n            this.salesField.dollar_share = this.salesField.dollar_share == \"\" ? null : this.salesField.dollar_share;\n            this.salesField.dollar_volume_percentage_change = this.salesField.dollar_volume_percentage_change == \"\" ? null : this.salesField.dollar_volume_percentage_change;\n            this.salesField.kilo_volume = this.salesField.kilo_volume == \"\" ? null : this.salesField.kilo_volume;\n\n            this.salesField.kilo_share = this.salesField.kilo_share == \"\" ? null : this.salesField.kilo_share;\n            this.salesField.kilo_volume_percentage_change = this.salesField.kilo_volume_percentage_change == \"\" ? null : this.salesField.kilo_volume_percentage_change;\n            this.salesField.average_ac_dist = this.salesField.average_ac_dist == \"\" ? null : this.salesField.average_ac_dist;\n\n            this.salesField.kilo_volume_total = this.salesField.kilo_volume_total == \"\" ? null : this.salesField.kilo_volume_total;\n            this.salesField.kilo_volume_rank = this.salesField.kilo_volume_rank == \"\" ? null : this.salesField.kilo_volume_rank;\n\n            this.salesField.dollar_volume_total = this.salesField.dollar_volume_total == \"\" ? null : this.salesField.dollar_volume_total;\n            this.salesField.cluster_number = this.salesField.cluster_number == \"\" ? null : this.salesField.cluster_number;\n\n\n        });\n\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createSales/create-sales.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { CreateSalesComponent }  from './create-sales.component';\nimport {RouterModule} from '@angular/router';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {CreateSalesRoutingModule} from './create-sales-routing.module'\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nBrowserModule,\nConfirmBoxModule,\nRouterModule,\nMatDatepickerModule,\nCreateSalesRoutingModule\n\n      \n       ],\n  declarations: [ \n\n    CreateSalesComponent\n    ],\n  exports: [\n    CreateSalesComponent\n   ]\n\n})\nexport class CreateSalesModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/createRecords/createSales/create-sales.module.ts","export type Response<T> = {\n    data: {\n        count?: number,\n        dataList?: T[],\n        values?: T[]\n    },\n    status?: number,\n    message?: string\n};\n\nexport type Params = {\n    classification_name: string;\n    classification_number: string;\n    classification_type: string;\n    product_manufacturer: string;\n    product_brand: string;\n    cnf_code: number;\n    cluster_number: number;\n    product_description: string;\n    product_comment: string;\n    restaurant_type?: string;\n    type?: string;\n    product_id?: number;\n    offset?: number;\n    flag?: boolean;\n    orderby?: string;\n    classification_list: ClassificationList[];\n\n};\n\nexport type createProductFields = {\n    classification_name: string;\n    classification_number: number | string;\n    classification_type: string;\n    product_manufacturer: string;\n    product_brand: string;\n    cnf_code: number | string;\n    cluster_number: number | string;\n    product_description: string;\n    product_comment: string;\n    restaurant_type: string;\n    type: string;\n\n\n};\n\nexport type productParams = {\n    classificationName: string;\n    classificationNumber: string;\n    classificationType: string;\n    productManufacturer: string;\n    productBrand: string;\n    cnfCode: number;\n    clusterNumber: number;\n    productDescription: string;\n    productComment: string;\n    productId?: number;\n    classification_list: ClassificationList[];\n\n};\n\n\nexport class addClass {\n    classificationName = '';\n    classificationNumber = '';\n    classificationType = '';\n    classificationId?: number;\n    productId?: number;\n}\n\nexport class classificationList {\n    classification_name: string;\n    classification_number: string;\n    classification_type: string;\n    classificationId?: number;\n    productId?: number;\n}\n\nexport class salesYearList {\n    salesYear = '';\n\n}\n\nexport const Classification_name = ['First classification', 'Second Classification', ''];\nexport const Classification_number = ['1.0121', '1.0122', '1.0123', ''];\n\nexport class ClassificationList {\n    classification_name: string;\n    classification_number: string;\n    classification_type: string;\n\n\n}\n\n\n\nexport type SalesInputFields = {\n    salesUpc: string,\n    salesDescription: string,\n    salesSource: string,\n    salesYear: number,\n    nielsenCategory: string,\n    salesComment: string,\n    collectionDateFrom: string,\n    collectionDateTo: string,\n    productId: number,\n    offset: number,\n    flag: boolean,\n    orderBy: string\n};\n\nexport type SalesData = {\n    salesUpc: string,\n    salesDescription: string,\n    salesSource: string,\n    salesYear: number,\n    nielsenCategory: string,\n    dollarVolume: number,\n    kiloVolume: number,\n    productId: number\n};\n\nexport type LabelInputFields = {\n    labelUpc: string,\n    labelDescription: string,\n    labelSource: string,\n    labelIngredients: string,\n    collectionDateFrom: string,\n    collectionDateTo: string,\n    productId: number,\n    offset: number,\n    flag: boolean,\n    orderBy: string\n};\n\nexport type LabelData = {\n    labelUpc: string,\n    labelDescription: string,\n    labelSource: string,\n    labelCollectionDate: string,\n    labelLastEditDate: string,\n    labelLastEditedDate: string,\n    labelLastEditedBy: string,\n    productId: number\n\n}\n\nexport type InsertDataMessage = {\n\n    status: number,\n    message: string\n}\n\nexport type SearchAllInputFields = {\n    //Produt Fields    \n    product_description: string,\n    product_manufacturer: string,\n    product_brand: string,\n    classification_name: string,\n    classification_number: string,\n    classification_type: string,\n    cnf_code: number,\n    cluster_number: number,\n    product_comment: string,\n\n    restaurant_type?: string,\n    type?: string,\n    //Market Share Fields\n\n    sales_upc: string,\n    sales_description: string,\n    sales_year: number,\n    nielsen_category: string,\n    sales_source: string,\n    sales_collection_date_from: string,\n    sales_collection_date_to: string,\n    dollar_rank_from: number,\n    dollar_rank_to: number,\n    sales_comment: string,\n\n    //Labels Fields\n\n\n    label_upc: string,\n    label_description: string,\n    label_source: string,\n    label_ingredients: string,\n    label_collection_date_from: string,\n    label_collection_date_to: string,\n    label_comment: string,\n\n\n    product_id?: number,\n    offset?: number,\n    flag?: boolean,\n    orderby?: string,\n\n\n};\n\n\n\nexport type productAllFields = {\n    classification_name: string;\n    classification_number: string;\n    classification_type: string;\n    cluster_number: string;\n    cnf_code: number;\n    creation_date: string;\n    edited_by: string;\n    product_comment: string;\n    product_brand?: string;\n    last_edit_date: string;\n    product_description: string;\n    product_id: number;\n    product_manufacturer: string;\n    restaurant_type: string;\n    type: string;\n\n};\n\n\n\nexport type salesFieldsView = {\n    sales_id: number,\n    dollar_volume: string;\n    nielsen_category: string;\n    sales_source: string;\n    sales_upc: string;\n    sales_year: number;\n};\n\nexport type labelFieldsView = {\n    label_id: number;\n    label_upc: string;\n    label_description: string;\n    label_collection_date: string;\n    label_source: string;\n    label_creation_date: string;\n    label_last_edited_by: string;\n    label_last_edit_date: string;\n};\n\n\n\n\nexport type salesFieldsCreate = {\n    product_id: number,\n    sales_description: string,\n    sales_upc: string,\n    sales_brand: string,\n    sales_manufacturer: string,\n    dollar_rank: number | string,\n    dollar_volume: number | string,\n    dollar_share: number | string,\n    dollar_volume_percentage_change: number | string,\n    kilo_volume: number | string,\n    kilo_share: number | string,\n    kilo_rank: number | string,\n    kilo_volume_percentage_change: number | string,\n    average_ac_dist: number | string,\n    average_retail_price: number | string,\n    sales_source: string,\n    nielsen_category: string,\n    sales_year: number | string,\n    control_label_flag: boolean,\n    kilo_volume_total: number | string,\n    kilo_volume_rank: number | string,\n    dollar_volume_total: number | string,\n    cluster_number: number | string,\n    product_grouping: number | string,\n    sales_product_description: string,\n    classification_number:  string,\n    classification_type: string | string,\n    sales_comment: string,\n    sales_collection_date: string,\n    number_of_units: number | string,\n    edited_by: string\n\n\n}\n\nexport type AllSalesFieldsView = {\n    product_id?: number,\n    sales_id?: number,\n    sales_description: string,\n    sales_upc: string,\n    sales_brand: string,\n    sales_manufacturer: string,\n    dollar_rank: number | string,\n    dollar_volume: number | string,\n    dollar_share:  string,\n    dollar_volume_percentage_change: number | string,\n    kilo_volume: number | string,\n    kilo_share: number | string,\n    kilo_rank: number | string,\n    kilo_volume_percentage_change: number | string,\n    average_ac_dist: number | string,\n    average_retail_price: number | string,\n    sales_source: string,\n    nielsen_category: string,\n    sales_year: number | string,\n    control_label_flag: boolean | string,\n    kilo_volume_total: number | string,\n    kilo_volume_rank: number | string,\n    dollar_volume_total: number | string,\n    cluster_number: number | string,\n    product_grouping: number | string,\n    sales_product_description: string,\n    classification_number:  string,\n    classification_type: string,\n    sales_comment: string,\n    sales_collection_date: string,\n    number_of_units: number | string,\n    edited_by?: string,\n    creation_date?: string,\n    last_edit_date?: string;\n\n}\nexport type SearchAllResponse = {\n\n    classification_name: string,\n    classification_number: number,\n    classification_type: string,\n    cluster_number: number,\n    cnf_code: number,\n    dollar_rank: number,\n    label_collection_date: string,\n    label_comment: string,\n    label_description: string,\n    label_ingredients: string,\n    label_source: string,\n    label_upc: string,\n    nielsen_category: string,\n    product_brand: string,\n    product_comment: string,\n    product_description: string,\n    product_id: number,\n    product_manufacturer: string,\n    sales_collection_date: string,\n    sales_comment: string,\n    sales_description: string,\n    sales_source: string,\n    sales_upc: string,\n    sales_year: number\n}\nexport type UpdateResponse = {\n    message: string;\n    status: number\n}\n\nexport type productCreateResponse = {\n    id: {\n        value: number;\n        type: number;\n    };\n    message: string;\n    status: number;\n\n}\nexport type DeleteResponse = {\n    message: string;\n    status: number\n}\n\nexport type labelCreateFields = {\n    product_id: number;\n    package_description: string;\n    package_upc: string;\n    package_brand: string;\n    package_manufacturer: string;\n    package_country: string;\n    package_size: number | string;\n    package_size_unit_of_measure: string;\n    storage_type: string;\n    storage_statements: string;\n    health_claims: string;\n    other_package_statements: string;\n    suggested_directions: string;\n    ingredients: string;\n    multi_part_flag: boolean| string;\n    nutrition_fact_table: string;\n    as_prepared_per_serving_amount: number| string;\n    as_prepared_unit_of_measure: string;\n    as_sold_per_serving_amount: number| string;\n    as_sold_unit_of_measure: string;\n    as_prepared_per_serving_amount_in_grams: number| string;\n    as_sold_per_serving_amount_in_grams: number| string;\n    package_comment: string;\n    package_source: string;\n    package_product_description: string;\n    package_collection_date: string;\n    number_of_units: number | string;\n    edited_by: string;\n    informed_dining_program: string;\n    nft_last_update_date: string;\n    product_grouping: number | string;\n    child_item: boolean | string;\n    classification_number:  string;\n    classification_name: string;\n    nielsen_item_rank: string;\n    nutrient_claims: string,\n    package_nielsen_category: string;\n    common_household_measure: string;\n    calculated: boolean | string;\n\n}\n\nexport type labelNft = {\n    amount: number | string;\n    unit_of_measure: string;\n    flag: boolean;\n    daily_value_amount: number | string;\n    labelId?: number;\n}\n\nexport type labelViewFields = {\n    product_id: number;\n    package_id: number;\n    package_description: string;\n    package_upc: string;\n    package_brand: string;\n    package_manufacturer: string;\n    package_country: string;\n    package_size: number | string;\n    package_size_unit_of_measure: string;\n    storage_type: string;\n    storage_statements: string;\n    health_claims: string;\n    other_package_statements: string;\n    suggested_directions: string;\n    ingredients: string;\n    multi_part_flag: boolean| string;\n    nutrition_fact_table: string;\n    as_prepared_per_serving_amount: number| string;\n    as_prepared_unit_of_measure: string;\n    as_sold_per_serving_amount: number| string;\n    as_sold_unit_of_measure: string;\n    as_prepared_per_serving_amount_in_grams: number| string;\n    as_sold_per_serving_amount_in_grams: number| string;\n    package_comment: string;\n    package_source: string;\n    package_product_description: string;\n    package_collection_date: string;\n    number_of_units: number | string;\n    edited_by: string;\n    informed_dining_program: string;\n    nft_last_update_date: string;\n    product_grouping: number | string;\n    child_item: boolean | string;\n    classification_number: string;\n    classification_name: string;\n    nielsen_item_rank: string;\n    nutrient_claims: string,\n    package_nielsen_category: string;\n    common_household_measure: string;\n    calculated: boolean | string;\n    creation_date: string;\n    last_edit_date: string; \n\n}\n\nexport class nftFields {\n    name = \"\";\n    amount = \"\";\n    unit_of_measure = \"\";\n    daily_value = \"\";\n\n}\n\nexport const UofM = ['mg', 'g', 'kj', 'kcal'];\n\nexport class nftList {\n    nft: nftFields[];\n    flag: boolean ;\n    package_id: number;\n}\n\nexport const nftFieldsList : nftFields[] = [\n    {name: 'Energy', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Energy KJ', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Fat', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Saturated Fat', amount: \"\", unit_of_measure:\"\", daily_value:''},\n    {name: 'Trans Fat', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Omega-6 Polyunsaturated Fat', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Omega-3 Polyunsaturated Fat', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Carbohydrates', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Fibre', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Soluble Fibre', amount: \"\", unit_of_measure:\"\", daily_value:''},\n    {name: 'Insoluble Fibre', amount: \"\", unit_of_measure:\"\", daily_value:''},\n    {name: 'Sugar', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Sugar Alcohols', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Starch', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Protein', amount: \"\", unit_of_measure: \"\", daily_value:''},\n    {name: 'Cholesterol', amount: \"\", unit_of_measure:\"\", daily_value:''},\n    {name: 'Sodium', amount: \"\", unit_of_measure: '', daily_value:''},\n    {name: 'Saturated + Trans Fat', amount: \"\", unit_of_measure:\"\", daily_value:''}\n   \n   \n]\nexport const nftFieldsListAsPrepared : nftFields[] = [\n    {name: 'Energy', amount: \"\", unit_of_measure: \"\", daily_value:''}\n\n   \n   \n]\n\n\nexport type ResponseComponentName = {\n\n        dataList: Components[]\n};\nexport type Components = {\n    component_name: string;\n}\n\nexport type componentView = {\n\n    name: string;\n    amount: number;\n    unit_of_measure: string;\n    daily_value: string; \n    amount_per100g: number;\n} \nexport type NftAsSold = {\n\n    nft:  componentView[],\n    status: number;\n}\nexport type NftAsPrepared = {\n\n    nft:  componentView[],\n    status: number;\n}\n\nexport type GenericList = {\n    name: string;\n}\n\nexport type ImageModel = {\n    image_name: string,\n    image_id: number\n};\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-model.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \n  import { EditNftComponent} from './edit-nft.component';\n\n \nconst editNftRoutes: Routes = [\n  { path: 'edit-nft/:id/:flag',  component: EditNftComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(editNftRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class EditNftRoutingModule { }\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editNft/edit-nft-routing.module.ts","module.exports = \" input[text], button {\\n  color: #888;\\n  font-family: Cambria, Georgia;\\n}\\n\\nbutton {\\n  font-family: Arial;\\n  background-color: #eee;\\n  padding: 5px 10px;\\n  /*border-radius: 4px;*/\\n  cursor: pointer;\\n  cursor: hand;\\n}\\n\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\n\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #aaa;\\n  cursor: auto;\\n}\\n\\n.form-control{\\n    display: block;\\n    width: 100%;\\n    /*height: 34px;\\n    padding: 6px 12px;\\n  \\n    line-height: 1.42857143;\\n    color: #555;\\n    background-color: #fff;\\n    background-image: none;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;*/\\n}\\n\\n.deleteIcon{\\n    position: absolute;\\n    top: 10px;\\n    right: 20px;\\n    cursor:pointer;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editNft/edit-nft.component.css\n// module id = ./src/app/editForms/editNft/edit-nft.component.css\n// module chunks = main","module.exports = \"\\n\\n<div *ngIf=\\\"invalidInputDailyValue\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"invalidInputDailyValue\\\"><strong>Error!</strong> Invalid daily value amount for {{invalidInputDailyValue}} </div>\\n</div>\\n<div *ngIf=\\\"fibreExeeced\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{fibreExeeced}} </div>\\n</div>\\n<div *ngIf=\\\"fatExeeced\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{fatExeeced}} </div>\\n</div>\\n\\n<div *ngIf=\\\"missingName\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{missingName}} </div>\\n</div>\\n\\n<div *ngIf=\\\"invalidInput\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\" *ngIf=\\\"invalidInput\\\"><strong>Error!</strong> Invalid amount for {{invalidInput}} </div>\\n</div>\\n<div *ngIf=\\\"duplicateEntries\\\">\\n\\n\\n  <div class=\\\"alert alert-danger\\\"><strong>Error!</strong> {{duplicateEntries}} </div>\\n</div>\\n<div *ngIf=\\\"errorMessage\\\">\\n\\n\\n  <div *ngFor=\\\"let name of nameChangeLog\\\" class=\\\"alert alert-danger\\\"><strong>{{name}}</strong>  is missing amount or unit of Measure</div>\\n</div>\\n\\n<form [formGroup]=\\\"nftForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\n\\n\\n<div formArrayName=\\\"secretComponents\\\">\\n  <div *ngFor=\\\"let address of secretComponents.controls; let i=index\\\" [formGroupName]=\\\"i\\\">\\n    <!-- The repeated address template -->\\n    <div class=\\\"row append\\\"  *ngIf=\\\"flagNft =='true'\\\">\\n\\n\\n      <div class=\\\"form-group col-sm-3\\\"  *ngIf=\\\"responseComponentName && i > 17\\\">\\n\\n\\n                <select class=\\\"form-control\\\" id=\\\"componentName\\\" formControlName=\\\"name\\\" >\\n      <option *ngFor=\\\"let component of responseComponentName;let i = index\\\" [value]=\\\"component.component_name\\\" >{{component.component_name}}</option>\\n     \\n\\n        </select>\\n\\n            </div>\\n\\n         <div class=\\\"form-group col-sm-3\\\"  *ngIf=\\\"responseComponentName && i <= 17\\\">\\n\\n        <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"Component's Name\\\" [readOnly]=\\\"  i <= 17\\\">\\n\\n            </div>   \\n\\n      <div class=\\\"form-group col-sm-3\\\">\\n\\n        <input class=\\\"form-control\\\" formControlName=\\\"amount\\\" placeholder=\\\"Component's Amount\\\" >\\n\\n      </div>\\n\\n      <div class=\\\"form-group col-sm-3\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n\\n        <select class=\\\"form-control\\\" formControlName=\\\"unit_of_measure\\\">\\n          <option value=\\\"\\\" selected >Select a unit of measure</option>\\n\\n                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n               \\n            </select>\\n\\n      </div>\\n      <div class=\\\"form-group col-sm-3\\\">\\n        <input class=\\\"form-control\\\" formControlName=\\\"daily_value\\\" placeholder=\\\"Component's daily value\\\">\\n        <span class=\\\"glyphicon glyphicon-remove deleteIcon\\\" (click)=\\\"deleteClassification(i)\\\" *ngIf=\\\"i > 17\\\"></span>\\n      </div>\\n    </div>\\n\\n      <div class=\\\"row append\\\" *ngIf=\\\"flagNft =='false'\\\">\\n\\n\\n        <div class=\\\"form-group col-sm-3\\\">\\n\\n\\n          <select class=\\\"form-control\\\" id=\\\"componentName\\\" formControlName=\\\"name\\\">\\n      <option *ngFor=\\\"let component of responseComponentName;let i = index\\\" [value]=\\\"component.component_name\\\" >{{component.component_name}}</option>\\n     \\n\\n        </select>\\n\\n        </div>\\n\\n\\n\\n        <div class=\\\"form-group col-sm-3\\\">\\n\\n          <input class=\\\"form-control\\\" formControlName=\\\"amount\\\" placeholder=\\\"Component's Amount\\\">\\n\\n        </div>\\n\\n        <div class=\\\"form-group col-sm-3\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n\\n          <select class=\\\"form-control\\\" formControlName=\\\"unit_of_measure\\\">\\n          <option value=\\\"\\\" selected >Select a unit of measure</option>\\n          \\n                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n            </select>\\n\\n        </div>\\n        <div class=\\\"form-group col-sm-3\\\">\\n          <input class=\\\"form-control\\\" formControlName=\\\"daily_value\\\" placeholder=\\\"Component's daily value\\\">\\n          <span class=\\\"glyphicon glyphicon-remove deleteIcon\\\" (click)=\\\"deleteClassification(i)\\\"></span>\\n        </div>\\n      </div>\\n  </div>\\n\\n</div>\\n\\n  \\n            <div class=\\\"form-group \\\">\\n              <button (click)=\\\"addComponent()\\\" type=\\\"button\\\" style=\\\"float:right\\\" [disabled]=\\\"submitted\\\">Add a Component</button>\\n                <button style=\\\"float:right;  width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\"  [disabled]=\\\"nftForm.pristine || !formValid || !nftForm.valid || submitted\\\">Save</button>\\n\\n</div>\\n</form>\\n\\n<confirm-box [flag]=\\\"flag\\\"  *ngIf=\\\"flag\\\"></confirm-box>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editNft/edit-nft.component.html\n// module id = ./src/app/editForms/editNft/edit-nft.component.html\n// module chunks = main","import { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Component, Input, OnChanges } from '@angular/core';\nimport { nftFields, UofM, nftFieldsList, nftList, ResponseComponentName, Components, NftAsSold } from '../../data-model';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { EditRecordService } from '../../services/edit-records.service';\nimport { GetRecordService } from '../../services/getRecord.service';\n\n\n\n@Component({\n    selector: 'edit-nft',\n    templateUrl: './edit-nft.component.html',\n    styleUrls: ['./edit-nft.component.css'],\n    providers:[EditRecordService]\n})\nexport class EditNftComponent implements OnChanges {\n\n\n    nftForm: FormGroup;\n    nameChangeLog: string[] = [];\n    unit_of_measure = UofM;\n    nftFieldsInput: nftFields;\n    nftListArray: nftList;\n    errorMessage: string = null;\n    missingName: string = null;\n    fat: number = 0;\n    sumOfAllFat: number = 0;\n    duplicateEntries: string = null;\n    invalidInput: string = null;\n    id: number;\n    flag: number = null;\n    submitted: boolean = false;\n    listOfUnitOfMeasure: string[];\n\n    responseComponentName: Components[];\n    isLoading: boolean;\n    fatExeeced: string;\n    fibreExeeced: string;\n    fibre: number = 0;\n    totalFibre: number = 0;\n    formValid: boolean = true;\n    invalidInputDailyValue: string = null;\n    nftAsSold:  nftFields[];\n    nftValues:  nftFields[];\n    flagNft: any = null;\n\n\n    constructor(\n        private fb: FormBuilder, private router: Router,\n        private route: ActivatedRoute,\n        private editRecordService: EditRecordService,\n        private getRecordService: GetRecordService) {\n\n        this.createForm();\n         this.logNameChange();\n    }\n\n    ngOnInit(): void {\n\n        this.responseComponentName = null;\n\n        this.route.paramMap\n            .switchMap((param: ParamMap) =>\n\n                this.getRecordService.getNftSoldRecordsEdit(param.get('id'), param.get('flag'))).subscribe(\n            response => {\n               this.flagNft = this.route.snapshot.paramMap.get('flag') == 'true' ? 'true': (this.route.snapshot.paramMap.get('flag') =='false'? 'false':null );\n                const {dataList} = response[0];\n                this.responseComponentName = dataList;\n                this.listOfUnitOfMeasure = response[1].dataList;\n                this.nftValues = response[2].nft;\n                this.nftValues.forEach(function(element){\n                    element.unit_of_measure = element.unit_of_measure==null?\"\":element.unit_of_measure;\n                });\n                this.nftAsSold = this.nftValues;\n\n                this.ngOnChanges();\n        this.logNameChange();\n\n\n            });\n\n\n\n    }\n\n    createForm() {\n        this.nftForm = this.fb.group({\n\n            secretComponents: this.fb.array([])\n\n        });\n    }\n\n    ngOnChanges() {\n        this.submitted = false;\n        this.nftForm.reset({\n        });\n\n        this.setComponents(this.nftAsSold);\n\n    }\n\n    get secretComponents(): FormArray {\n        return this.nftForm.get('secretComponents') as FormArray;\n    };\n\n    setComponents(components: nftFields[]) {\n        const componentsFGs = components.map(component => this.fb.group(component));\n        const componentFormArray = this.fb.array(componentsFGs);\n        this.nftForm.setControl('secretComponents', componentFormArray);\n    }\n\n    addComponent() {\n        this.secretComponents.push(this.fb.group(new nftFields()));\n    }\n\n    onSubmit() {\n\n        this.nftListArray = this.preparenftFieldsInput();\n    \n        this.submitted = true;\n        this.isLoading = true;\n        this.flag = null\n        this.editRecordService.updateNft(JSON.stringify(this.nftListArray)).finally(() => this.isLoading = false).subscribe(response => {\n\n            const {id, message, status} = response;\n            if (status === 803) {\n                this.flag = 2;\n                this.errorMessage = \"Missing mandatory fields\";\n                this.submitted = false;\n            } else if (status === 804) {\n                this.errorMessage = \"Invalid input fields\";\n                this.flag = 2;\n                this.submitted = false;\n            } else if (status === 205) {\n\n                this.flag = 2;\n                this.errorMessage = \"Can't create a record with no argument provided\";\n                this.submitted = false;\n\n            } else if (status === 200) {\n                this.flag = 1;\n                setTimeout(() => {\n                    this.router.navigate(['/view-package', this.nftListArray.package_id]);\n\n                },\n                    4000);\n            }\n            else {\n                this.flag = 2;\n                this.errorMessage = \"Something happened, try again\";\n                this.submitted = false;\n\n            }\n\n        }, (error) => {\n            this.errorMessage = \"Can't access the server at this time\";\n            this.flag = 2;\n            this.submitted = false;\n\n        });;\n    }\n\n\n    preparenftFieldsInput(): nftList {\n        const formModel = this.nftForm.value;\n\n                        var reg = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$\");\n\n        const componentsDeepCopy: nftFields[] = formModel.secretComponents.map(\n            (component: nftFields) => Object.assign({}, component)\n        );\n\n        componentsDeepCopy.forEach((element: any) => {\n            if (!reg.test(element.amount)) {\n                element.amount = null;\n            }\n            if (!reg.test(element.daily_value))  {\n                element.daily_value = null;\n            }\n\n        });\n\n        this.route.params.subscribe(params => {\n            this.id = +params['id'];\n        });\n\n\n        const saveNft: nftList = {\n\n            nft: componentsDeepCopy,\n            package_id: this.id,\n            flag: this.flagNft\n        };\n        return saveNft;\n    }\n\n    revert() { this.ngOnChanges(); }\n\n    deleteClassification(i: number) {\n\n        this.secretComponents.removeAt(i)\n\n    }\n    logNameChange() {\n        const nameControl = this.nftForm.get('secretComponents');\n    \n    \n        nameControl.valueChanges.forEach(\n    \n          (value: any) => {\n            this.fat = 0;\n            this.sumOfAllFat = 0;\n            this.errorMessage = null;\n            this.nameChangeLog = [];\n            this.missingName = null;\n            this.duplicateEntries = null;\n            this.invalidInput = null;\n            this.fatExeeced = null;\n            this.fibre = 0;\n            this.totalFibre = 0;\n            this.formValid = true;\n            this.fibreExeeced = null;\n            this.invalidInputDailyValue = null;\n    \n                var valueArr = value.map((item: any) => item.name);\n    \n            valueArr = valueArr.filter(function (n: any) { return n != undefined });\n\n            var isDuplicate = valueArr.some(function (item: any, idx: number) {\n    \n              return valueArr.indexOf(item) != idx\n            });\n            if (isDuplicate) {\n              this.duplicateEntries = \"One or more components have been selected more than once\";\n              this.formValid = false;\n            }\n    \n            value.forEach((element: any) => {\n    \n              if (element.name != null && element.name != \"\") {\n    \n                if ((\n                    (\n                    (element.amount !== \"\" && element.amount !== null) || element.amount===0) \n                    && (element.unit_of_measure === \"\" ||  element.unit_of_measure === null ||  element.unit_of_measure === undefined)) \n                    || \n                    ( (element.amount === \"\" || element.amount === null || element.amount === undefined) && element.amount!==0  \n                     && (element.unit_of_measure !== \"\" || element.unit_of_measure ===null || element.unit_of_measure ===undefined )) ) {\n    \n                  this.nameChangeLog.push(element.name);\n                  this.formValid = false;\n                  this.errorMessage = \"not null\";\n                }\n                var re = new RegExp(\"^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$\");\n                if (!re.test(element.amount) && element.amount != 0 && element.amount !== \"\" && element.amount !== null) {\n                  this.invalidInput = element.name;\n                  this.formValid = false;\n                }\n                if (!re.test(element.daily_value) && element.daily_value!= 0 && element.daily_value !== \"\" && element.daily_value !== null) {\n                  this.invalidInputDailyValue = element.name;\n                  this.formValid = false;\n                }\n\n    \n    \n              } else {\n                this.missingName = \"Missing component's name in one or more fields\";\n                this.formValid = false;\n              }\n    \n    \n\n    \n            });\n    \n\n          }\n        );\n      }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editNft/edit-nft.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport {EditNftComponent }  from './edit-nft.component';\nimport {RouterModule} from '@angular/router';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {EditNftRoutingModule} from './edit-nft-routing.module'\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nBrowserModule,\nConfirmBoxModule,\nMatProgressBarModule,\nEditNftRoutingModule\n       ],\n  declarations: [ \n\n    EditNftComponent\n    ],\n  exports: [\n    EditNftComponent\n   ]\n\n})\nexport class EditNftModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editNft/edit-nft.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditLabelComponent }  from './edit-label.component';\n\n\nconst editLabeltRoutes: Routes = [\n\n    {\n        path: 'edit-label/:id', component: EditLabelComponent\n    },\n\n\n];\n\n@NgModule({\n  imports: [\n            RouterModule.forRoot(\n            editLabeltRoutes,\n            { enableTracing: true } // <-- debugging purposes only\n        )\n  ],\n  declarations: []\n})\nexport class EditLabelRoutingModule {\n\n\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editPackage/edit-label-routing.module.ts","module.exports = \"\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n\\n.form-control {\\n    width: 100% !important;\\n}\\n\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n\\n.DivHeader{\\n    position: relative;\\n}\\n\\ndiv.bodycard{\\n    position: relative;\\n}\\n\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n\\n.dateIcon{\\n\\n    position: absolute;\\ntop: 26px;\\n    right: 9px;\\n\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editPackage/edit-label.component.css\n// module id = ./src/app/editForms/editPackage/edit-label.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\" style=\\\"margin-bottom: 60px;\\\">\\n    <div class=\\\"DivLogo\\\">\\n        Create Label\\n    </div>\\n\\n    <div class=\\\"bodycard\\\">\\n        <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n            <div class=\\\"well2\\\">\\n\\n                <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"labelForm\\\">\\n\\n\\n\\n\\n                    <div class=\\\"row\\\">\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"informedDiningProgram\\\">Informed Dining Program</label>\\n                            <select class=\\\"form-control\\\" id=\\\"informedDiningProgram\\\" formControlName=\\\"informed_dining_program\\\">\\n\\n                                <option value=\\\"\\\" selected>Informed Dining Program?</option>\\n\\n                                <option value=\\\"true\\\">Yes</option>\\n                                <option value=\\\"false\\\">No</option>\\n                            </select>\\n                        </div>\\n\\n\\n\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"nftLastUpdate\\\">NFT Last Update (mm-dd-yyyy)</label>\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"nftLastUpdate\\\" formControlName=\\\"nft_last_update_date\\\">\\n\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"childItem\\\">Child Item</label>\\n                            <select class=\\\"form-control\\\" id=\\\"childItem\\\" formControlName=\\\"child_item\\\">\\n\\n                                <option value=\\\"\\\" selected>Child Item?</option>\\n                                <option value=\\\"true\\\">Yes</option>\\n                                <option value=\\\"false\\\">No</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"productGrouping\\\">Product Grouping</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productGrouping\\\" placeholder=\\\"Product Grouping\\\" formControlName=\\\"product_grouping\\\">\\n\\n                            <div *ngIf=\\\"formErrors.product_grouping\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.product_grouping}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageUpc\\\" class=\\\"required\\\">Label UPC\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageUpc\\\" placeholder=\\\"Label UPC\\\" formControlName=\\\"package_upc\\\" readOnly>\\n                            <div *ngIf=\\\"formErrors.package_upc\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_upc}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageDescription\\\" class=\\\"required\\\">Label Description\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageDescription\\\" placeholder=\\\"Sales Source\\\" formControlName=\\\"package_description\\\">\\n\\n                            <div *ngIf=\\\"formErrors.package_description\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_description}}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"packageClassificationName\\\">Classification Name</label>\\n                            <select class=\\\"form-control\\\" id=\\\"packageClassificationName\\\" formControlName=\\\"classification_name\\\" (ngModelChange)=\\\"setClassificationName($event)\\\">\\n                                <option value=\\\"\\\" selected>Select a Classification Name</option>\\n                                <option *ngFor=\\\"let class of listOfClass;let i = index\\\" [value]=\\\"class.classification_name\\\">{{class.classification_name}}</option>\\n\\n                            </select>\\n\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"packageClassificationNumber\\\">Classification Number</label>\\n                            <select class=\\\"form-control\\\" id=\\\"packageClassificationNumber\\\" formControlName=\\\"classification_number\\\" (ngModelChange)=\\\"callAlex($event)\\\">\\n                                <option value=\\\"\\\" selected>Select a Classification Number</option>\\n                                <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n\\n\\n                            </select>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"nielsenItemRank\\\">Nielsen Item Rank UPC</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nielsenItemRank\\\" placeholder=\\\"Nielsen Item Rank UPC\\\" formControlName=\\\"nielsen_item_rank\\\">\\n                            <div *ngIf=\\\"formErrors.nielsen_item_rank\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.nielsen_item_rank}}</span>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"nielsenCategory\\\">Nielsen Category</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nielsenCategory\\\" placeholder=\\\"Nielsen Category\\\" formControlName=\\\"package_nielsen_category\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageBrand\\\">Brand</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageBrand\\\" placeholder=\\\"Brand\\\" formControlName=\\\"package_brand\\\">\\n\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageManufacturer\\\">Manufacturer </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageManufacturer\\\" placeholder=\\\"Manufacturer\\\" formControlName=\\\"package_manufacturer\\\">\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"packageCountry\\\">Country</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageCountry\\\" placeholder=\\\"Manufacturer\\\" formControlName=\\\"package_country\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageSize\\\">Net Quantity</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageSize\\\" placeholder=\\\"Net Quantity\\\" [required]=\\\"requiredField\\\" (ngModelChange)=\\\"validateNetQuantiyOther($event)\\\"\\n                                formControlName=\\\"package_size\\\">\\n                            <div *ngIf=\\\"formErrors.package_size\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_size}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n                            <label for=\\\"packageSizeUnitOfMeasure\\\">Net Quantity unit of measure</label>\\n                            <select class=\\\"form-control\\\" id=\\\"packageSizeUnitOfMeasure\\\" formControlName=\\\"package_size_unit_of_measure\\\" (ngModelChange)=\\\"validateNetQuantiy($event)\\\"\\n                                [required]=\\\"requiredFieldOther\\\">\\n\\n                                <option value=\\\"\\\" selected>Net Quantity unit of measure</option>\\n\\n                                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n\\n                            </select>\\n                            <div *ngIf=\\\"formErrors.package_size_unit_of_measure\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_size_unit_of_measure}}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"numberOfUnits\\\">Number of Units</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"numberOfUnits\\\" placeholder=\\\"Number of Units\\\" style=\\\"width:540px\\\" formControlName=\\\"number_of_units\\\">\\n                            <div *ngIf=\\\"formErrors.number_of_units\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.number_of_units}}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"multiPartPackage\\\">Multi Part Package?</label>\\n                            <select class=\\\"form-control\\\" id=\\\"multiPartPackage\\\" formControlName=\\\"multi_part_flag\\\" style=\\\"width:540px\\\">\\n\\n                                <option value=\\\"\\\" selected>Select a Multi Part Package</option>\\n                                <option value=\\\"1\\\">Yes</option>\\n                                <option value=\\\"0\\\">No</option>\\n                            </select>\\n                        </div>\\n\\n\\n\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"storageType\\\">Storage Type</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"storageType\\\" style=\\\"width:540px\\\" placeholder=\\\"Storage Type\\\" formControlName=\\\"storage_type\\\">\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"commonHouseholdMeasure\\\">Common Household Measure</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"commonHouseholdMeasure\\\" style=\\\"width:540px\\\" placeholder=\\\"Common Household Measure\\\"\\n                                formControlName=\\\"common_household_measure\\\">\\n\\n                        </div>\\n\\n\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <label for=\\\"Ingredients\\\">Ingredients</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"Ingredients\\\" placeholder=\\\"Ingredients\\\" formControlName=\\\"ingredients\\\" rows=\\\"2\\\">\\n                </textarea>\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <label for=\\\"nutritionFactTable\\\">Nutrition Fact Table</label>\\n                            <textarea class=\\\"form-control\\\" id=\\\"nutritionFactTable\\\" placeholder=\\\"Nutrition Fact Table\\\" formControlName=\\\"nutrition_fact_table\\\"\\n                                rows=\\\"2\\\">\\n                </textarea>\\n\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"suggestedDirections\\\">Suggested Direction </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"suggestedDirections\\\" placeholder=\\\"Suggested Directions\\\" formControlName=\\\"suggested_directions\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"nutrientClaims\\\">Nutrient Claims </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nutrientClaims\\\" placeholder=\\\"Nutrient Claims\\\" formControlName=\\\"nutrient_claims\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"otherPackageStatements\\\">Other Package Statements </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"otherPackageStatements\\\" placeholder=\\\"Other Package Statements\\\" formControlName=\\\"other_package_statements\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"healthClaims\\\">Health Claims </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"healthClaims\\\" placeholder=\\\"Health Claims\\\" formControlName=\\\"health_claims\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"storageStatements\\\">Storage Statements </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"storageStatements\\\" placeholder=\\\"Storage Statements\\\" formControlName=\\\"storage_statements\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"packageComments\\\">Comments</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageComments\\\" placeholder=\\\"Comments\\\" formControlName=\\\"package_comment\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"package_collection_date\\\" class=\\\"required\\\">Collection Date\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"package_collection_date\\\" formControlName=\\\"package_collection_date\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"packageSource\\\" class=\\\"required\\\">Source\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"packageSource\\\" placeholder=\\\" Source\\\" formControlName=\\\"package_source\\\">\\n\\n                            <div *ngIf=\\\"formErrors.package_source\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.package_source}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"asSoldPerServingAmountInGram\\\">Per Serving Amount (grams)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"asSoldPerServingAmountInGram\\\" style=\\\"width:540px\\\" placeholder=\\\"Per Serving Amount (grams)\\\"\\n                                formControlName=\\\"as_sold_per_serving_amount_in_grams\\\">\\n                            <div *ngIf=\\\"formErrors.as_sold_per_serving_amount_in_grams\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_sold_per_serving_amount_in_grams}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"numberOfUnits\\\">PPD Per Serving Amount (grams)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"numberOfUnits\\\" style=\\\"width:540px\\\" placeholder=\\\"PPD Per Serving Amount (grams)\\\"\\n                                formControlName=\\\"as_prepared_per_serving_amount_in_grams\\\">\\n                            <div *ngIf=\\\"formErrors.as_prepared_per_serving_amount_in_grams\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_prepared_per_serving_amount_in_grams}}</span>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n\\n                            <label for=\\\"productDescription\\\">Product Description</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productDescription\\\" placeholder=\\\"Product Description\\\" formControlName=\\\"package_product_description\\\">\\n\\n\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-6\\\">\\n                            <label for=\\\"asSoldPerServingAmount\\\">Per Serving Amount(As sold)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"asSoldPerServingAmount\\\" style=\\\"width:540px\\\" [required]=\\\"requiredFieldAmountAsSold\\\"\\n                                (ngModelChange)=\\\"validatePerServingAmountAsSold($event)\\\" placeholder=\\\"Per Serving Amount(As sold)\\\"\\n                                formControlName=\\\"as_sold_per_serving_amount\\\">\\n                            <div *ngIf=\\\"formErrors.as_sold_per_serving_amount\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_sold_per_serving_amount}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-6\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n                            <label for=\\\"asSoldUnitOfMeasure\\\">Per Serving Unit of Measure (As sold)</label>\\n                            <select class=\\\"form-control\\\" id=\\\"asSoldUnitOfMeasure\\\" formControlName=\\\"as_sold_unit_of_measure\\\" [required]=\\\"requiredFieldUnitOfMeasure\\\"\\n                                (ngModelChange)=\\\"validateUnitOfMeasureAsSold($event)\\\" style=\\\"width:540px\\\">\\n\\n                                <option value=\\\"\\\" selected>Per Serving Unit of Measure (As sold)</option>\\n                                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n\\n                            </select>\\n                            <div *ngIf=\\\"formErrors.as_sold_unit_of_measure\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_sold_unit_of_measure}}</span>\\n                            </div>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"asPreparedPerServingAmount\\\">Per Serving Amount(As prepared)</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"asPreparedPerServingAmount\\\" placeholder=\\\"Per Serving Amount(As prepared)\\\" [required]=\\\"requiredFieldAmountAsPrepared\\\"\\n                                (ngModelChange)=\\\"validatePerServingAmountAsPrepared($event)\\\" formControlName=\\\"as_prepared_per_serving_amount\\\">\\n                            <div *ngIf=\\\"formErrors.as_prepared_per_serving_amount\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_prepared_per_serving_amount}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfUnitOfMeasure\\\">\\n                            <label for=\\\"asSoldUnitOfMeasure\\\">Per Serving Unit of Measure (As prepared)</label>\\n                            <select class=\\\"form-control\\\" id=\\\"asSoldUnitOfMeasure\\\" formControlName=\\\"as_prepared_unit_of_measure\\\" [required]=\\\"requiredFieldUnitOfMeasureAsPrepared\\\"\\n                                (ngModelChange)=\\\"validateUnitOfMeasureAsPrepared($event)\\\">\\n\\n                                <option value=\\\"\\\" selected>Per Serving Unit of Measure (As prepared)</option>\\n\\n\\n                                <option *ngFor=\\\"let unitOfMeasure of listOfUnitOfMeasure;let i = index\\\" [value]=\\\"unitOfMeasure\\\">{{unitOfMeasure}}</option>\\n\\n                            </select>\\n                            <div *ngIf=\\\"formErrors.as_prepared_unit_of_measure\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.as_prepared_unit_of_measure}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"calculated\\\">calculated?</label>\\n                            <select class=\\\"form-control\\\" id=\\\"calculated\\\" formControlName=\\\"calculated\\\">\\n\\n                                <option value=\\\"\\\" selected>calculated?</option>\\n                                <option value=\\\"true\\\">Yes</option>\\n                                <option value=\\\"false\\\">No</option>\\n                            </select>\\n                        </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-12\\\">\\n                            <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"reset\\\" (click)=\\\"revert()\\\" class=\\\"btn btn-danger\\\" [disabled]=\\\"labelForm.pristine || isLoading || submitted\\\">Revert</button>\\n\\n                            <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!labelForm.valid || labelForm.pristine || isLoading || submitted\\\">Save</button>\\n\\n                        </div>\\n\\n                    </div>\\n                </form>\\n            </div>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<confirm-box [flag]=\\\"flag\\\" *ngIf=\\\"flag\\\"></confirm-box>\\n\\n<div *ngIf=\\\"isLoading\\\">\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n<div *ngIf=\\\"message\\\">\\n    <h3>{{message}}</h3>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editPackage/edit-label.component.html\n// module id = ./src/app/editForms/editPackage/edit-label.component.html\n// module chunks = main","import { Component, OnChanges, Input, Output, EventEmitter } from '@angular/core';\nimport { labelCreateFields, classificationList, Classification_name, Classification_number, Response, labelViewFields } from '../../data-model';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { GetRecordService } from '../../services/getRecord.service'\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\nimport { EditRecordService } from '../../services/edit-records.service';\n\n\n@Component({\n    selector: 'edit-label',\n    templateUrl: './edit-label.component.html',\n    styleUrls: ['./edit-label.component.css'],\n    providers: [EditRecordService]\n\n})\nexport class EditLabelComponent implements OnChanges {\n\n    requiredField: boolean = false;\n    requiredFieldOther: boolean = false;\n\n    requiredFieldAmountAsSold: boolean = false;\n    requiredFieldUnitOfMeasure: boolean = false;\n\n    requiredFieldAmountAsPrepared: boolean = false;\n    requiredFieldUnitOfMeasureAsPrepared: boolean = false;\n\n\n    date_input: any;\n    isLoading: boolean = false;\n    submitted: boolean = false;\n    offset: number = 0;\n    message: string = null;\n    packageData: labelViewFields;\n\n    id: number;\n    flag: number = null;\n    listOfClass: classificationList[];\n    listOfUnitOfMeasure: string[];\n    serverDown: boolean = false;\n    labelForm: FormGroup;\n    @Output() updateView = new EventEmitter<number>();\n\n    constructor(private fb: FormBuilder,\n        private editRecordService: EditRecordService,\n        private getRecordService: GetRecordService,\n        private router: Router,\n        private route: ActivatedRoute\n    ) {\n\n        this.createForm();\n\n\n    }\n\n    ngOnInit(): void {\n        this.route.paramMap\n            .switchMap((param: ParamMap) =>\n                this.getRecordService.getPackageAndClassification(param.get('id'))).subscribe(response => {\n\n                    this.packageData = response[0].data.dataList[0];\n                    console.log(this.packageData);\n                    const {data, message, status} = response[1];\n                    this.listOfClass = data.dataList;\n                    const {dataList} = response[2];\n                    this.listOfUnitOfMeasure = dataList;\n\n\n\n                    this.ngOnChanges();\n\n\n                }\n            );\n\n\n    }\n\n    ngOnChanges() {\n        this.flag = null;\n        this.submitted = false;\n\n        this.labelForm.reset({\n\n            package_description: this.packageData.package_description,\n            package_upc: this.packageData.package_upc,\n            package_brand: this.packageData.package_brand,\n            package_manufacturer: this.packageData.package_manufacturer,\n            package_country: this.packageData.package_country,\n            package_size: this.packageData.package_size,\n            package_size_unit_of_measure: (this.packageData.package_size_unit_of_measure==null?\"\":this.packageData.package_size_unit_of_measure),\n            storage_type: this.packageData.storage_type,\n            storage_statements: this.packageData.storage_statements,\n            health_claims: this.packageData.health_claims,\n            other_package_statements: this.packageData.other_package_statements,\n            suggested_directions: this.packageData.suggested_directions,\n            ingredients: this.packageData.ingredients,\n            multi_part_flag: (this.packageData.multi_part_flag == null?\"\":this.packageData.multi_part_flag),\n            nutrition_fact_table: this.packageData.nutrition_fact_table,\n            as_prepared_per_serving_amount: this.packageData.as_prepared_per_serving_amount,\n            as_prepared_unit_of_measure: (this.packageData.as_prepared_unit_of_measure==null?\"\":this.packageData.as_prepared_unit_of_measure),\n            as_sold_per_serving_amount: this.packageData.as_sold_per_serving_amount,\n            as_sold_unit_of_measure: (this.packageData.as_sold_unit_of_measure==null?\"\":this.packageData.as_sold_unit_of_measure),\n            as_prepared_per_serving_amount_in_grams: this.packageData.as_prepared_per_serving_amount_in_grams,\n            as_sold_per_serving_amount_in_grams: this.packageData.as_sold_per_serving_amount_in_grams,\n            package_comment: this.packageData.package_comment,\n            package_source: this.packageData.package_source,\n            package_product_description: this.packageData.package_product_description,\n            package_collection_date: this.packageData.package_collection_date,\n            number_of_units: this.packageData.number_of_units,\n            informed_dining_program: (this.packageData.informed_dining_program == null?\"\":this.packageData.informed_dining_program),\n            nft_last_update_date: this.packageData.nft_last_update_date,\n            product_grouping: this.packageData.product_grouping,\n            child_item: (this.packageData.child_item == null?\"\":this.packageData.child_item),\n            classification_number: (this.packageData.classification_number==null?\"\":this.packageData.classification_number),\n            classification_name: (this.packageData.classification_name==null?\"\":this.packageData.classification_name),\n            nielsen_item_rank: this.packageData.nielsen_item_rank,\n            nutrient_claims: this.packageData.nutrient_claims,\n            package_nielsen_category: this.packageData.package_nielsen_category,\n            common_household_measure: this.packageData.common_household_measure,\n            calculated: (this.packageData.calculated == null?\"\":this.packageData.calculated)\n\n\n\n        }\n        );\n\n    }\n\n    createForm() {\n\n        this.labelForm = this.fb.group({\n            package_description: ['', [Validators.required]],\n            package_upc: ['', [\n                Validators.pattern('^[0-9]+([,.][0-9]+)?$'),\n                Validators.required\n            ]],\n            package_brand: '',\n            package_manufacturer: '',\n            package_country: '',\n            package_size: ['',Validators.pattern('^[0-9]+([,.][0-9]+)?$')],\n            package_size_unit_of_measure: '',\n            storage_type: '',\n            storage_statements: '',\n            health_claims: '',\n            other_package_statements: '',\n            suggested_directions: '',\n            ingredients: '',\n            multi_part_flag: \"\",\n            nutrition_fact_table: '',\n            as_prepared_per_serving_amount: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            as_prepared_unit_of_measure: '',\n            as_sold_per_serving_amount: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            as_sold_unit_of_measure: '',\n            as_prepared_per_serving_amount_in_grams: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            as_sold_per_serving_amount_in_grams: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            package_comment: '',\n            package_source: ['', [Validators.required]],\n            package_product_description: '',\n            package_collection_date: ['', [Validators.required]],\n            number_of_units: [null, [Validators.pattern('\\\\d+')]],\n            informed_dining_program: \"\",\n            nft_last_update_date: '',\n            product_grouping: [null, [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            child_item: \"\",\n            classification_number: \"\",\n            classification_name: \"\",\n            nielsen_item_rank: ['', [\n                Validators.pattern('\\\\d+')\n            ]],\n            nutrient_claims: '',\n            package_nielsen_category: '',\n            common_household_measure: '',\n            calculated: \"\"\n\n        });\n\n        this.labelForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.labelForm) { return; }\n        const form = this.labelForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n     revert() {\n\n        this.ngOnChanges();\n    }\n    onSubmit() {\n\n        this.flag = null;\n        this.setValues();\n        console.log(this.packageData);\n        this.isLoading = true;\n\n        this.editRecordService.UpdateLabel(JSON.stringify(this.packageData)).finally(() => this.isLoading = false).subscribe(response => {\n\n            const { message, status} = response;\n\n            if (status === 202) {\n                this.flag = 2;\n\n                this.submitted = false;\n            } else if (status === 203) {\n                this.flag = 2;\n                this.submitted = false;\n\n            } else if (status === 204) {\n                this.flag = 2;\n\n                this.submitted = false;\n            } else if (status === 200) {\n                this.flag = 1;\n                setTimeout(() => {\n                    this.router.navigate(['/view-package', this.id]);\n\n                },\n                    4000);\n      \n            } else if (status === 803) {\n                this.flag = 2;\n                this.message = \"Missing mandatory field(s)\";\n                this.submitted = false;\n            }\n            else {\n                this.flag = 2;\n                this.message = \"Something went wrong, try again...\";\n                this.submitted = false;\n\n            }\n\n        }, (error) => {\n\n            this.serverDown = true;\n            this.flag = 2;\n            this.submitted = false;\n\n        });\n\n    }\n\n    prepareSaveProduct(): labelViewFields {\n        return this.labelForm.value;\n    }\n\n\n\n\n\n    formErrors = {\n        'package_description': '',\n        'package_upc': '',\n        'as_prepared_per_serving_amount': '',\n        'as_sold_per_serving_amount': '',\n        'as_prepared_per_serving_amount_in_grams': '',\n        'as_sold_per_serving_amount_in_grams': '',\n        'number_of_units': '',\n        'product_grouping': '',\n        'nielsen_item_rank': '',\n        'package_source': '',\n        'package_collection_date': '',\n        'package_size': '',\n        'package_size_unit_of_measure':'',\n        'as_sold_unit_of_measure':'',\n        'as_prepared_unit_of_measure':''\n\n    }\n\n    validationMessages = {\n\n        'package_description': {\n            'required': 'Package description is required'\n        },\n        'package_upc': {\n            'required': 'Label is required',\n            'pattern': 'Must be a number'\n        },\n        'as_prepared_per_serving_amount_in_grams': {\n            'pattern': 'Must be a number'\n        },\n        'as_sold_per_serving_amount': {\n            'pattern': 'Must be a number',\n            'required':'Per Serving Amount (as sold) is required'\n        },\n        'as_sold_per_serving_amount_in_grams': {\n            'pattern': 'Must be a number'\n        },\n        'number_of_units': {\n            'pattern': 'Must be a number'\n        },\n        'product_grouping': {\n            'pattern': 'Must be a number'\n        },\n        'nielsen_item_rank': {\n            'pattern': 'Must be a number'\n        },\n        'package_source': {\n            'required': 'Source is required'\n        },\n        'package_collection_date': {\n            'required': 'Collection date is required'\n        },\n        'package_size': {\n            'pattern': 'Must be a number',\n            'required': 'Net quantity is required'\n        },\n        'as_prepared_per_serving_amount':{\n            'pattern': 'Must be a number',\n            'required':'Per Serving Amount (As prepared) is required' \n        },\n        'package_size_unit_of_measure':{ \n            'required':'Net quantity unit of measure is required'\n        },\n        'as_sold_unit_of_measure':{\n            'required':'Per Serving Unit of Measure (As sold) is required' \n        },\n        'as_prepared_unit_of_measure':{\n            'required':'Per Serving Unit of Measure (As prepared) is required' \n        }\n\n    }\n    setValues(): void {\n        this.submitted = true;\n          var date = new DatePipe('en-US');\n\n        this.packageData = this.prepareSaveProduct();\n        this.packageData.package_collection_date = this.packageData.package_collection_date ? date.transform(this.packageData.package_collection_date, 'yyyy-MM-dd') : this.packageData.package_collection_date;\n        this.packageData.nft_last_update_date = this.packageData.nft_last_update_date ? date.transform(this.packageData.nft_last_update_date, 'yyyy-MM-dd') : this.packageData.nft_last_update_date;\n\n        this.route.params.subscribe(params => {\n            this.packageData.package_id = +params['id'];\n            this.id = this.packageData.package_id;\n        });\n\n        this.packageData.multi_part_flag = this.packageData.multi_part_flag == \"\" ? null : this.packageData.multi_part_flag;\n        this.packageData.as_prepared_per_serving_amount = this.packageData.as_prepared_per_serving_amount == \"\" ? null : this.packageData.as_prepared_per_serving_amount;\n        this.packageData.as_sold_per_serving_amount = this.packageData.as_sold_per_serving_amount == \"\" ? null : this.packageData.as_sold_per_serving_amount;\n        this.packageData.as_prepared_per_serving_amount_in_grams = this.packageData.as_prepared_per_serving_amount_in_grams == \"\" ? null : this.packageData.as_prepared_per_serving_amount_in_grams;\n        this.packageData.as_sold_per_serving_amount_in_grams = this.packageData.as_sold_per_serving_amount_in_grams == \"\" ? null : this.packageData.as_sold_per_serving_amount_in_grams;\n        this.packageData.number_of_units = this.packageData.number_of_units == \"\" ? null : this.packageData.number_of_units;\n        this.packageData.informed_dining_program = this.packageData.informed_dining_program == \"\" ? null : this.packageData.informed_dining_program;\n        this.packageData.product_grouping = this.packageData.product_grouping == \"\" ? null : this.packageData.product_grouping;\n        this.packageData.child_item = this.packageData.number_of_units == \"\" ? null : this.packageData.child_item;\n        this.packageData.calculated = this.packageData.calculated == \"\" ? null : this.packageData.calculated;\n        this.packageData.nielsen_item_rank = this.packageData.nielsen_item_rank == \"\" ? null : this.packageData.nielsen_item_rank;\n        this.packageData.package_size = this.packageData.package_size == \"\" ? null : this.packageData.package_size;\n\n        this.packageData.classification_number = this.packageData.classification_number == \"\" ? null : this.packageData.classification_number;\n\n\n\n    }\n\n    setClassificationName(n: String) {\n\n        if (n != null && n != \"\") {\n\n            var index = this.listOfClass.findIndex(function (item, i) {\n                return item.classification_name === n;\n            });\n\n            if (this.labelForm.controls['classification_number'].value != this.listOfClass[index]['classification_number']) {\n                this.labelForm.controls['classification_number'].patchValue(this.listOfClass[index]['classification_number']);\n            }\n        } else {\n            if (this.labelForm.controls['classification_name'].value != null && this.labelForm.controls['classification_name'].value != \"\") {\n                this.labelForm.controls['classification_number'].patchValue(\"\");\n\n            }\n        }\n\n    }\n\n\n    callAlex(n: String) {\n\n        if (n != null && n != \"\") {\n            var index = this.listOfClass.findIndex(function (item, i) {\n                return item.classification_number === n;\n            });\n\n            if (this.labelForm.controls['classification_name'].value != this.listOfClass[index]['classification_name']) {\n                this.labelForm.controls['classification_name'].patchValue(this.listOfClass[index]['classification_name']);\n            }\n        } else {\n\n            if (this.labelForm.controls['classification_number'].value != null && this.labelForm.controls['classification_number'].value!= \"\") {\n                this.labelForm.controls['classification_name'].patchValue(\"\");\n\n            }\n        }\n\n    }\n\n    validateNetQuantiy(value : any){\n\n\n\n        if((value != null && value!= \"\") && (this.labelForm.get('package_size').value == \"\" || this.labelForm.get('package_size').value ==null)){\n            this.requiredField = true;\n            this.requiredFieldOther = false;\n        }else if((value == null || value == \"\") && (this.labelForm.get('package_size').value != \"\" && this.labelForm.get('package_size').value !=null)){\n            \n           \n            this.requiredField = false;\n            this.requiredFieldOther = true;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('package_size').value == \"\" || this.labelForm.get('package_size').value ==null)){\n\n            this.requiredField = false;\n            this.requiredFieldOther = false;\n        }\n        \n        else{\n            this.requiredField = true;\n            this.requiredFieldOther = false;\n        }\n    }\n\n    validateNetQuantiyOther(value : any){\n\n        if((value != null && value!= \"\") && (this.labelForm.get('package_size_unit_of_measure').value == \"\" || this.labelForm.get('package_size_unit_of_measure').value ==null)){\n            this.requiredField = false;\n            this.requiredFieldOther = true;\n        }else if((value == null || value == \"\") && (this.labelForm.get('package_size_unit_of_measure').value != \"\" && this.labelForm.get('package_size_unit_of_measure').value !=null)){\n                    \n            this.requiredField = true;\n            this.requiredFieldOther = false;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('package_size_unit_of_measure').value == \"\" || this.labelForm.get('package_size_unit_of_measure').value ==null)){\n\n            this.requiredField = false;\n            this.requiredFieldOther = false;\n        }\n        else{\n            this.requiredField = false;\n            this.requiredFieldOther = true;\n        }\n\n    }\n\n    validatePerServingAmountAsSold(value: any){\n\n        if((value != null && value!= \"\") && (this.labelForm.get('as_sold_unit_of_measure').value == \"\" || this.labelForm.get('as_sold_unit_of_measure').value ==null)){\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = true;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_sold_unit_of_measure').value != \"\" && this.labelForm.get('as_sold_unit_of_measure').value !=null)){\n                    \n            this.requiredFieldAmountAsSold = true;\n            this.requiredFieldUnitOfMeasure = false;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_sold_unit_of_measure').value == \"\" || this.labelForm.get('as_sold_unit_of_measure').value ==null)){\n\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = false;\n        }\n        else{\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = true;\n        }\n\n    }\n\n    validateUnitOfMeasureAsSold(value: any){\n       \n        if((value != null && value!= \"\") && (this.labelForm.get('as_sold_per_serving_amount').value == \"\" || this.labelForm.get('as_sold_per_serving_amount').value ==null)){\n           \n            this.requiredFieldAmountAsSold = true;\n            this.requiredFieldUnitOfMeasure = false;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_sold_per_serving_amount').value != \"\" && this.labelForm.get('as_sold_per_serving_amount').value !=null)){\n                    \n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = true;\n\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_sold_per_serving_amount').value == \"\" || this.labelForm.get('as_sold_per_serving_amount').value ==null)){\n\n            this.requiredFieldAmountAsSold = false;\n            this.requiredFieldUnitOfMeasure = false;\n        }\n        else{\n            this.requiredFieldAmountAsSold = true;\n            this.requiredFieldUnitOfMeasure = false;\n        }\n    }\n\n    validatePerServingAmountAsPrepared(value: any){\n\n        if((value != null && value!= \"\") && (this.labelForm.get('as_prepared_unit_of_measure').value == \"\" || this.labelForm.get('as_prepared_unit_of_measure').value ==null)){\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = true;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_prepared_unit_of_measure').value != \"\" && this.labelForm.get('as_prepared_unit_of_measure').value !=null)){\n                    \n            this.requiredFieldAmountAsPrepared = true;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_prepared_unit_of_measure').value == \"\" || this.labelForm.get('as_prepared_unit_of_measure').value ==null)){\n\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }\n        else{\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = true;\n        }\n    }\n\n    validateUnitOfMeasureAsPrepared(value: any){\n        if((value != null && value!= \"\") && (this.labelForm.get('as_prepared_per_serving_amount').value == \"\" || this.labelForm.get('as_prepared_per_serving_amount').value ==null)){\n            this.requiredFieldAmountAsPrepared = true;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }else if((value == null || value == \"\") && (this.labelForm.get('as_prepared_per_serving_amount').value != \"\" && this.labelForm.get('as_prepared_per_serving_amount').value !=null)){\n                    \n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = true;\n        }else if((value == null ||  value== \"\")&& (this.labelForm.get('as_prepared_per_serving_amount').value == \"\" || this.labelForm.get('as_prepared_per_serving_amount').value ==null)){\n\n            this.requiredFieldAmountAsPrepared = false;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }\n        else{\n            this.requiredFieldAmountAsPrepared = true;\n            this.requiredFieldUnitOfMeasureAsPrepared = false;\n        }\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editPackage/edit-label.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport { ViewProductModule} from '../../views/viewProduct/view-product.module'\nimport { EditLabelComponent }  from './edit-label.component';\nimport {RouterModule} from '@angular/router';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {EditLabelRoutingModule} from './edit-label-routing.module'\n\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nBrowserModule,\nConfirmBoxModule,\nViewProductModule,\nMatDatepickerModule,\nEditLabelRoutingModule\n\n      \n       ],\n  declarations: [ \n\n    EditLabelComponent\n    ],\n  exports: [\n    EditLabelComponent\n   ]\n\n})\nexport class EditLabelModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editPackage/edit-label.module.ts","import 'rxjs/add/observable/of';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Async modal dialog service\n * DialogService makes this app easier to test by faking this service.\n * TODO: better modal implementation that doesn't use window.confirm\n */\n@Injectable()\nexport class DialogService {\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return Observable.of(confirmation);\n  };\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editProduct/dialog.service.ts","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProductComponent } from './edit-product.component';\nimport { SaveFormsGuard } from './save-forms-guard'\n// import { ProductDetailResolver } from './edit-product-resolver.service';\n\n\nconst editProductRoutes: Routes = [\n\n    {\n        path: 'edit-product/:id', component: EditProductComponent,\n        canDeactivate: [SaveFormsGuard]\n\n    }\n\n\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(\n            editProductRoutes// <-- debugging purposes only\n        )\n    ],\n    declarations: []\n})\nexport class EditProductRoutingModule {\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editProduct/edit-product-rouding.module.ts","module.exports = \"\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n\\n.form-control {\\n    width: 100% !important;\\n}\\n\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n\\n.DivHeader{\\n    position: relative;\\n}\\n\\ndiv.bodycard{\\n    position: relative;\\n}\\n\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editProduct/edit-product.component.css\n// module id = ./src/app/editForms/editProduct/edit-product.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\" *ngIf=\\\"product\\\">\\n    <div class=\\\"DivLogo\\\">\\n        Edit Product\\n    </div>\\n\\n    <div class=\\\"bodycard\\\">\\n        <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n            <div class=\\\"well2\\\">\\n\\n                <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"productForm\\\">\\n\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"classification_name\\\">Classification Name</label>\\n                            <select class=\\\"form-control\\\" id=\\\"classification_name\\\" formControlName=\\\"classification_name\\\" (ngModelChange)=\\\"setClassificationNumber($event)\\\">\\n                                <option value=\\\"\\\">Select a Classification Name</option>\\n                                <option *ngFor=\\\"let class of listOfClass;let i = index\\\" [value]=\\\"class.classification_name\\\">{{class.classification_name}}</option>\\n\\n                            </select>\\n\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"classification_number\\\">Classification Number</label>\\n                            <select class=\\\"form-control\\\" id=\\\"classification_number\\\" formControlName=\\\"classification_number\\\" (ngModelChange)=\\\"setClassificationName($event)\\\">\\n                                <option value=\\\"\\\">Select a Classification Name</option>\\n                                <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n\\n\\n                            </select>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"classification_type\\\">Classification Type </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classification_type\\\" placeholder=\\\"Enter the Classification Type\\\" formControlName=\\\"classification_type\\\" readOnly>\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"product_manufacturer\\\">Product Manufactuer </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_manufacturer\\\" placeholder=\\\"Product Manufactuer\\\" formControlName=\\\"product_manufacturer\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"product_brand\\\">Product Brand</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_brand\\\" placeholder=\\\"Product Brand\\\" formControlName=\\\"product_brand\\\">\\n\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"cnf_code\\\">CNF CODE </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cnf_code\\\" placeholder=\\\"CNF CODE\\\" formControlName=\\\"cnf_code\\\">\\n\\n                            <div *ngIf=\\\"formErrors.cnf_code\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.cnf_code}}</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n\\n\\n                    <div class=\\\" row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"cluster_number\\\">Cluster Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cluster_number\\\" placeholder=\\\"Cluster Number\\\" formControlName=\\\"cluster_number\\\">\\n                            <div *ngIf=\\\"formErrors.cluster_number\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.cluster_number}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"product_description\\\" class=\\\"required\\\">Product Description\\n                                <strong class=\\\"required\\\">(required)</strong>\\n                            </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_description\\\" placeholder=\\\"Product Description\\\" formControlName=\\\"product_description\\\">\\n\\n                            <div *ngIf=\\\"formErrors.product_description\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.product_description}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"product_comment\\\">Product Comment</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_comment\\\" placeholder=\\\"Product Comment\\\" formControlName=\\\"product_comment\\\">\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\" row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"restaurantTypes\\\">\\n                            <label for=\\\"restaurant_type\\\">Restaurant Type</label>\\n                            <select class=\\\"form-control\\\" id=\\\"restaurant_type\\\" placeholder=\\\"Select a Restaurant Type\\\" formControlName=\\\"restaurant_type\\\">\\n\\n                                <option value=\\\"\\\" >Select a Restaurant Type</option>\\n                                <option *ngFor=\\\"let restaurantTypes of restaurantTypes;let i = index\\\" [value]=\\\"restaurantTypes\\\">{{restaurantTypes}}</option>\\n\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"types\\\">\\n                            <label for=\\\"type\\\">Type</label>\\n                            <select class=\\\"form-control\\\" id=\\\"Type\\\" placeholder=\\\"Select a Type\\\"   formControlName=\\\"type\\\">\\n\\n                                <option value=\\\"\\\" >Select a Type</option>\\n                                <option *ngFor=\\\"let type of types;let i = index\\\" [value]=\\\"type\\\">{{type}}</option>\\n\\n                            </select>\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!productForm.valid || productForm.pristine || isLoading || submitted\\\">Save</button>\\n                            <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"reset\\\" (click)=\\\"revert()\\\" class=\\\"btn btn-danger\\\" [disabled]=\\\"productForm.pristine || isLoading || submitted\\\">Revert</button>\\n\\n                        </div>\\n\\n\\n                    </div>\\n\\n                </form>\\n            </div>\\n\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<confirm-box [flag]=\\\"flag\\\" *ngIf=\\\"flag\\\"></confirm-box>\\n<div *ngIf=\\\"isLoading\\\">\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editProduct/edit-product.component.html\n// module id = ./src/app/editForms/editProduct/edit-product.component.html\n// module chunks = main","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter\n} from \"@angular/core\";\nimport {\n  Params,\n  classificationList,\n  Classification_name,\n  Classification_number,\n  Response,\n  productAllFields,\n  GenericList\n} from \"../../data-model\";\nimport { EditRecordService } from \"../../services/edit-records.service\";\nimport { SearchService } from \"../../services/search.service\";\nimport { GetRecordService } from \"../../services/getRecord.service\";\n\nimport { Observable } from \"rxjs/Observable\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  ValidatorFn,\n  AbstractControl\n} from \"@angular/forms\";\nimport { Router, ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { DialogService } from \"./dialog.service\";\n\n@Component({\n  selector: \"edit-product\",\n  templateUrl: \"./edit-product.component.html\",\n  styleUrls: [\"./edit-product.component.css\"],\n  providers: [EditRecordService, DialogService]\n})\nexport class EditProductComponent implements OnChanges {\n  isLoading: boolean = false;\n  submitted: boolean = false;\n\n  offset: number = 0;\n  product: productAllFields;\n  id: number;\n\n  productDeepCopy: productAllFields;\n  listOfClass: classificationList[];\n  serverDown: boolean = false;\n  restaurantTypes: GenericList;\n  types: GenericList;\n  flag: number = null;\n  productForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private searchService: SearchService,\n    private getRecordService: GetRecordService,\n    private editRecordService: EditRecordService,\n    private router: Router,\n    private route: ActivatedRoute,\n    public dialogService: DialogService\n  ) {\n    this.createForm();\n  }\n  ngOnInit(): void {\n    this.product = null;\n    this.route.paramMap\n      .switchMap((param: ParamMap) =>\n        this.getRecordService.getProductAndClassificationList(param.get(\"id\"))\n      )\n      .subscribe(response => {\n        this.product = response[0].data.dataList[0];\n        this.productDeepCopy = response[0].data.dataList[0];\n        const { data, message, status } = response[1];\n        this.listOfClass = data.dataList;\n\n        this.restaurantTypes = response[2].dataList;\n        this.types = response[3].dataList;\n\n        this.ngOnChanges();\n      });\n  }\n\n  ngOnChanges() {\n    this.flag = null;\n    this.submitted = false;\n\n    this.productForm.reset({\n      classification_name: this.product.classification_name,\n      classification_number: this.product.classification_number,\n      classification_type: \"Sodium GBL\",\n      product_manufacturer: this.product.product_manufacturer,\n      product_brand: this.product.product_brand,\n      cnf_code: this.product.cnf_code,\n      cluster_number: this.product.cluster_number,\n      product_description: this.product.product_description,\n      product_comment: this.product.product_comment,\n      restaurant_type: this.product.restaurant_type,\n      type: this.product.type\n    });\n  }\n\n  createForm() {\n    this.productForm = this.fb.group({\n      classification_name: \"\",\n      classification_number: \"\",\n      classification_type: \"Sodium GBL\",\n      product_manufacturer: \"\",\n      product_brand: \"\",\n      cnf_code: [\"\", [Validators.pattern(\"\\\\d+\")]],\n      cluster_number: [\"\", [Validators.pattern(\"^[0-9]+([,.][0-9]+)?$\")]],\n      product_description: [\"\", [Validators.required]],\n      product_comment: \"\",\n      restaurant_type: \"\",\n      type: \"\"\n    });\n    this.productForm.valueChanges.subscribe(data => this.onValueChanged(data));\n\n    this.onValueChanged();\n  }\n\n  onValueChanged(data?: any) {\n    if (!this.productForm) {\n      return;\n    }\n    const form = this.productForm;\n\n    for (const field in this.formErrors) {\n      this.formErrors[field] = \"\";\n      const control = form.get(field);\n\n      if (control && control.dirty && !control.valid) {\n        const messages = this.validationMessages[field];\n        for (const key in control.errors) {\n          this.formErrors[field] += messages[key] + \" \";\n        }\n      }\n    }\n  }\n  onSubmit() {\n    this.setValues();\n\n    this.isLoading = true;\n    this.editRecordService\n      .updateProduct(JSON.stringify(this.product))\n      .finally(() => (this.isLoading = false))\n      .subscribe(\n        response => {\n          const { message, status } = response;\n\n          if (status === 202) {\n            setTimeout(() => {\n              this.router.navigate([\"/viewproduct\", this.id]);\n            }, 4000);\n          } else if (status === 203) {\n            this.flag = 2;\n            setTimeout(() => {\n              this.router.navigate([\"/viewproduct\", this.id]);\n            }, 4000);\n          } else if (status === 204) {\n            this.flag = 2;\n            setTimeout(() => {\n              this.router.navigate([\"/viewproduct\", this.id]);\n            }, 4000);\n          } else if (status === 200) {\n            //this.callP.emit(1);\n            this.flag = 1;\n            setTimeout(() => {\n              this.router.navigate([\"/viewproduct\", this.id]);\n            }, 4000);\n          } else {\n            this.flag = 2;\n            this.submitted = false;\n          }\n        },\n        error => {\n          this.serverDown = true;\n          this.flag = 2;\n          this.submitted = false;\n          setTimeout(() => {\n            this.router.navigate([\"/viewproduct\", this.id]);\n          }, 4000);\n        }\n      );\n  }\n\n  prepareSaveProduct(): productAllFields {\n    return this.productForm.value;\n  }\n\n  revert() {\n    this.ngOnChanges();\n  }\n\n  formErrors = {\n    product_description: \"\",\n    cnf_code: \"\",\n    cluster_number: \"\"\n  };\n  validationMessages = {\n    product_description: {\n      required: \"Description is required\"\n    },\n    cnf_code: {\n      pattern: \"Must be a digit\"\n    },\n    cluster_number: {\n      pattern: \"Must be a number\"\n    }\n  };\n  setValues(): void {\n    this.submitted = true;\n    this.id = this.product.product_id;\n    this.product = this.prepareSaveProduct();\n    this.product.product_id = this.id;\n  }\n\n  setClassificationNumber(n: String) {\n    if (n != null && n != \"\") {\n\n        var index = this.listOfClass.findIndex(function (item, i) {\n            return item.classification_name === n;\n        });\n\n        if (this.productForm.controls['classification_number'].value != this.listOfClass[index]['classification_number']) {\n            this.productForm.controls['classification_number'].patchValue(this.listOfClass[index]['classification_number']);\n        }\n    } else {\n        if (this.productForm.controls['classification_name'].value != null && this.productForm.controls['classification_name'].value != \"\") {\n            this.productForm.controls['classification_number'].patchValue(\"\");\n\n        }\n    }\n  }\n\n  setClassificationName(n: String) {\n    if (n != null && n != \"\") {\n        var index = this.listOfClass.findIndex(function (item, i) {\n            return item.classification_number === n;\n        });\n\n        if (this.productForm.controls['classification_name'].value != this.listOfClass[index]['classification_name']) {\n            this.productForm.controls['classification_name'].patchValue(this.listOfClass[index]['classification_name']);\n        }\n    } else {\n\n        if (this.productForm.controls['classification_number'].value != null && this.productForm.controls['classification_number'].value!= \"\") {\n            this.productForm.controls['classification_name'].patchValue(\"\");\n\n        }\n    }\n  }\n  areFormsSaved(): Observable<boolean> | boolean {\n    let flag: boolean = true;\n\n    for (const prop in this.productForm.controls) {\n      if (this.productForm.controls[prop].value != this.product[prop]) {\n        flag = false;\n      }\n    }\n\n    if (flag) {\n      return true;\n    } else {\n      return this.dialogService.confirm(\"Discard changes?\");\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editProduct/edit-product.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { EditProductComponent }  from './edit-product.component';\nimport {RouterModule} from '@angular/router';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport {EditProductRoutingModule} from './edit-product-rouding.module'\nimport { ViewProductModule} from '../../views/viewProduct/view-product.module'\nimport {SaveFormsGuard} from './save-forms-guard'\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nBrowserModule,\nConfirmBoxModule,\nRouterModule,\nEditProductRoutingModule,\nViewProductModule\n\n      \n       ],\n  declarations: [ \n\n    EditProductComponent\n    ],\n  exports: [\n    EditProductComponent\n   ],providers: [\n\n    SaveFormsGuard\n  ],\n\n})\nexport class EditProductModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editProduct/edit-product.module.ts","import { CanDeactivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { EditProductComponent } from './edit-product.component';\n\n@Injectable()\nexport class SaveFormsGuard implements CanDeactivate<EditProductComponent> {\n\n  canDeactivate(component: EditProductComponent) {\n\n        return component.areFormsSaved ? component.areFormsSaved() : true;\n\n\n}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editProduct/save-forms-guard.ts","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditSalesComponent }  from './edit-sales.component';\n\n\nconst editSalesRoutes: Routes = [\n\n    {\n        path: 'edit-sales/:id', component: EditSalesComponent\n    },\n\n\n];\n\n@NgModule({\n  imports: [\n            RouterModule.forChild(\n            editSalesRoutes// <-- debugging purposes only\n        )\n  ],\n  declarations: []\n})\nexport class EditSalesRoutingModule {\n\n\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editSales/edit-sales-routing.module.ts","module.exports = \"\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n\\n.form-control {\\n    width: 100% !important;\\n}\\n\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n\\n.DivHeader{\\n    position: relative;\\n}\\n\\ndiv.bodycard{\\n    position: relative;\\n}\\n\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n\\n.ng-valid[required], .ng-valid.required  {\\n  border-left: 5px solid #42A948; /* green */\\n}\\n\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n\\n.dateIcon{\\n\\n    position: absolute;\\ntop: 26px;\\n    right: 9px;\\n\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editSales/edit-sales.component.css\n// module id = ./src/app/editForms/editSales/edit-sales.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\" style=\\\"margin-bottom: 60px;\\\" *ngIf=\\\"salesField\\\">\\n<div class=\\\"DivLogo\\\">\\n    Edit Sales\\n</div>\\n\\n<div class=\\\"bodycard\\\">\\n    <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n<div class=\\\"well2\\\">\\n\\n    <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"salesForm\\\">\\n\\n\\n\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"salesUPC\\\" class=\\\"required\\\">Sales UPC <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesUPC\\\" placeholder=\\\"Sales UPC\\\" formControlName=\\\"sales_upc\\\" readOnly>\\n                <div *ngIf=\\\"formErrors.sales_upc\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.sales_upc}}</span>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"dollarVolume\\\" class=\\\"required\\\">Dollar Volume <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dollarVolume\\\" placeholder=\\\"Dollar Volume\\\" formControlName=\\\"dollar_volume\\\">\\n                <div *ngIf=\\\"formErrors.dollar_volume\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_volume}}</span>\\n                </div>\\n\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"KiloVolume\\\" class=\\\"required\\\">Kilo Volume <strong class=\\\"required\\\">(required)</strong> </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloVolume\\\" placeholder=\\\"Kilo Volume\\\" formControlName=\\\"kilo_volume\\\">\\n\\n                <div *ngIf=\\\"formErrors.kilo_volume\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume}}</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"salesYear\\\">Sales Year</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesYear\\\" placeholder=\\\"Sales Year\\\" formControlName=\\\"sales_year\\\">\\n\\n                <div *ngIf=\\\"formErrors.sales_year\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.sales_year}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"NielsenCategory\\\" class=\\\"required\\\">Nielsen Category <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"NielsenCategory\\\" placeholder=\\\"Nielsen Category\\\" formControlName=\\\"nielsen_category\\\">\\n                <div *ngIf=\\\"formErrors.nielsen_category\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.nielsen_category}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"salesSource\\\" class=\\\"required\\\">Sales Source <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesSource\\\" placeholder=\\\"Sales Source\\\" formControlName=\\\"sales_source\\\">\\n                <!--\\n                <div *ngIf=\\\"formErrors.kilo_volume\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume}}</span>\\n                </div>-->\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"salesDescription\\\" class=\\\"required\\\">Sales Description <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesDescription\\\" placeholder=\\\"Sales Description\\\" formControlName=\\\"sales_description\\\">\\n                <div *ngIf=\\\"formErrors.sales_description\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.sales_description}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"SalesComment\\\">Sales Comment</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"SalesComment\\\" placeholder=\\\"Sales Comment\\\" formControlName=\\\"sales_comment\\\">\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"salesCollectionDate\\\">Sales Collection Date (mm-dd-yyyy)</label>\\n                <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"salesCollectionDate\\\" (ngModelChange)=\\\"valDate($event)\\\" formControlName=\\\"sales_collection_date\\\">\\n\\n            </div>\\n\\n            <!-- <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"SalesCollectionDate\\\">Collection Date</label>\\n                <input class=\\\"form-control\\\" [matDatepicker]=\\\"myDatepicker\\\" (ngModelChange)=\\\"valDate($event)\\\" #salesCollectionDate [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" id=\\\"SalesCollectionDate\\\"  formControlName=\\\"sales_collection_date\\\">\\n \\n                <mat-datepicker-toggle class=\\\"dateIcon\\\" [for]=\\\"myDatepicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker  #myDatepicker></mat-datepicker>\\n          \\n                <div *ngIf=\\\"salesCollectionDate.invalid\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\"> Invalid date</span>\\n                </div>\\n            </div> -->\\n        </div>\\n\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"salesBrand\\\">Sales Brand</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesBrand\\\" placeholder=\\\"Sales Brand\\\" formControlName=\\\"sales_brand\\\">\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"DollarRank\\\">Dollar Rank</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarRank\\\" placeholder=\\\"Dollar Rank\\\" formControlName=\\\"dollar_rank\\\">\\n                <div *ngIf=\\\"formErrors.dollar_rank\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_rank}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"DollarVolumePercentageChange\\\" class=\\\"required\\\">Dollar Volume % Change <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarVolumePercentageChange\\\" placeholder=\\\"Dollar Volume % Change\\\" formControlName=\\\"dollar_volume_percentage_change\\\">\\n\\n                <div *ngIf=\\\"formErrors.dollar_volume_percentage_change\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_volume_percentage_change}}</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"KiloVolumePercentageChange\\\" class=\\\"required\\\">Kilo Volume % Change <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloVolumePercentageChange\\\" placeholder=\\\"Kilo Volume % Change\\\" formControlName=\\\"kilo_volume_percentage_change\\\">\\n                <div *ngIf=\\\"formErrors.kilo_volume_percentage_change\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume_percentage_change}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"AverageAcDist\\\">Average AC Dist</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"AverageAcDist\\\" placeholder=\\\"Average AC Dist\\\" formControlName=\\\"average_ac_dist\\\">\\n                <div *ngIf=\\\"formErrors.average_ac_dist\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.average_ac_dist}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"AverageRetailPrice\\\">Average Retail Price</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"AverageRetailPrice\\\" placeholder=\\\"Average Retail Price\\\" formControlName=\\\"average_retail_price\\\">\\n                <div *ngIf=\\\"formErrors.average_retail_price\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.average_retail_price}}</span>\\n                </div>\\n\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"DollarVolumeTotal\\\" class=\\\"required\\\">Dollar Volume Total <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarVolumeTotal\\\" placeholder=\\\"Dollar Volume Total\\\" formControlName=\\\"dollar_volume_total\\\">\\n                <div *ngIf=\\\"formErrors.dollar_volume_total\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_volume_total}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"KiloVolumeTotal\\\">Kilo Volume Total</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloVolumeTotal\\\" placeholder=\\\"Kilo Volume Total\\\" formControlName=\\\"kilo_volume_total\\\">\\n                <div *ngIf=\\\"formErrors.kilo_volume_total\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume_total}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <!--\\n                <div *ngIf=\\\"formErrors.kilo_volume\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume}}</span>\\n                </div>-->\\n\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"ControlLabelFlag\\\">Control label flag</label>\\n                <select class=\\\"form-control\\\" id=\\\"ControlLabelFlag\\\" formControlName=\\\"control_label_flag\\\">\\n\\n\\t\\t\\t<option value=\\\"\\\" selected>Control label flag?</option>\\n\\t\\t\\t  <option value=\\\"1\\\" >Yes</option>\\n\\t\\t\\t<option value=\\\"0\\\">No</option>\\n\\t\\t\\t </select>\\n            </div>\\n\\n\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"DollarShare\\\" class=\\\"required\\\">Dollar Share <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"DollarShare\\\" placeholder=\\\"Dollar Share\\\" formControlName=\\\"dollar_share\\\">\\n                <div *ngIf=\\\"formErrors.dollar_share\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.dollar_share}}</span>\\n                </div>\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"KiloShare\\\" class=\\\"required\\\">Kilo Share <strong class=\\\"required\\\">(required)</strong></label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloShare\\\" placeholder=\\\"Kilo Share\\\" formControlName=\\\"kilo_share\\\">\\n                <div *ngIf=\\\"formErrors.kilo_share\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_share}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"ClusterNumber\\\"> Cluster Number</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"ClusterNumber\\\" placeholder=\\\"Cluster Number\\\" formControlName=\\\"cluster_number\\\">\\n\\n                <div *ngIf=\\\"formErrors.cluster_number\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.cluster_number}}</span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"KiloRank\\\">Kilo Rank</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"KiloRank\\\" placeholder=\\\"Kilo Rank\\\" formControlName=\\\"kilo_volume_rank\\\">\\n                <div *ngIf=\\\"formErrors.kilo_volume_rank\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume_rank}}</span>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n\\n                <label for=\\\"SalesManufacturer\\\">Sales Manufacturer</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"SalesManufacturer\\\" placeholder=\\\"Sales Manufacturer\\\" formControlName=\\\"sales_manufacturer\\\">\\n\\n            </div>\\n\\n            <div class=\\\"form-group col-sm-4\\\" *ngIf=\\\"listOfClass\\\">\\n                <label for=\\\"classificationNumber\\\">Classification Number</label>\\n                <select class=\\\"form-control\\\" id=\\\"classificationNumber\\\" formControlName=\\\"classification_number\\\">\\n      <option value=\\\"\\\" selected>Select a Classification Number</option>\\n      <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n     \\n\\n<!--<option *ngFor=\\\"let class_number of Classification_number\\\" [value] = \\\"class_number\\\">{{class_number}}</option>-->\\n</select>\\n\\n            </div>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n            <!-- <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"kiloVolumeRank\\\">Kilo Volume Rank</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"kiloVolumeRank\\\" placeholder=\\\"Kilo Volume Rank\\\" formControlName=\\\"kilo_volume_rank\\\">\\n                <div *ngIf=\\\"formErrors.kilo_volume_rank\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.kilo_volume_rank}}</span>\\n                </div>\\n            </div> -->\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"numberOfUnits\\\">Number of units</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"numberOfUnits\\\" placeholder=\\\"Number of units\\\" formControlName=\\\"number_of_units\\\">\\n                <div *ngIf=\\\"formErrors.number_of_units\\\" class=\\\"errorMessages\\\">\\n                    <span class=\\\"textPosition\\\">  {{formErrors.number_of_units}}</span>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group col-sm-4\\\">\\n                <label for=\\\"classificationType\\\">Classification Type  </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classificationType\\\" placeholder=\\\"Enter the Classification Type\\\" formControlName=\\\"classification_type\\\">\\n\\n            </div>\\n\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-sm-12\\\">\\n                <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!salesForm.valid || salesForm.pristine || isLoading || submitted\\\">Save</button>\\n<button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"reset\\\" (click)=\\\"revert()\\\" class=\\\"btn btn-danger\\\" [disabled]=\\\"salesForm.pristine || isLoading || submitted\\\">Revert</button>\\n\\n</div>\\n\\n</div>\\n</form>\\n</div>\\n\\n</mat-card>\\n</div>\\n</div>\\n\\n<confirm-box [flag]=\\\"flag\\\" *ngIf=\\\"flag\\\"></confirm-box>\\n\\n<div *ngIf=\\\"isLoading\\\">\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n<!--<div *ngIf=\\\"message\\\">\\n    {{message}}\\n</div>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/editForms/editSales/edit-sales.component.html\n// module id = ./src/app/editForms/editSales/edit-sales.component.html\n// module chunks = main","import { Component, OnChanges, Input, Output, EventEmitter, AfterViewChecked } from '@angular/core';\nimport { classificationList, Classification_name, Classification_number, Response, AllSalesFieldsView } from '../../data-model';\nimport { EditRecordService } from '../../services/edit-records.service';\nimport { SearchService } from '../../services/search.service';\nimport { GetRecordService } from '../../services/getRecord.service';\nimport { DatePipe } from '@angular/common';\n\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\nconst NUMBER_REGEX = '^[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?$';\n\n@Component({\n    selector: 'edit-sales',\n    templateUrl: './edit-sales.component.html',\n    styleUrls: ['./edit-sales.component.css'],\n    providers: [EditRecordService]\n\n})\n\nexport class EditSalesComponent implements OnChanges {\n\n    minDate = new Date(2000, 0, 1);\n    maxDate = new Date(2020, 0, 1);\n\n    isLoading: boolean = false;\n    submitted: boolean = false;\n    @Output() callP = new EventEmitter<number>();\n\n    offset: number = 0;\n     salesField: AllSalesFieldsView;\n    id: number;\n\n    listOfClass: classificationList[];\n    serverDown: boolean = false;\n\n    flag: number = null;\n    salesForm: FormGroup;\n    sales_collection_date_validation: string = null;\n    constructor(private fb: FormBuilder,\n        private searchService: SearchService,\n        private getRecordService: GetRecordService,\n        private editRecordService: EditRecordService,\n        private router: Router,\n        private route: ActivatedRoute) {\n\n        this.createForm();\n        \n\n    }\n    ngOnInit(): void {\n  this.route.paramMap\n            .switchMap((param: ParamMap) =>\n        this.getRecordService.getSalesRecordsAndClassification(param.get('id'))).subscribe(response => {\n            const {data, message, status} = response[1];\n            this.listOfClass = data.dataList;\n             this.salesField = response[0].data.dataList[0];\n             this.ngOnChanges();\n            \n\n        }\n        );\n\n\n    }\n\n\n\n    ngOnChanges() {\n        this.flag = null;\n        this.submitted = false;\n        this.salesForm.reset({\n            sales_description: this.salesField.sales_description,\n            sales_upc: this.salesField.sales_upc,\n            sales_brand: this.salesField.sales_brand,\n            sales_manufacturer: this.salesField.sales_manufacturer,\n            dollar_rank: this.salesField.dollar_rank,\n            dollar_volume: this.salesField.dollar_volume,\n            dollar_share: this.salesField.dollar_share,\n            dollar_volume_percentage_change: this.salesField.dollar_volume_percentage_change,\n            kilo_volume: this.salesField.kilo_volume,\n            kilo_share: this.salesField.kilo_share,\n            kilo_volume_percentage_change: this.salesField.kilo_volume_percentage_change,\n            average_ac_dist: this.salesField.average_ac_dist,\n            average_retail_price: this.salesField.average_retail_price,\n            sales_source: this.salesField.sales_source,\n            nielsen_category: this.salesField.nielsen_category,\n            sales_year: this.salesField.sales_year,\n            control_label_flag: (this.salesField.control_label_flag == null ? \"\" : (this.salesField.control_label_flag == false ? '0' : '1')),\n            kilo_volume_total: this.salesField.kilo_volume_total,\n            kilo_volume_rank: this.salesField.kilo_volume_rank,\n            dollar_volume_total: this.salesField.dollar_volume_total,\n            cluster_number: this.salesField.cluster_number,\n            product_grouping: this.salesField.product_grouping,\n            sales_product_description: this.salesField.sales_product_description,\n            classification_number: (this.salesField.classification_number == null?\"\":this.salesField.classification_number),\n            classification_type: this.salesField.classification_type,\n            sales_comment: this.salesField.sales_comment,\n            sales_collection_date: this.salesField.sales_collection_date,\n            number_of_units: this.salesField.number_of_units\n\n        }\n        );\n\n    }\n\n\n    createForm() {\n        this.salesForm = this.fb.group({\n            sales_description: ['', [Validators.required]],\n            sales_upc: ['', [\n                Validators.pattern('\\\\d+'),\n                Validators.required\n\n            ]],\n            sales_brand: '',\n            sales_manufacturer: '',\n            dollar_rank: [null, [Validators.pattern(NUMBER_REGEX)]],\n            dollar_volume: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            dollar_share: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            dollar_volume_percentage_change: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            kilo_volume: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required\n\n            ]],\n            kilo_share: ['', [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            kilo_volume_percentage_change: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            average_ac_dist: [null, [Validators.pattern(NUMBER_REGEX)]],\n            average_retail_price: [null, [Validators.pattern(NUMBER_REGEX)]],\n            sales_source: ['', [Validators.required]],\n            nielsen_category: ['', [Validators.required]],\n            sales_year: [null, [\n                Validators.pattern('\\\\d+')]],\n            control_label_flag: \"\",\n            kilo_volume_total: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            kilo_volume_rank: [null, [Validators.pattern(NUMBER_REGEX)]],\n            dollar_volume_total: [null, [\n                Validators.pattern(NUMBER_REGEX),\n                Validators.required]],\n            cluster_number: [null, [Validators.pattern(NUMBER_REGEX)]],\n            product_grouping: [null, [Validators.pattern(NUMBER_REGEX)]],\n            sales_product_description: '',\n            classification_number: \"\",\n            classification_type: '',\n            sales_comment: '',\n            sales_collection_date:  '',\n            number_of_units: [null, [Validators.pattern('\\\\d+')]]\n            // kilo_rank: [null, [Validators.pattern(NUMBER_REGEX)]]\n        });\n        this.salesForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.salesForm) { return; }\n        const form = this.salesForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n            \n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n\n    onSubmit() {\n\n\n\n        this.flag = null;\n        this.setValues();\n\n        this.isLoading = true;\n\n        this.editRecordService.updateSales(JSON.stringify(this.salesField)).finally(() => this.isLoading = false).subscribe(response => {\n\n            const {message, status} = response;\n\n            if (status === 202) {\n                this.flag = 2;\n                this.submitted = false;\n            } else if (status === 203) {\n                this.flag = 2;\n                this.submitted = false;\n\n            } else if (status === 204) {\n                this.flag = 2;\n                this.submitted = false;\n            } else if (status === 200) {\n\n                //this.callP.emit(1);\n                this.flag = 1;\n                setTimeout(() => {\n\n                    this.router.navigate(['/view-sales', this.id]);\n                },\n                    4000);\n            }\n            else {\n                this.flag = 2;\n                this.submitted = false;\n            }\n\n        }, (error) => {\n            this.serverDown = true;\n            this.flag = 2;\n            this.submitted = false;\n\n        });\n\n    }\n\n    prepareSaveSales(): AllSalesFieldsView {\n        return this.salesForm.value;\n    }\n\n    revert() {\n\n        this.ngOnChanges();\n    }\n\n\n    formErrors = {\n        'sales_description': '',\n        'sales_upc': '',\n        'dollar_rank': '',\n        'dollar_volume': '',\n        'dollar_share': '',\n        'dollar_volume_percentage_change': '',\n        'kilo_volume': '',\n        'kilo_share': '',\n        'kilo_volume_percentage_change': '',\n        'average_ac_dist': '',\n        'average_retail_price': '',\n        'sales_source': '',\n        'nielsen_category': '',\n        'sales_year': '',\n        'kilo_volume_total': '',\n        'kilo_volume_rank': '',\n        'dollar_volume_total': '',\n        'cluster_number': '',\n        'product_grouping': '',\n        'number_of_units': '',\n        // 'kilo_rank': '',\n        'sales_collection_date':''\n    }\n\n    validationMessages = {\n        'sales_description': {\n            'required': 'Sales description is required'\n        },\n        'sales_upc': {\n            'pattern': 'Must be a digit',\n            'required': 'Sales UPC is required'\n        },\n        'dollar_rank': {\n            'pattern': 'Must be a number'\n        }\n        ,\n        'dollar_volume': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar volume is required'\n        },\n        'dollar_share': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar share is required'\n        },\n        'dollar_volume_percentage_change': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar volume % change is required'\n        },\n        'kilo_volume': {\n            'pattern': 'Must be a number',\n            'required': 'Kilo volume is required'\n        },\n        'kilo_share': {\n            'pattern': 'Must be a number',\n            'required': 'Kilo share is required'\n        },\n        'kilo_volume_percentage_change': {\n            'pattern': 'Must be a number',\n            'required': 'Kilo volume % change is required'\n        },\n        'average_ac_dist': {\n            'pattern': 'Must be a number'\n        },\n        'average_retail_price': {\n            'pattern': 'Must be a number'\n        },\n        'sales_source': {\n            'required': 'Sales source is required'\n        },\n        'nielsen_category': {\n            'required': 'Nielsen Category is required',\n\n        },\n        'sales_year': {\n            'pattern': 'Must be a digit',\n            'required': 'Sales Year is required',\n            'minLength': 'Minimum of 4 digis',\n            'maxLength': 'Maximum of 4 digits'\n        },\n        'kilo_volume_total': {\n            'pattern': 'Must be a number',\n            'required': 'Kilo volume total is required'\n        },\n        'kilo_volume_rank': {\n            'pattern': 'Must be a number'\n        },\n        'dollar_volume_total': {\n            'pattern': 'Must be a number',\n            'required': 'Dollar volume total is required'\n        },\n        'cluster_number': {\n            'pattern': 'Must be a number'\n        },\n        'product_grouping': {\n            'pattern': 'Must be a number'\n        },\n        'number_of_units': {\n            'pattern': 'Must be a digit'\n        },\n        // 'kilo_rank': {\n        //     'pattern': 'Must be a number'\n        // },\n        'sales_collection_date':{\n            'pattern':'Invalid date'\n        }\n    }\n    setValues(): void {\n        this.submitted = true;\n        this.id = this.salesField.sales_id;\n        var date = new DatePipe('en-US');\n\n        this.salesField = this.prepareSaveSales();\n         this.salesField.sales_collection_date = this.salesField.sales_collection_date && this.salesField.sales_collection_date != \"\" ? this.salesField.sales_collection_date: null;\n\n        this.salesField.sales_id = this.id;\n        this.salesField.number_of_units = this.salesField.number_of_units == \"\"  && !this.salesField.number_of_units.toString.length? null : this.salesField.number_of_units;\n        this.salesField.product_grouping = this.salesField.product_grouping == \"\"  && !this.salesField.product_grouping.toString.length? null : this.salesField.product_grouping;\n        this.salesField.average_retail_price = this.salesField.average_retail_price == \"\"  && !this.salesField.average_retail_price.toString.length? null : this.salesField.average_retail_price;\n        this.salesField.sales_year = this.salesField.sales_year == \"\" && !this.salesField.sales_year.toString.length? null : this.salesField.sales_year;\n        this.salesField.classification_number = this.salesField.classification_number == \"\" && !this.salesField.classification_number.toString.length? null : this.salesField.classification_number;\n\n        this.salesField.dollar_rank = this.salesField.dollar_rank == \"\" && !this.salesField.dollar_rank.toString.length? null : this.salesField.dollar_rank;\n        this.salesField.dollar_volume = this.salesField.dollar_volume == \"\" && !this.salesField.dollar_volume.toString.length? null : this.salesField.dollar_volume;\n        this.salesField.dollar_share = this.salesField.dollar_share == \"\" && !this.salesField.dollar_share.toString.length ? null : this.salesField.dollar_share;\n        this.salesField.dollar_volume_percentage_change = this.salesField.dollar_volume_percentage_change == \"\" && !this.salesField.dollar_volume_percentage_change.toString.length? null : this.salesField.dollar_volume_percentage_change;\n        this.salesField.kilo_volume = this.salesField.kilo_volume == \"\" && !this.salesField.kilo_volume.toString.length? null : this.salesField.kilo_volume;\n\n        this.salesField.kilo_share = this.salesField.kilo_share == \"\" && !this.salesField.kilo_share.toString.length? null : this.salesField.kilo_share;\n        this.salesField.kilo_volume_percentage_change = this.salesField.kilo_volume_percentage_change == \"\" && !this.salesField.kilo_volume_percentage_change.toString.length? null : this.salesField.kilo_volume_percentage_change;\n        this.salesField.average_ac_dist = this.salesField.average_ac_dist == \"\" && !this.salesField.average_ac_dist.toString.length? null : this.salesField.average_ac_dist;\n\n        this.salesField.kilo_volume_total = this.salesField.kilo_volume_total == \"\" && !this.salesField.kilo_volume_total.toString.length? null : this.salesField.kilo_volume_total;\n        this.salesField.kilo_volume_rank = this.salesField.kilo_volume_rank == \"\" && !this.salesField.kilo_volume_rank.toString.length? null : this.salesField.kilo_volume_rank;\n\n        this.salesField.dollar_volume_total = this.salesField.dollar_volume_total == \"\" && !this.salesField.dollar_volume_total.toString.length? null : this.salesField.dollar_volume_total;\n        this.salesField.cluster_number = this.salesField.cluster_number == \"\" && !this.salesField.cluster_number.toString.length? null : this.salesField.cluster_number;\n\n        this.salesField.control_label_flag = this.salesField.control_label_flag == \"\" && !this.salesField.control_label_flag.toString.length? null : this.salesField.control_label_flag;\n\n\n    }\n    valDate(val: any){\n\n\n        var date = new DatePipe('en-US');\n        \n    \nreturn console.log(\"invalid\", val);\n\n    }\n     toFixed(x) {\n        console.log(\"the number is: \", this.salesField.kilo_share)\n        if (Math.abs(x) < 1.0) {\n          var e = parseInt(x.toString().split('e-')[1]);\n          if (e) {\n              x *= Math.pow(10,e-1);\n              x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n          }\n        } else {\n          var e = parseInt(x.toString().split('+')[1]);\n          if (e > 20) {\n              e -= 20;\n              x /= Math.pow(10,e);\n              x += (new Array(e+1)).join('0');\n          }\n        }\n        console.log(\"the number is fixed: \", x)\n        return x;\n      }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editSales/edit-sales.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { EditSalesComponent }  from './edit-sales.component';\nimport {RouterModule} from '@angular/router';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material';\nimport {EditSalesRoutingModule} from './edit-sales-routing.module'\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatProgressBarModule,\nBrowserModule,\nConfirmBoxModule,\nRouterModule,\nMatCardModule,\nMatDatepickerModule,\nMatNativeDateModule,\nEditSalesRoutingModule\n\n\n      \n       ],\n  declarations: [ \n\n    EditSalesComponent\n    ],\n  exports: [\n    EditSalesComponent\n   ]\n\n})\nexport class EditSalesModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/editForms/editSales/edit-sales.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms-center/forms-center.component.css\n// module id = ./src/app/forms-center/forms-center.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"searchBy\\\" class=\\\"content\\\">\\n\\n   \\n        <div [hidden]=\\\"searchBy !=='product'\\\">\\n            <form-comp></form-comp>\\n        </div>\\n        <div [hidden]=\\\"searchBy !=='sales'\\\">\\n            <sales-form></sales-form>\\n        </div>\\n        <div [hidden]=\\\"searchBy !=='label'\\\">\\n            <label-form></label-form>\\n        </div>\\n            <div [hidden]=\\\"searchBy !=='searchall'\\\">\\n            <search-all-comp></search-all-comp>\\n        </div>\\n \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms-center/forms-center.component.html\n// module id = ./src/app/forms-center/forms-center.component.html\n// module chunks = main","import { Component, Input } from '@angular/core';\n\n\n@Component({\n    selector: 'forms-center',\n    templateUrl: './forms-center.component.html',\n    styleUrls: ['./forms-center.component.css']\n\n\n})\nexport class FormsCenterComponent{\n\n    @Input() searchBy: any;\n  \n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms-center/forms-center.component.ts","import { NgModule }      from '@angular/core';\n\nimport {FormsCenterComponent }  from './forms-center.component';\nimport {NgSwitch} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {FormModule} from '../forms/productForm/form.module'\nimport {SalesFormModule} from '../forms/salesForm/sales-form.module'\nimport {LabelFormModule} from '../forms/labelForm/label-form.module'\nimport {SearchAllModule} from '../forms/searchAllForm/search-all.module'\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n\n\n\n\n@NgModule({\n  imports:      [ \nRouterModule,\nFormModule,\nSalesFormModule,\nLabelFormModule,\nBrowserModule,\nSearchAllModule\n      \n       ],\n  declarations: [ \n\n    FormsCenterComponent\n    ],\n  exports: [\n    FormsCenterComponent\n   ]\n\n})\nexport class FormsCenterModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms-center/forms-center.module.ts","module.exports = \"\\n/*div.flex{\\n    display: flex;\\n}\\ndiv.flex > md-input-container, div.flex > md-select{\\n    flex: 1;\\n    margin: 0 7px;\\n    font-size: 15px;\\n}\\ndiv.flex > md-select{\\n    margin-bottom: 7px;\\n}*/\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n.form-control {\\n    width: 100% !important;\\n}\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n.DivHeader{\\n    position: relative;\\n}\\ndiv.bodycard{\\n    position: relative;\\n}\\n/*.row > div, .row > div  md-input-container, .row > div  md-select {\\n    width: 100%;\\n     margin: 0 7px;\\n     font-size: 15px;\\n     flex: 1;\\n}*/\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n/*.tab{\\n    margin-top: 7px;\\n}*/\\n.dateIcon{\\n\\n    position: absolute;\\ntop: 26px;\\n    right: 9px;\\n\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/labelForm/label-form.component.css\n// module id = ./src/app/forms/labelForm/label-form.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\">\\n  <div class=\\\"DivLogo\\\">\\n    Search Label\\n  </div>\\n</div>\\n\\n<mat-card style=\\\"background-color: hsl(60, 100%, 98%)\\\">\\n  <div class=\\\"well2\\\" >\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"labelForm\\\">\\n\\n  <!--<div class=\\\"row\\\">-->\\n\\n  <div class=\\\"flex row\\\">\\n\\n    <div class=\\\"form-group col-lg-4\\\">\\n      <label for=\\\"labelUpc\\\">Label UPC</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelUpc\\\" placeholder=\\\"Label UPC\\\" formControlName=\\\"labelUpc\\\">\\n       <div *ngIf=\\\"formErrors.labelUpc\\\" class=\\\"errorMessages\\\">\\n            <span class=\\\"textPosition\\\">  {{formErrors.labelUpc}}</span>\\n    </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-group col-lg-4\\\">\\n      <label for=\\\"labelDescription\\\">Label Description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelDescription\\\" placeholder=\\\"Label Description\\\" formControlName=\\\"labelDescription\\\">\\n    </div>\\n\\n\\n    <div class=\\\"form-group col-lg-4\\\">\\n      <label for=\\\"labelSource\\\">Label Source</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelSource\\\" placeholder=\\\"Source\\\" formControlName=\\\"labelSource\\\">\\n    </div>\\n  </div>\\n\\n  <div class=\\\" row\\\">\\n\\n\\n    <div class=\\\"form-group col-lg-4\\\">\\n      <label for=\\\"labelIngredients\\\">Ingredients</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelIngredients\\\" placeholder=\\\"Ingredients\\\" formControlName=\\\"labelIngredients\\\">\\n    </div>\\n\\n\\n    <div class=\\\"form-group col-lg-4\\\">\\n      <label for=\\\"collectionDateFrom\\\">Collection Date From</label>\\n   \\n  <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"collectionDateFrom\\\"  formControlName=\\\"collectionDateFrom\\\">\\n\\n</div>\\n\\n<div class=\\\"form-group col-lg-4\\\">\\n<label for=\\\"collectionDateTo\\\">Collection Date To</label>\\n\\n<input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"collectionDateTo\\\"  formControlName=\\\"collectionDateTo\\\">\\n\\n</div>\\n  </div>\\n\\n  <div class=\\\" row\\\">\\n    <div style=\\\"float: right; margin-right: 15px\\\">\\n<button style=\\\"margin-top: 28px; width:140px;\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!labelForm.valid\\\">Search</button>\\n<!--<button type='reset' md-raised-button>RESET</button>-->\\n</div>\\n</div>\\n\\n</form>\\n</div>\\n\\n\\n</mat-card>\\n\\n\\n<!--<div *ngIf=\\\"tableData\\\">-->\\n<!--<table-template [tableValues]=\\\"tableData\\\"></table-template>-->\\n<h2 *ngIf=\\\"emptyField\\\">\\n\\n  {{emptyField}}\\n</h2>\\n<h2 *ngIf=\\\"noData\\\">\\n\\n  {{noData}}\\n</h2>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n\\n<div *ngIf=\\\"serverDown\\\">\\n  Something happened on the server\\n</div>\\n<div *ngIf=\\\"tableData\\\">\\n\\n  <ct-table [records]=\\\"tableData\\\" [caption]=\\\"'ROMYYY'\\\" [index]=\\\"index\\\" [flag]=\\\"direction[index]\\\" [settings]=\\\"settings\\\" (trigger)=\\\"sortBy2($event)\\\">\\n\\n  </ct-table>\\n</div>\\n<!--<pagination (offSet) = \\\"onPageChange($event)\\\"-->\\n<pagination [pageSize]=\\\"pageSizes\\\" [numberOfRecords]=\\\"count\\\" [(pageOffset)]=\\\"offset\\\" (offSetVal)=\\\"offSetVal($event)\\\">\\n</pagination>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/labelForm/label-form.component.html\n// module id = ./src/app/forms/labelForm/label-form.component.html\n// module chunks = main","import { Component, OnChanges, Input, ViewChild } from '@angular/core';\nimport { Params, Response, LabelData, LabelInputFields  } from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder,Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport 'rxjs/add/operator/finally';\nimport 'rxjs/add/operator/takeWhile';\nimport { DatePipe } from '@angular/common';\n//import { classification, FormValues } from '../../form-model';\n\n// import { ProjectService } from './project-center/project.service';\n// import { Project, Person } from './project-center/model';\nimport { ColumnSetting } from '../../shared/layout.model'\nimport { PaginationComponent } from '../../pagination/pagination.component'\nimport { TableLayoutComponent } from '../../shared/table-layout.component'\ndeclare var $: any;\n\n@Component({\n    selector: 'label-form',\n    templateUrl: './label-form.component.html',\n    styleUrls: ['./label-form.component.css'],\n    providers: [SearchService]\n\n})\nexport class LabelFormComponent implements OnChanges {\n\n\n    tableData: LabelData[];\n\n    submitted = false;\n    offset: number = 0;\n    @Input() label: LabelInputFields;\n    \n     settings: ColumnSetting[] = [\n                {primaryKey: 'labelUpc', header: 'Label UPC'},\n                {primaryKey: 'labelDescription', header: 'Label Description'},\n                {primaryKey: 'labelSource', header: 'Source'},\n                {primaryKey: 'labelCollectionDate', header: 'Collection Date'},\n                {primaryKey: 'labelCreationDate', header: 'Creation Date'},\n                {primaryKey: 'labelLastEditDate', header: 'Last Edited'},\n                {primaryKey: 'labelLastEditedBy', header: 'Edited By'}\n       \n                \n                ];\n \n    Order: string []= ['package_upc', 'package_description', 'package_source', 'package_collection_date', 'creation_date', 'last_edit_date', 'edited_by'];\n\n    count = 0;\n    pageSizes = 10;\n    //value: any;\n   // queryString = '';\n    index: number = 0;\n    flag: boolean = true;\n    direction: boolean[];\n    orderby: string = '';\n    emptyField: string;\n    noData: string;\n    isLoading: boolean = false;\n    serverDown: boolean = false;\n    labelForm: FormGroup;\n\n    constructor(private fb: FormBuilder,\n        private searchService: SearchService) {\n            \n       this.createForm();   \n       this.direction = [];\n       this.direction[this.index] = false;\n       this.index = 0;\n       this.flag = true;\n\n\n    }\n\n    ngOnInit():void {\n            // this.createForm();          \n    }\n\n    ngOnChanges() {\n        \n\n        this.labelForm.reset({\n            labelUpc: this.label.labelUpc,\n            labelDescription: this.label.labelDescription,\n            labelSource: this.label.labelSource,\n            labelIngredients: this.label.labelIngredients,\n            collection_date_from: this.label.collectionDateFrom,\n            collectionDateTo: this.label.collectionDateTo\n\n        }\n        );\n\n    }\n\n    createForm() {\n        this.labelForm = this.fb.group({\n            labelUpc: [''],\n            labelDescription:'',\n            labelSource: '',\n            labelIngredients: [''],\n            collectionDateFrom: '',\n            collectionDateTo: ''\n\n\n        });\n        this.labelForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if(!this.labelForm){return;}\n        const form = this.labelForm;\n\n        for(const field in this.formErrors){\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid){\n                const messages = this.validationMessages[field];\n                for(const key in control.errors){\n                    this.formErrors[field]+=messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n\n\n        this.setValues();\n\n        this.isLoading= true;\n        this.searchService.searchLabel(JSON.stringify(this.label)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n\n            if (status === 202) {\n                this.emptyField = message;\n                console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            }else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            }\n             else if (status === 200) {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData= data.dataList; \n                console.log(data.dataList);\n\n                \n\n\n\n                for (var num = 0; num < this.settings.length; num++) {\n                    if (num === 0) {\n                        this.direction[num] = true;\n                    } else {\n                        this.direction[num] = false;\n                    }\n                }\n            }else if (status === 205){\n\n                this.emptyField = \"No query values entered\";\n                this.tableData = null; \n            } else if (status === 602){\n\n                this.emptyField = \"Invalid date(s) range\";\n                this.tableData = null; \n            }else{\n                this.noData = \"Something happened\";\n                this.tableData = null;\n            }\n\n        }, (error) =>{\n            this.serverDown=true;\n            this.tableData = null;\n          \n        });\n\n\n\n       // this.ngOnChanges();\n    }\n\n    prepareSavelabel(): LabelInputFields {\n        \n        return this.labelForm.value;\n    }\n\n\n    offSetVal(n: number) {\n        this.offset = n;\n        this.label.offset = n;\n\n\n        this.isLoading= true;\n        this.searchService.searchLabel(JSON.stringify(this.label)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n\n            this.tableData = data.dataList;\n                    if (status === 202) {\n                this.emptyField = message;\n                console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            }else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData= data.dataList; \n\n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n            this.tableData = null;\n          \n        });\n    }\n\n\n    sortBy2(i: number) {\n        this.index = i;\n        this.flag = this.direction[i];\n        this.direction = this.direction.map((item, index) => i === index ? !this.direction[i] : false);\n        this.offset = 0;\n        this.label.offset = 0;\n        this.label.orderBy = this.Order[i];\n        this.label.flag = this.direction[i];\n        this.isLoading = true;\n        this.searchService.searchLabel(JSON.stringify(this.label)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n\n\n\n        if (status === 202) {\n                this.emptyField = message;\n                console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            }else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else  {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData= data.dataList; \n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n\n    }\n    formErrors = {\n\n        'labelUpc': ''\n    }\n\n    validationMessages = {\n\n        'labelUpc': {\n            'pattern': 'Invalid UPC number'\n        }\n\n    }\n\n    setValues():void{\n        this.offset = 0;\n        this.count = 0;\n       // this.queryString = null;\n        this.noData = null;\n        this.emptyField = null;\n\n        \n       this.direction = [];\n       this.direction[this.index] = false;\n       this.index = 0;\n       this.flag = true;\n\n        this.label = this.prepareSavelabel();\n        var date = new DatePipe('en-US');\n\n        this.label.collectionDateFrom = this.label.collectionDateFrom && this.label.collectionDateFrom != \"\"? this.label.collectionDateFrom: null;\n        this.label.collectionDateTo = this.label.collectionDateTo && this.label.collectionDateTo != \"\"? this.label.collectionDateTo: null;\n\n        // console.log(this.label.collection_date_from);\n        this.label.orderBy = this.Order[0];\n        this.label.flag = this.flag;\n        this.label.offset = this.offset;\n\n\n        console.log(JSON.stringify(this.label));\n        this.submitted = true;\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/labelForm/label-form.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { LabelFormComponent }  from './label-form.component';\nimport {SharedModule} from '../../shared/shared.module'\n import {PaginationModelModule} from '../../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nSharedModule,\nBrowserModule,\nSharedModule,\nPaginationModelModule,\nMatDatepickerModule\n      \n       ],\n  declarations: [ \n\n    LabelFormComponent\n    ],\n  exports: [\n    LabelFormComponent\n   ]\n\n})\nexport class LabelFormModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/labelForm/label-form.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { FormComponent }    from './form.component';\n \nconst formRoutes: Routes = [\n  { path: 'search',  component: FormComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(formRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class FormRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/productForm/form-routing.module.ts","module.exports = \"\\n/*div.flex{\\n    display: flex;\\n}\\ndiv.flex > md-input-container, div.flex > md-select{\\n    flex: 1;\\n    margin: 0 7px;\\n    font-size: 15px;\\n}\\ndiv.flex > md-select{\\n    margin-bottom: 7px;\\n}*/\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n.form-control {\\n    width: 100% !important;\\n}\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n.DivHeader{\\n    position: relative;\\n}\\ndiv.bodycard{\\n    position: relative;\\n}\\n/*.row > div, .row > div  md-input-container, .row > div  md-select {\\n    width: 100%;\\n     margin: 0 7px;\\n     font-size: 15px;\\n     flex: 1;\\n}*/\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n/*.tab{\\n    margin-top: 7px;\\n}*/\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/productForm/form.component.css\n// module id = ./src/app/forms/productForm/form.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\">\\n  <div class=\\\"DivLogo\\\">\\n    Search Product\\n  </div>\\n\\n  <div class=\\\"bodycard\\\">\\n    <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n      <div class=\\\"well2\\\">\\n  \\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"productForm\\\">\\n\\n\\n          <!--<div class=\\\"flex row\\\" style=\\\"margin-top:10px; margin-bottom:10px; margin-left: 8px;\\\">\\n\\n<md-select placeholder=\\\"Classification Name\\\" formControlName=\\\"classification_name\\\">\\n  <md-option *ngFor=\\\"let classif of Classification_name\\\" [value]=\\\"classif\\\">{{classif}}</md-option>\\n\\n</md-select>\\n\\n\\n<md-select placeholder=\\\"Classification Number\\\" formControlName=\\\"classification_number\\\">\\n  <md-option *ngFor=\\\"let classifi of Classification_number\\\" [value]=\\\"classifi\\\">{{classifi}}</md-option>\\n\\n</md-select>\\n\\n\\n</div>-->\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n    <label for=\\\"classification_name\\\">Classification Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classification_name\\\" placeholder=\\\"Classification Name\\\" formControlName=\\\"classification_name\\\">\\n\\n    <!--<select class=\\\"form-control\\\" id=\\\"classification_name\\\" formControlName=\\\"classification_name\\\">\\n<option value=\\\"\\\" selected>Select a Classification Name</option>\\n<option *ngFor=\\\"let class of listOfClass;let i = index\\\" [value]=\\\"class.classification_name\\\">{{class.classification_name}}</option>\\n\\n</select>-->\\n\\n\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n    <label for=\\\"classification_number\\\">Classification Number</label>\\n    <select class=\\\"form-control\\\" tabindex=\\\"0\\\" id=\\\"classification_number\\\" formControlName=\\\"classification_number\\\">\\n      <option value=\\\"\\\" selected >Select a Classification Number</option>\\n      <option  *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n     \\n\\n<!--<option *ngFor=\\\"let class_number of Classification_number\\\" [value] = \\\"class_number\\\">{{class_number}}</option>-->\\n</select>\\n\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\">\\n    <label for=\\\"classification_type\\\">Classification Type  </label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classification_type\\\" placeholder=\\\"Enter the Classification Type\\\" formControlName=\\\"classification_type\\\">\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n\\n  <div class=\\\"form-group col-lg-4\\\">\\n    <label for=\\\"product_manufacturer\\\">Product Manufactuer </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_manufacturer\\\" placeholder=\\\"Product Manufactuer\\\" formControlName=\\\"product_manufacturer\\\">\\n\\n  </div>\\n\\n  <div class=\\\"form-group col-lg-4\\\">\\n\\n   <label for=\\\"product_brand\\\">Product Brand</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_brand\\\" placeholder=\\\"Product Brand\\\" formControlName=\\\"product_brand\\\">\\n\\n  </div>\\n\\n\\n  <div class=\\\"form-group col-lg-4\\\">\\n\\n      <label for=\\\"cnf_code\\\">CNF CODE    </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cnf_code\\\" placeholder=\\\"CNF CODE\\\" formControlName=\\\"cnf_code\\\">\\n \\n    <div *ngIf=\\\"formErrors.cnf_code\\\" class=\\\"errorMessages\\\">\\n      <span class=\\\"textPosition\\\">  {{formErrors.cnf_code}}</span>\\n    </div>\\n  </div>\\n  </div>\\n\\n\\n\\n<div class=\\\" row\\\">\\n  <div class=\\\"form-group col-lg-4\\\">\\n       <label for=\\\"cluster_number\\\">Cluster Number</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cluster_number\\\" placeholder=\\\"Cluster Number\\\" formControlName=\\\"cluster_number\\\">\\n    <div *ngIf=\\\"formErrors.cluster_number\\\" class=\\\"errorMessages\\\">\\n      <span class=\\\"textPosition\\\"> {{formErrors.cluster_number}}</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\">\\n       <label for=\\\"product_description\\\">Product Description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_description\\\" placeholder=\\\"Product Description\\\" formControlName=\\\"product_description\\\">\\n\\n    <!--<div *ngIf=\\\"formErrors.product_description\\\" class=\\\"errorMessages\\\">\\n      <span class=\\\"textPosition\\\">   {{formErrors.product_description}}</span>\\n    </div>-->\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\">\\n     <label for=\\\"product_comment\\\">Product Comment</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_comment\\\" placeholder=\\\"Product Comment\\\" formControlName=\\\"product_comment\\\">\\n\\n  </div>\\n</div>\\n<div class=\\\" row\\\">\\n\\t\\t\\t<div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"restaurantTypes\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"restaurant_type\\\">Restaurant Type</label>\\n\\t\\t\\t\\t <select class=\\\"form-control\\\" id=\\\"restaurant_type\\\" placeholder=\\\"Select a Restaurant Type\\\" formControlName=\\\"restaurant_type\\\">\\n\\n\\t\\t\\t<option value=\\\"\\\" selected>Select a Restaurant Type</option>\\n      <option *ngFor=\\\"let restaurantTypes of restaurantTypes;let i = index\\\" [value]=\\\"restaurantTypes\\\">{{restaurantTypes}}</option>\\n\\n\\t\\t\\t </select>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"types\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"type\\\">Type</label>\\n\\t\\t\\t\\t <select class=\\\"form-control\\\" id=\\\"Type\\\"  formControlName=\\\"type\\\">\\n\\n\\t\\t\\t<option value=\\\"\\\" selected>Select a Type</option>\\n      <option *ngFor=\\\"let type of types;let i = index\\\" [value]=\\\"type\\\">{{type}}</option>\\n\\n\\t\\t\\t </select>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group col-lg-4\\\" >\\n\\t\\t\\t    <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!productForm.valid\\\">Search</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n<!--margin-top: 28px; -->\\n\\n<!--<md-card-actions>\\n  <div style=\\\"float: right\\\">\\n<button md-raised-button type=\\\"submit\\\" [disabled]=\\\"!productForm.valid\\\">SUBMIT</button>\\n<button type='reset' md-raised-button>RESET</button>\\n</div>\\n</md-card-actions>-->\\n\\n</form>\\n</div>\\n\\n</mat-card>\\n</div>\\n</div>\\n\\n<!--<div *ngIf=\\\"tableData\\\">-->\\n<!--<table-template [tableValues]=\\\"tableData\\\"></table-template>-->\\n<h2 *ngIf=\\\"emptyField\\\">\\n\\n  {{emptyField}}\\n</h2>\\n<h2 *ngIf=\\\"noData\\\">\\n\\n  No data found\\n</h2>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n\\n\\n<div *ngIf=\\\"serverDown\\\">\\n  Something happened on the server\\n</div>\\n<div *ngIf=\\\"tableData && count > 0\\\">\\n\\n  <ct-table [records]=\\\"tableData\\\" [caption]=\\\"'ROMYYY'\\\" [index]=\\\"index\\\" [flag]=\\\"direction[index]\\\" [settings]=\\\"settings\\\" (trigger)=\\\"sortBy2($event)\\\">\\n\\n  </ct-table>\\n<pagination [pageSize]=\\\"pageSizes\\\" [numberOfRecords]=\\\"count\\\" [(pageOffset)]=\\\"offset\\\" (offSetVal)=\\\"offSetVal($event)\\\">\\n</pagination>\\n\\n</div>\\n<!--<pagination (offSet) = \\\"onPageChange($event)\\\"-->\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/productForm/form.component.html\n// module id = ./src/app/forms/productForm/form.component.html\n// module chunks = main","import { Component, OnChanges, Input, ViewChild } from '@angular/core';\nimport { Params,classificationList, Classification_name, Classification_number, Response,GenericList } from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n//import { classification, FormValues } from '../../form-model';\n\n// import { ProjectService } from './project-center/project.service';\n// import { Project, Person } from './project-center/model';\nimport { ColumnSetting } from '../../shared/layout.model'\n// import { PaginationComponent } from '../../pagination/pagination.component'\n// import { TableLayoutComponent } from '../../shared/table-layout.component'\n@Component({\n    selector: 'form-comp',\n    templateUrl: './form.component.html',\n    styleUrls: ['./form.component.css'],\n    providers: [SearchService]\n\n})\nexport class FormComponent implements OnChanges {\n\n\n    tableData: Params[];\n    isLoading: boolean = false;\n    submitted = false;\n    offset: number = 0;\n    product: Params;\n    \n\n    settings: ColumnSetting[] = [\n        { primaryKey: 'product_description', header: 'Description' },\n        { primaryKey: 'product_brand', header: 'Brand' },\n        { primaryKey: 'product_manufacturer', header: 'Manufacturer' },\n        { primaryKey: 'classification_number', header: 'Classification Number' },\n        { primaryKey: 'classification_name', header: 'Classification Name' },\n        { primaryKey: 'classification_type', header: 'Classification Type' },\n        { primaryKey: 'cnf_code', header: 'CNF CODE' },\n        { primaryKey: 'cluster_number', header: 'Cluster Number' },\n\n    ];\n\n    Classification_name = Classification_name;\n    Classification_number = Classification_number;\n\n\n  listOfClass: classificationList[];\n    count = 0;\n    pageSizes = 10;\n    //value: any;\n    // queryString = '';\n    index: number = 0;\n    flag: boolean = true;\n    direction: boolean[];\n    orderby: string = '';\n    emptyField: string;\n    noData: string;\n    serverDown: boolean = false;\n    restaurantTypes: GenericList;\n    types: GenericList;\n\n    productForm: FormGroup;\n\n    constructor(private fb: FormBuilder,\n        private searchService: SearchService) {\n\n        this.createForm();\n\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n\n    }\n\n    ngOnInit(): void {\n                       this.searchService.getClassificationRestaurant().subscribe(response =>\n                {  \n                 const {data, message, status} = response[0];   \n                 //const cl = response;\n                 this.listOfClass = data.dataList;\n                 this.restaurantTypes = response[1].dataList;\n                 this.types = response[2].dataList;\n                 console.log( response[2], \"is the resp 2 \")\n                 console.log(this.restaurantTypes);\n\n                \n\n                 }\n            );        \n    }\n\n    ngOnChanges() {\n\n        this.productForm.reset({\n            classification_name: this.product.classification_name,\n            Classification_number: this.product.classification_number,\n            classification_type: this.product.classification_type,\n            product_manufacturer: this.product.product_manufacturer,\n            product_brand: this.product.product_brand,\n            cnf_code: this.product.cnf_code,\n            cluster_number: this.product.cluster_number,\n            product_description: this.product.product_description,\n            product_comment: this.product.product_comment,\n            restaurant_type:this.product.restaurant_type,\n            type:this.product.type\n\n        }\n        );\n\n    }\n\n    createForm() {\n        this.productForm = this.fb.group({\n            classification_name: '',\n            classification_number: '',\n            classification_type: '',\n            product_manufacturer: '',\n            product_brand: '',\n            cnf_code: ['', [Validators.pattern('\\\\d+')]],\n            cluster_number: ['', [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            product_description: '', //['', [Validators.required]],\n            product_comment: '',\n            restaurant_type:\"\",\n            type:\"\"\n\n\n        });\n        this.productForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.productForm) { return; }\n        const form = this.productForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n\n\n        this.setValues();\n        // this.queryString = '?';\n\n        // for (const prop in this.product) {\n        //     if (this.product.hasOwnProperty(prop)) {\n        //         this.queryString += encodeURIComponent(prop) + '=' + (this.product[prop] == null ? '' : encodeURIComponent(this.product[prop])) + '&';\n        //     }\n        // }\n\nthis.isLoading = true;\n        this.searchService.search(JSON.stringify(this.product)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n   \n            if (status === 202) {\n                this.emptyField = message;\n                //console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n                // console.log(\"Here 203\",data.dataList);\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n            //console.log(\"Here 204\",data.dataList);\n            }else if (status === 205){\n                this.noData = message;\n            }\n            else if(status === 200) {\n            \n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n                console.log(\"Number of data\",this.count);\n\n\n                for (var num = 0; num < this.settings.length; num++) {\n                    if (num === 0) {\n                        this.direction[num] = true;\n                    } else {\n                        this.direction[num] = false;\n                    }\n                }\n            }else{\n                this.noData = \"Something happened\";\n            }\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n\n\n\n        // this.ngOnChanges();\n    }\n\n    prepareSaveProduct(): Params {\n        return this.productForm.value;\n    }\n\n\n    offSetVal(n: number) {\n        this.offset = n;\n        this.product.offset = n;\n        // this.queryString = this.queryString.replace(/(offset=)(\\w+)/, \"$1\" + this.offset);\n        // console.log(\"in Parent\");\n        // console.log(this.offset, this.queryString);\n\n\nthis.isLoading = true;\n        this.searchService.search(JSON.stringify(this.product)).finally(()=> \n        {this.isLoading = false;\n       // console.log(\"failling here\")    \n        }\n        \n        \n        ).subscribe(response => {\n            const {data, message, status} = response;\n            this.isLoading = false;\n\n            if (status === 202) {\n                this.emptyField = message;\n               // console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n\n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n    }\n\n\n    sortBy2(i: number) {\n        this.index = i;\n        this.flag = this.direction[i];\n        this.direction = this.direction.map((item, index) => i === index ? !this.direction[i] : false);\n\nthis.isLoading = true;\n        this.offset = 0;\n        this.product.offset = 0;\n        this.product.orderby = this.settings[i].primaryKey;\n        this.product.flag = this.direction[i];\n        this.isLoading = false;\n        this.searchService.search(JSON.stringify(this.product)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n\n            if (status === 205) {\n                this.emptyField = message;\n                //console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n                //console.log(\"Data received\", data.dataList);\n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n\n    }\n    formErrors = {\n        'product_description': '',\n        'cnf_code': '',\n        'cluster_number': ''\n    }\n    validationMessages = {\n        'product_description': {\n            'required': 'Description is requiredd'\n        },\n        'cnf_code': {\n            'pattern': 'Must be a digit'\n        },\n        'cluster_number': {\n            'pattern': 'Must be a number'\n        }\n\n    }\n    setValues(): void {\n        this.offset = 0;\n        this.count = 0;\n        this.noData = null;\n        this.emptyField = null;\n\n\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n        this.product = this.prepareSaveProduct();\n        this.product.orderby = \"product_description\";\n        this.product.flag = this.flag;\n        this.product.offset = this.offset;\n\n\n        //console.log(this.product);\n        this.submitted = true;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/productForm/form.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormComponent }  from './form.component';\nimport {FormRoutingModule} from './form-routing.module'\nimport {SharedModule} from '../../shared/shared.module'\n import {PaginationModelModule} from '../../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\n\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nFormRoutingModule,\n\nBrowserModule,\nSharedModule,\nPaginationModelModule\n      \n       ],\n  declarations: [ \n\n    FormComponent\n    ],\n  exports: [\n    FormComponent\n   ]\n\n})\nexport class FormModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/productForm/form.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { FormRelinkComponent }    from './form-relink.component';\n \nconst formRoutes: Routes = [\n  { path: 'product-relink/:id/:type',  component: FormRelinkComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(formRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class FormRelinkRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/productFormRelink/form-relink-routing.module.ts","module.exports = \"\\n/*div.flex{\\n    display: flex;\\n}\\ndiv.flex > md-input-container, div.flex > md-select{\\n    flex: 1;\\n    margin: 0 7px;\\n    font-size: 15px;\\n}\\ndiv.flex > md-select{\\n    margin-bottom: 7px;\\n}*/\\n.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}\\n.form-control {\\n    width: 100% !important;\\n}\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n.DivHeader{\\n    position: relative;\\n}\\ndiv.bodycard{\\n    position: relative;\\n}\\n/*.row > div, .row > div  md-input-container, .row > div  md-select {\\n    width: 100%;\\n     margin: 0 7px;\\n     font-size: 15px;\\n     flex: 1;\\n}*/\\n.errorMessages{\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n/*.tab{\\n    margin-top: 7px;\\n}*/\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/productFormRelink/form-relink.component.css\n// module id = ./src/app/forms/productFormRelink/form-relink.component.css\n// module chunks = main","module.exports = \"\\n\\n<div class=\\\"DivHeader\\\">\\n  <div class=\\\"DivLogo\\\" style=\\\"font-size:x-large\\\">\\n    Search for the product you want to link it to.\\n  </div>\\n\\n  <div class=\\\"bodycard\\\">\\n    <mat-card style=\\\"background-color: #f5f5f5\\\">\\n\\n      <div class=\\\"well2\\\">\\n  \\n        <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"productForm\\\">\\n\\n\\n          <!--<div class=\\\"flex row\\\" style=\\\"margin-top:10px; margin-bottom:10px; margin-left: 8px;\\\">\\n\\n<md-select placeholder=\\\"Classification Name\\\" formControlName=\\\"classification_name\\\">\\n  <md-option *ngFor=\\\"let classif of Classification_name\\\" [value]=\\\"classif\\\">{{classif}}</md-option>\\n\\n</md-select>\\n\\n\\n<md-select placeholder=\\\"Classification Number\\\" formControlName=\\\"classification_number\\\">\\n  <md-option *ngFor=\\\"let classifi of Classification_number\\\" [value]=\\\"classifi\\\">{{classifi}}</md-option>\\n\\n</md-select>\\n\\n\\n</div>-->\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n    <label for=\\\"classification_name\\\">Classification Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classification_name\\\" placeholder=\\\"Classification Name\\\" formControlName=\\\"classification_name\\\">\\n\\n    <!--<select class=\\\"form-control\\\" id=\\\"classification_name\\\" formControlName=\\\"classification_name\\\">\\n<option value=\\\"\\\" selected>Select a Classification Name</option>\\n<option *ngFor=\\\"let class of listOfClass;let i = index\\\" [value]=\\\"class.classification_name\\\">{{class.classification_name}}</option>\\n\\n</select>-->\\n\\n\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n    <label for=\\\"classification_number\\\">Classification Number</label>\\n    <select class=\\\"form-control\\\" id=\\\"classification_number\\\" formControlName=\\\"classification_number\\\">\\n      <option value=\\\"\\\" selected>Select a Classification Number</option>\\n      <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n     \\n\\n<!--<option *ngFor=\\\"let class_number of Classification_number\\\" [value] = \\\"class_number\\\">{{class_number}}</option>-->\\n</select>\\n\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\">\\n    <label for=\\\"classification_type\\\">Classification Type  </label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classification_type\\\" placeholder=\\\"Enter the Classification Type\\\" formControlName=\\\"classification_type\\\">\\n\\n  </div>\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n\\n  <div class=\\\"form-group col-lg-4\\\">\\n    <label for=\\\"product_manufacturer\\\">Product Manufactuer </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_manufacturer\\\" placeholder=\\\"Product Manufactuer\\\" formControlName=\\\"product_manufacturer\\\">\\n\\n  </div>\\n\\n  <div class=\\\"form-group col-lg-4\\\">\\n\\n   <label for=\\\"product_brand\\\">Product Brand</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_brand\\\" placeholder=\\\"Product Brand\\\" formControlName=\\\"product_brand\\\">\\n\\n  </div>\\n\\n\\n  <div class=\\\"form-group col-lg-4\\\">\\n\\n      <label for=\\\"cnf_code\\\">CNF CODE    </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cnf_code\\\" placeholder=\\\"CNF CODE\\\" formControlName=\\\"cnf_code\\\">\\n \\n    <div *ngIf=\\\"formErrors.cnf_code\\\" class=\\\"errorMessages\\\">\\n      <span class=\\\"textPosition\\\">  {{formErrors.cnf_code}}</span>\\n    </div>\\n  </div>\\n  </div>\\n\\n\\n\\n<div class=\\\" row\\\">\\n  <div class=\\\"form-group col-lg-4\\\">\\n       <label for=\\\"cluster_number\\\">Cluster Number</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cluster_number\\\" placeholder=\\\"Cluster Number\\\" formControlName=\\\"cluster_number\\\">\\n    <div *ngIf=\\\"formErrors.cluster_number\\\" class=\\\"errorMessages\\\">\\n      <span class=\\\"textPosition\\\"> {{formErrors.cluster_number}}</span>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\">\\n       <label for=\\\"product_description\\\">Product Description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_description\\\" placeholder=\\\"Product Description\\\" formControlName=\\\"product_description\\\">\\n\\n    <!--<div *ngIf=\\\"formErrors.product_description\\\" class=\\\"errorMessages\\\">\\n      <span class=\\\"textPosition\\\">   {{formErrors.product_description}}</span>\\n    </div>-->\\n  </div>\\n  <div class=\\\"form-group col-lg-4\\\">\\n     <label for=\\\"product_comment\\\">Product Comment</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"product_comment\\\" placeholder=\\\"Product Comment\\\" formControlName=\\\"product_comment\\\">\\n\\n  </div>\\n</div>\\n<div class=\\\" row\\\">\\n\\t\\t\\t<div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"restaurantTypes\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"restaurant_type\\\">Restaurant Type</label>\\n\\t\\t\\t\\t <select class=\\\"form-control\\\" id=\\\"restaurant_type\\\" placeholder=\\\"Select a Restaurant Type\\\" formControlName=\\\"restaurant_type\\\">\\n\\n\\t\\t\\t<option value=\\\"\\\" selected>Select a Restaurant Type</option>\\n      <option *ngFor=\\\"let restaurantTypes of restaurantTypes;let i = index\\\" [value]=\\\"restaurantTypes\\\">{{restaurantTypes}}</option>\\n\\n\\t\\t\\t </select>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"types\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"type\\\">Type</label>\\n\\t\\t\\t\\t <select class=\\\"form-control\\\" id=\\\"Type\\\"  formControlName=\\\"type\\\">\\n\\n\\t\\t\\t<option value=\\\"\\\" selected>Select a Type</option>\\n      <option *ngFor=\\\"let type of types;let i = index\\\" [value]=\\\"type\\\">{{type}}</option>\\n\\n\\t\\t\\t </select>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\\"form-group col-lg-4\\\" >\\n\\t\\t\\t    <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!productForm.valid\\\">Search</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n<!--margin-top: 28px; -->\\n\\n<!--<md-card-actions>\\n  <div style=\\\"float: right\\\">\\n<button md-raised-button type=\\\"submit\\\" [disabled]=\\\"!productForm.valid\\\">SUBMIT</button>\\n<button type='reset' md-raised-button>RESET</button>\\n</div>\\n</md-card-actions>-->\\n\\n</form>\\n</div>\\n\\n</mat-card>\\n</div>\\n</div>\\n\\n<!--<div *ngIf=\\\"tableData\\\">-->\\n<!--<table-template [tableValues]=\\\"tableData\\\"></table-template>-->\\n<h2 *ngIf=\\\"emptyField\\\">\\n\\n  {{emptyField}}\\n</h2>\\n<h2 *ngIf=\\\"noData\\\">\\n\\n  No data found\\n</h2>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n\\n\\n<div *ngIf=\\\"serverDown\\\">\\n  Something happened on the server\\n</div>\\n<div *ngIf=\\\"tableData && count > 0\\\">\\n\\n  <ct-table [records]=\\\"tableData\\\" [caption]=\\\"'ROMYYY'\\\" [isRelink]=\\\"true\\\" [type]=\\\"typeOfRelink\\\" [recordId]=\\\"id\\\" [index]=\\\"index\\\" [flag]=\\\"direction[index]\\\" [settings]=\\\"settings\\\" (trigger)=\\\"sortBy2($event)\\\">\\n\\n  </ct-table>\\n<pagination [pageSize]=\\\"pageSizes\\\" [numberOfRecords]=\\\"count\\\" [(pageOffset)]=\\\"offset\\\" (offSetVal)=\\\"offSetVal($event)\\\">\\n</pagination>\\n\\n</div>\\n<!--<pagination (offSet) = \\\"onPageChange($event)\\\"-->\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/productFormRelink/form-relink.component.html\n// module id = ./src/app/forms/productFormRelink/form-relink.component.html\n// module chunks = main","import { Component, OnChanges, Input, ViewChild } from '@angular/core';\nimport { Params,classificationList, Classification_name, Classification_number, Response,GenericList } from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n//import { classification, FormValues } from '../../form-model';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n// import { ProjectService } from './project-center/project.service';\n// import { Project, Person } from './project-center/model';\nimport { ColumnSetting } from '../../shared/layout.model'\n// import { PaginationComponent } from '../../pagination/pagination.component'\n// import { TableLayoutComponent } from '../../shared/table-layout.component'\n@Component({\n    selector: 'form-relink',\n    templateUrl: './form-relink.component.html',\n    styleUrls: ['./form-relink.component.css'],\n    providers: [SearchService]\n\n})\nexport class FormRelinkComponent implements OnChanges {\n\n    id:number | string = null;\n    tableData: Params[];\n    isLoading: boolean = false;\n    submitted = false;\n    offset: number = 0;\n    product: Params;\n    settings: ColumnSetting[] = [\n        { primaryKey: 'product_description', header: 'Description' },\n        { primaryKey: 'product_brand', header: 'Brand' },\n        { primaryKey: 'product_manufacturer', header: 'Manufacturer' },\n        { primaryKey: 'classification_number', header: 'Classification Number' },\n        { primaryKey: 'classification_name', header: 'Classification Name' },\n        { primaryKey: 'classification_type', header: 'Classification Type' },\n        { primaryKey: 'cnf_code', header: 'CNF CODE' },\n        { primaryKey: 'cluster_number', header: 'Cluster Number' },\n\n    ];\n\n    Classification_name = Classification_name;\n    Classification_number = Classification_number;\n\n\n    listOfClass: classificationList[];\n    count = 0;\n    pageSizes = 10;\n    //value: any;\n    // queryString = '';\n    index: number = 0;\n    flag: boolean = true;\n    direction: boolean[];\n    orderby: string = '';\n    emptyField: string;\n    noData: string;\n    serverDown: boolean = false;\n    restaurantTypes: GenericList;\n    types: GenericList;\n    typeOfRelink: string = null;\n\n    productForm: FormGroup;\n\n    constructor(private fb: FormBuilder,\n        private searchService: SearchService,\n        private router: Router,\n        private route: ActivatedRoute) {\n\n        this.createForm();\n\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n\n    }\n\n    ngOnInit(): void {\n                       this.searchService.getClassificationRestaurant().subscribe(response =>\n                {  \n                 const {data, message, status} = response[0];   \n                 //const cl = response;\n                 this.listOfClass = data.dataList;\n                 this.restaurantTypes = response[1].dataList;\n                 this.types = response[2].dataList;\n                 console.log( response[2], \"is the resp 2 \")\n                 console.log(this.restaurantTypes);\n\n                \n\n                 }\n            );        \n    }\n\n    ngOnChanges() {\n        \n        this.productForm.reset({\n            classification_name: this.product.classification_name,\n            Classification_number: this.product.classification_number,\n            classification_type: this.product.classification_type,\n            product_manufacturer: this.product.product_manufacturer,\n            product_brand: this.product.product_brand,\n            cnf_code: this.product.cnf_code,\n            cluster_number: this.product.cluster_number,\n            product_description: this.product.product_description,\n            product_comment: this.product.product_comment,\n            restaurant_type:this.product.restaurant_type,\n            type:this.product.type\n\n        }\n        );\n\n    }\n\n    createForm() {\n        this.productForm = this.fb.group({\n            classification_name: '',\n            classification_number: '',\n            classification_type: '',\n            product_manufacturer: '',\n            product_brand: '',\n            cnf_code: ['', [Validators.pattern('\\\\d+')]],\n            cluster_number: ['', [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            product_description: '', //['', [Validators.required]],\n            product_comment: '',\n            restaurant_type:\"\",\n            type:\"\"\n\n\n        });\n        this.productForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.productForm) { return; }\n        const form = this.productForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n        this.id = this.route.snapshot.paramMap.get('id')\n        this.typeOfRelink =this.route.snapshot.paramMap.get('type')\n\n        this.setValues();\n        // this.queryString = '?';\n\n        // for (const prop in this.product) {\n        //     if (this.product.hasOwnProperty(prop)) {\n        //         this.queryString += encodeURIComponent(prop) + '=' + (this.product[prop] == null ? '' : encodeURIComponent(this.product[prop])) + '&';\n        //     }\n        // }\n\nthis.isLoading = true;\n        this.searchService.search(JSON.stringify(this.product)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n   \n            if (status === 202) {\n                this.emptyField = message;\n                //console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n                // console.log(\"Here 203\",data.dataList);\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n            //console.log(\"Here 204\",data.dataList);\n            }else if (status === 205){\n                this.noData = message;\n            }\n            else if(status === 200) {\n            \n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n                console.log(\"Number of data\",this.count);\n\n\n                for (var num = 0; num < this.settings.length; num++) {\n                    if (num === 0) {\n                        this.direction[num] = true;\n                    } else {\n                        this.direction[num] = false;\n                    }\n                }\n            }else{\n                this.noData = \"Something happened\";\n            }\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n\n\n\n        // this.ngOnChanges();\n    }\n\n    prepareSaveProduct(): Params {\n        return this.productForm.value;\n    }\n\n\n    offSetVal(n: number) {\n        this.offset = n;\n        this.product.offset = n;\n        // this.queryString = this.queryString.replace(/(offset=)(\\w+)/, \"$1\" + this.offset);\n        // console.log(\"in Parent\");\n        // console.log(this.offset, this.queryString);\n\n\nthis.isLoading = true;\n        this.searchService.search(JSON.stringify(this.product)).finally(()=> \n        {this.isLoading = false;\n       // console.log(\"failling here\")    \n        }\n        \n        \n        ).subscribe(response => {\n            const {data, message, status} = response;\n            this.isLoading = false;\n\n            if (status === 202) {\n                this.emptyField = message;\n               // console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n\n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n    }\n\n\n    sortBy2(i: number) {\n        this.index = i;\n        this.flag = this.direction[i];\n        this.direction = this.direction.map((item, index) => i === index ? !this.direction[i] : false);\n\nthis.isLoading = true;\n        this.offset = 0;\n        this.product.offset = 0;\n        this.product.orderby = this.settings[i].primaryKey;\n        this.product.flag = this.direction[i];\n        this.isLoading = false;\n        this.searchService.search(JSON.stringify(this.product)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n\n            if (status === 205) {\n                this.emptyField = message;\n                //console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n                //console.log(\"Data received\", data.dataList);\n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n\n    }\n    formErrors = {\n        'product_description': '',\n        'cnf_code': '',\n        'cluster_number': ''\n    }\n    validationMessages = {\n        'product_description': {\n            'required': 'Description is requiredd'\n        },\n        'cnf_code': {\n            'pattern': 'Must be a digit'\n        },\n        'cluster_number': {\n            'pattern': 'Must be a number'\n        }\n\n    }\n    setValues(): void {\n        this.offset = 0;\n        this.count = 0;\n        this.noData = null;\n        this.emptyField = null;\n\n\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n        this.product = this.prepareSaveProduct();\n        this.product.orderby = \"product_description\";\n        this.product.flag = this.flag;\n        this.product.offset = this.offset;\n\n\n        //console.log(this.product);\n        this.submitted = true;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/productFormRelink/form-relink.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { FormRelinkComponent }  from './form-relink.component';\nimport {FormRelinkRoutingModule} from './form-relink-routing.module'\nimport {SharedModule} from '../../shared/shared.module'\n import {PaginationModelModule} from '../../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nFormRelinkRoutingModule,\n\nBrowserModule,\nSharedModule,\nPaginationModelModule\n      \n       ],\n  declarations: [ \n\n    FormRelinkComponent\n    ],\n  exports: [\n    FormRelinkComponent\n   ]\n\n})\nexport class FormRelinkModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/productFormRelink/form-relink.module.ts","module.exports = \"\\n/*div.flex{\\n    display: flex;\\n}\\ndiv.flex > md-input-container, div.flex > md-select{\\n    flex: 1;\\n    margin: 0 7px;\\n    font-size: 15px;\\n}\\ndiv.flex > md-select{\\n    margin-bottom: 7px;\\n}*/\\n/*.DivHeader{\\n    position: relative;\\n    display: block;\\n    width: 100%;\\n    background-color: lightblue;\\n}*/\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n.DivHeader{\\n    position: relative;\\n}\\ndiv.bodycard{\\n    position: relative;\\n}\\n/*.row > div, .row > div  md-input-container, .row > div  md-select {\\n    width: 100%;\\n     margin: 0 7px;\\n     font-size: 15px;\\n     flex: 1;\\n}*/\\n.errorMessages{\\n\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n.tab{\\n    margin-top: 7px;\\n}\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n.form-control {\\n    width: 100% !important;\\n}\\n/*.ng-valid.ng-dirty:not(form){\\n    border-left: 5px solid #42A948;\\n}*/\\n.dateIcon{\\n\\n    position: absolute;\\ntop: 26px;\\n    right: 9px;\\n\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/salesForm/sales-form.component.css\n// module id = ./src/app/forms/salesForm/sales-form.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\">\\n  <div class=\\\"DivLogo\\\">\\n    Search Market Share\\n  </div>\\n  <mat-card style=\\\"background-color:  #ebf0fa; \\\">\\n    <div class=\\\"well2\\\">\\n\\n      <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"salesForm\\\">\\n\\n\\n        <div class=\\\"flex row\\\">\\n\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <label for=\\\"salesUpc\\\">Sales UPC</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesUpc\\\" placeholder=\\\"Sales UPC\\\" formControlName=\\\"salesUpc\\\">\\n            <div *ngIf=\\\"formErrors.salesUpc\\\" class=\\\"errorMessages\\\">\\n              <span class=\\\"textPosition\\\"> {{formErrors.salesUpc}}</span>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <label for=\\\"salesDescription\\\">Sales Description</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesDescription\\\" placeholder=\\\"Sales Description\\\" formControlName=\\\"salesDescription\\\">\\n          </div>\\n\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <label for=\\\"salesSource\\\">Sales Source</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesSource\\\" placeholder=\\\"Sales Source\\\" formControlName=\\\"salesSource\\\">\\n          </div>\\n\\n\\n        </div>\\n\\n        <div class=\\\"flex row\\\">\\n\\n\\n\\n          <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listSalesYear\\\">\\n            <label for=\\\"salesYear\\\">Sales Year</label>\\n            <select class=\\\"form-control\\\" id=\\\"salesYear\\\" formControlName=\\\"salesYear\\\">\\n              <option value=\\\"\\\" selected>Select a Sales Year</option>\\n              <option *ngFor=\\\"let class of listSalesYear;let i = index\\\" [value]=\\\"class.salesYear\\\">{{class.salesYear}}</option>\\n            </select>\\n          </div>\\n\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <label for=\\\"nielsenCategory\\\">Nielsen Category</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nielsenCategory\\\" placeholder=\\\"Sales Nielsen Category\\\" formControlName=\\\"nielsenCategory\\\">\\n          </div>\\n\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <label for=\\\"salesComment\\\">Sales Comment</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesComment\\\" placeholder=\\\"Sales Comment\\\" formControlName=\\\"salesComment\\\">\\n          </div>\\n\\n\\n        </div>\\n        <div class=\\\"flex row\\\">\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <label for=\\\"collectionDateFrom\\\">Collection Date From</label>\\n\\n            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"collectionDateFrom\\\" formControlName=\\\"collectionDateFrom\\\">\\n\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <label for=\\\"collectionDateTo\\\">Collection Date To</label>\\n\\n            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"collectionDateTo\\\" formControlName=\\\"collectionDateTo\\\">\\n\\n          </div>\\n\\n          <div class=\\\"form-group col-lg-4\\\">\\n            <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!salesForm.valid\\\">Search</button>\\n          </div>\\n\\n        </div>\\n\\n      </form>\\n\\n    </div>\\n  </mat-card>\\n\\n</div>\\n\\n<h2 *ngIf=\\\"emptyField\\\">\\n\\n  {{emptyField}}\\n</h2>\\n<h2 *ngIf=\\\"noData\\\">\\n\\n  {{noData}}\\n</h2>\\n<div *ngIf=\\\"isLoading\\\">\\n  <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n\\n<div *ngIf=\\\"serverDown\\\">\\n  Something happened on the server\\n</div>\\n<div *ngIf=\\\"count > 0\\\">\\n\\n  <ct-table [records]=\\\"tableData\\\" [caption]=\\\"'ROMYYY'\\\" [index]=\\\"index\\\" [flag]=\\\"direction[index]\\\" [settings]=\\\"settings\\\" (trigger)=\\\"sortBy($event)\\\">\\n\\n  </ct-table>\\n\\n</div>\\n<pagination [pageSize]=\\\"pageSizes\\\" [numberOfRecords]=\\\"count\\\" [(pageOffset)]=\\\"offset\\\" (offSetVal)=\\\"offSetVal($event)\\\">\\n</pagination>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/salesForm/sales-form.component.html\n// module id = ./src/app/forms/salesForm/sales-form.component.html\n// module chunks = main","import { Component, OnChanges, Input, ViewChild } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Params, SalesInputFields, Response, SalesData, salesYearList } from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\n//import { classification, FormValues } from '../../form-model';\nimport 'rxjs/add/operator/catch';\n\n// import { ProjectService } from './project-center/project.service';\n// import { Project, Person } from './project-center/model';\nimport { ColumnSetting } from '../../shared/layout.model'\nimport { PaginationComponent } from '../../pagination/pagination.component'\nimport { TableLayoutComponent } from '../../shared/table-layout.component'\nimport { retry } from 'rxjs/operator/retry';\n\n\n@Component({\n    selector: 'sales-form',\n    templateUrl: './sales-form.component.html',\n    styleUrls: ['./sales-form.component.css'],\n    providers: [SearchService]\n\n})\nexport class SalesFormComponent implements OnChanges {\n\n\n    tableData: SalesData[];\n  listSalesYear: salesYearList[];\n    submitted = false;\n    offset: number = 0;\n    sales: SalesInputFields;\n    isLoading: boolean = false;\n    serverDown: boolean = false;\n    settings: ColumnSetting[] = [\n        { primaryKey: 'salesUpc', header: 'Sales UPC' },\n        { primaryKey: 'salesDescription', header: 'Sales Description' },\n        { primaryKey: 'salesSource', header: 'Source' },\n        { primaryKey: 'salesYear', header: 'Sales Year' },\n        { primaryKey: 'nielsenCategory', header: 'Nielsen Category' },\n        { primaryKey: 'dollarVolume', header: 'Dollar Volume' },\n        { primaryKey: 'kiloVolume', header: 'Kilo Volume' }\n\n\n    ];\n    Order: string[] = ['sales_upc', 'sales_description', 'sales_source', 'sales_year', 'nielsen_category', 'dollar_volume', 'kilo_volume'];\n\n\n    count = 0;\n    pageSizes = 10;\n\n    index: number = 0;\n    flag: boolean = true;\n    direction: boolean[];\n    orderBy: string = '';\n    emptyField: string;\n    noData: string;\n\n\n    salesForm: FormGroup;\n\n    constructor(private fb: FormBuilder,\n        private searchService: SearchService) {\n\n        this.createForm();\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n\n    }\n\n\n            ngOnInit(): void {\n                       this.searchService.getSalesYearList().subscribe(response =>\n                {  \n\n                      const {data, message, status} = response;   \n                     this.listSalesYear = data.dataList;\n                \n\n                 }\n            );        \n   \n\n\n    }\n\n    ngOnChanges() {\n\n\n        this.salesForm.reset({\n            salesUpc: this.sales.salesUpc,\n            salesDescription: this.sales.salesDescription,\n            salesSource: this.sales.salesSource,\n            salesYear: this.sales.salesYear,\n            nielsenCategory: this.sales.nielsenCategory,\n            salesComment: this.sales.salesComment,\n            collectionDateFrom: this.sales.collectionDateFrom,\n            collectionDateTo: this.sales.collectionDateTo,\n        }\n        );\n\n    }\n\n    createForm() {\n        this.salesForm = this.fb.group({\n            salesUpc: ['', [Validators.pattern('\\\\d+')]],\n            salesDescription: '',\n            salesSource: '',\n            salesYear: ['', [\n                    Validators.pattern('\\\\d+'),\n                    Validators.maxLength(4),\n                    Validators.minLength(4)\n                    \n                    ]],\n            nielsenCategory: '',\n            salesComment: '',\n            collectionDateFrom: [''],\n            collectionDateTo: ''\n\n\n        });\n        this.salesForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.salesForm) { return; }\n        const form = this.salesForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n\n\n        this.setValues();\n\nthis.isLoading = true;\n        this.searchService.searchSales(JSON.stringify(this.sales))\n        .finally(() => {\n            this.isLoading=false;\n        })\n        .subscribe(response => {\n            const {data, message, status} = response;\n            if (status === 202) {\n                this.emptyField = message;\n                console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            }\n            else if(status === 200) {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n\n\n\n\n\n                for (var num = 0; num < this.settings.length; num++) {\n                    if (num === 0) {\n                        this.direction[num] = true;\n                    } else {\n                        this.direction[num] = false;\n                    }\n                }\n            }else if (status === 205){\n\n                this.emptyField = \"No query values entered\";\n                this.tableData = null; \n            } else if (status === 602){\n\n                this.emptyField = \"Invalid date(s) range\";\n                this.tableData = null; \n            }else{\n                this.noData = \"Something happened try again\";\n            }\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n\n\n\n        // this.ngOnChanges();\n    }\n\n    prepareSavesales(): SalesInputFields {\n\n        return this.salesForm.value;\n    }\n\n\n    offSetVal(n: number) {\n\n        this.offset = n;\n        this.sales.offset = n;\n        this.isLoading = true;\n        this.searchService.searchSales(JSON.stringify(this.sales)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n            \n\n            if (status === 202) {\n                this.emptyField = message;\n                console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n    }\n\n\n    sortBy(i: number) {\n        this.index = i;\n        this.flag = this.direction[i];\n        this.direction = this.direction.map((item, index) => i === index ? !this.direction[i] : false);\n        this.offset = 0;\n        this.sales.offset = 0;\n        this.sales.orderBy = this.Order[i];\n        this.sales.flag = this.direction[i];\n\n        console.log(JSON.stringify(this.sales));\n        this.isLoading = true;\n        this.searchService.searchSales(JSON.stringify(this.sales)).finally(()=> this.isLoading = false).subscribe(response => {\n            const {data, message, status} = response;\n\n            if (status === 202) {\n                this.emptyField = message;\n                console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n\n            }\n\n\n\n        }, (error) =>{\n            this.serverDown=true;\n          \n        });\n\n    }\n    formErrors = {\n        'salesYear': '',\n        'salesUpc': ''\n    }\n\n    validationMessages = {\n        'salesYear': {\n            'pattern': 'Invalid Sales Year'\n        },\n        'salesUpc': {\n            'pattern': 'Invalid Sales UPC',\n            'maxLength': 'Must be 4 digits',\n            'minLength': 'Must be 4 digits'\n        }\n\n    }\n\n    setValues(): void {\n        this.offset = 0;\n        this.count = 0;\n        this.noData = null;\n        this.emptyField = null;\n\n\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n        this.sales = this.prepareSavesales();\n        var date = new DatePipe('en-US');\n\n        this.sales.collectionDateFrom = this.sales.collectionDateFrom && this.sales.collectionDateFrom != \"\"? this.sales.collectionDateFrom: null;\n        this.sales.collectionDateTo = this.sales.collectionDateTo && this.sales.collectionDateTo != \"\"? this.sales.collectionDateTo: null;\n\n\n        this.sales.orderBy = this.Order[0];\n        this.sales.flag = this.flag;\n        this.sales.offset = this.offset;\n        this.submitted = true;\n    }\n\n  \n\n \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/salesForm/sales-form.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { TableLayoutComponent } from '../../shared/table-layout.component'\n\nimport { SalesFormComponent }  from './sales-form.component';\nimport {SharedModule} from '../../shared/shared.module'\n import {PaginationModelModule} from '../../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\n\nBrowserModule,\nSharedModule,\nPaginationModelModule,\nMatDatepickerModule\n      \n       ],\n  declarations: [ \n\n    SalesFormComponent\n    ],\n  exports: [\n    SalesFormComponent\n   ]\n\n})\nexport class SalesFormModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/salesForm/sales-form.module.ts","module.exports = \"\\n.DivLogo{\\n\\n    background-color: lightblue;\\n    padding: 15px 15px;\\n    border: 2px solid lightblue;\\n\\n}\\n.DivHeader{\\n    position: relative;\\n}\\ndiv.bodycard{\\n    position: relative;\\n    padding-bottom:70px;\\n}\\n.errorMessages{\\n\\n\\n    color: red;\\n    font-size: 1.1em;\\n    width: 100%;\\n    margin-left: 1px;\\n   \\n\\n}\\n.tab{\\n    margin-top: 7px;\\n}\\n.ng-invalid:not(form){\\n    border-left: 5px solid #a94442;\\n}\\n.form-control {\\n    width: 100% !important;\\n}\\n.dateIcon{\\n\\n    position: absolute;\\ntop: 26px;\\n    right: 9px;\\n\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/searchAllForm/search-all.component.css\n// module id = ./src/app/forms/searchAllForm/search-all.component.css\n// module chunks = main","module.exports = \"<div class=\\\"DivHeader\\\">\\n    <div class=\\\"DivLogo\\\">\\n        Search All\\n    </div>\\n\\n    <div class=\\\"bodycard\\\">\\n        <mat-card style=\\\"background-color: #f5f5f5; padding: 30px;\\\">\\n\\n\\n            <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"labelForm\\\">\\n                <div class=\\\"well\\\">\\n\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"productDescription\\\">Product Description</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productDescription\\\" placeholder=\\\"Product Description\\\" formControlName=\\\"product_description\\\">\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"productManufacturer\\\">Product Manufactuer </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productManufacturer\\\" placeholder=\\\"Product Manufactuer\\\" formControlName=\\\"product_manufacturer\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"productBrand\\\">Product Brand</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productBrand\\\" placeholder=\\\"Product Brand\\\" formControlName=\\\"product_brand\\\">\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"classificationName\\\">Classification Name</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classification_name\\\" placeholder=\\\"Classification Name\\\" formControlName=\\\"classification_name\\\">\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listOfClass\\\">\\n                            <label for=\\\"classificationNumber\\\">Classification Number</label>\\n                            <select class=\\\"form-control\\\" id=\\\"classificationNumber\\\" formControlName=\\\"classification_number\\\">\\n                                <option value=\\\"\\\" selected>Select a Classification Number</option>\\n                                <option *ngFor=\\\"let classifi of listOfClass;let i = index\\\" [value]=\\\"classifi.classification_number\\\">{{classifi.classification_number}}</option>\\n\\n\\n                            </select>\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"classificationType\\\">Classification Type </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"classificationType\\\" placeholder=\\\"Enter the Classification Type\\\" formControlName=\\\"classification_type\\\">\\n\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n\\n                            <label for=\\\"cnfCode\\\">CNF CODE </label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"cnfCode\\\" placeholder=\\\"CNF CODE\\\" formControlName=\\\"cnf_code\\\">\\n\\n                            <div *ngIf=\\\"formErrors.cnf_code\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.cnf_code}}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"clusterNumber\\\">Cluster Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"clusterNumber\\\" placeholder=\\\"Cluster Number\\\" formControlName=\\\"cluster_number\\\">\\n                            <div *ngIf=\\\"formErrors.cluster_number\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.cluster_number}}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"productComment\\\">Product Comment</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productComment\\\" placeholder=\\\"Product Comment\\\" formControlName=\\\"product_comment\\\">\\n\\n                        </div>\\n                    </div>\\n\\n                </div>\\n\\n                <div class=\\\"well\\\" style=\\\"background-color:  #ebf0fa;\\\">\\n\\n                    <div class=\\\"flex row\\\">\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"salesUpc\\\">Sales UPC</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesUpc\\\" placeholder=\\\"Sales UPC\\\" formControlName=\\\"sales_upc\\\">\\n                            <div *ngIf=\\\"formErrors.sales_upc\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.sales_upc}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"salesDescription\\\">Sales Description</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesDescription\\\" placeholder=\\\"Sales Description\\\" formControlName=\\\"sales_description\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\" *ngIf=\\\"listSalesYear\\\">\\n                            <label for=\\\"salesYear\\\">Sales Year</label>\\n                            <select class=\\\"form-control\\\" id=\\\"salesYear\\\" formControlName=\\\"sales_year\\\">\\n                                <option value=\\\"\\\" selected>Select a Sales Year</option>\\n                                <option *ngFor=\\\"let class of listSalesYear;let i = index\\\" [value]=\\\"class.salesYear\\\">{{class.salesYear}}</option>\\n                            </select>\\n                        </div>\\n\\n                    </div>\\n\\n                    <div class=\\\"flex row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"nielsenCategory\\\">Nielsen Category</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nielsenCategory\\\" placeholder=\\\"Sales Nielsen Category\\\" formControlName=\\\"nielsen_category\\\">\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"salesSource\\\">Sales Source</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesSource\\\" placeholder=\\\"Sales Source\\\" formControlName=\\\"sales_source\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"sales_collection_date_from\\\">Collection Date From</label>\\n\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"sales_collection_date_from\\\" formControlName=\\\"sales_collection_date_from\\\">\\n\\n                        </div>\\n\\n\\n\\n                    </div>\\n                    <div class=\\\"flex row\\\">\\n\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"sales_collection_date_to\\\">Collection Date To</label>\\n\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"sales_collection_date_to\\\" formControlName=\\\"sales_collection_date_to\\\">\\n\\n                        </div>\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"dollarRankFrom\\\">Dollar Rank From</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dollarRankFrom\\\" placeholder=\\\"Dollar Rank From\\\" formControlName=\\\"dollar_rank_from\\\">\\n                            <div *ngIf=\\\"formErrors.dollar_rank_from\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.dollar_rank_from}}</span>\\n                            </div>\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"dollarRankTo\\\">Dollar Rank To</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dollarRankTo\\\" placeholder=\\\"Dollar Rank To\\\" formControlName=\\\"dollar_rank_to\\\">\\n                            <div *ngIf=\\\"formErrors.dollar_rank_to\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.dollar_rank_to}}</span>\\n                            </div>\\n\\n\\n\\n\\n                        </div>\\n\\n\\n                    </div>\\n\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"salesComment\\\">Sales Comment</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"salesComment\\\" placeholder=\\\"Sales Comment\\\" formControlName=\\\"sales_comment\\\">\\n                        </div>\\n                    </div>\\n\\n\\n                </div>\\n\\n                <!--End of the second block-->\\n                <!--Start of the second block Label Inputs Fields-->\\n\\n                <div class=\\\"well\\\" style=\\\"background-color: hsl(60, 100%, 98%)\\\">\\n\\n                    <div class=\\\"flex row\\\">\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"labelUpc\\\">Label UPC</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelUpc\\\" placeholder=\\\"Label UPC\\\" formControlName=\\\"label_upc\\\">\\n                            <div *ngIf=\\\"formErrors.label_upc\\\" class=\\\"errorMessages\\\">\\n                                <span class=\\\"textPosition\\\"> {{formErrors.label_upc}}</span>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"labelDescription\\\">Label Description</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelDescription\\\" placeholder=\\\"Label Description\\\" formControlName=\\\"label_description\\\">\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"labelSource\\\">Label Source</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelSource\\\" placeholder=\\\"Source\\\" formControlName=\\\"label_source\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\" row\\\">\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"labelIngredients\\\">Ingredients</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelIngredients\\\" placeholder=\\\"Ingredients\\\" formControlName=\\\"label_ingredients\\\">\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"label_collection_date_from\\\">Collection Date From</label>\\n\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"label_collection_date_from\\\" formControlName=\\\"label_collection_date_from\\\">\\n\\n                        </div>\\n\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"label_collection_date_to\\\">Collection Date To</label>\\n\\n                            <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"label_collection_date_to\\\" formControlName=\\\"label_collection_date_to\\\">\\n\\n                        </div>\\n                    </div>\\n                    <div class=\\\" row\\\">\\n                        <div class=\\\"form-group col-lg-4\\\">\\n                            <label for=\\\"labelComment\\\">Label Source</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"labelComment\\\" placeholder=\\\"Label Comment\\\" formControlName=\\\"label_comment\\\">\\n                        </div>\\n\\n                    </div>\\n                    <div style=\\\"float:right;\\\">\\n                        <button style=\\\"float:right; margin-top: 28px; width:140px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!labelForm.valid\\\">Search</button>\\n                    </div>\\n                </div>\\n\\n\\n\\n\\n            </form>\\n\\n\\n        </mat-card>\\n    </div>\\n</div>\\n\\n<h2 *ngIf=\\\"emptyField\\\">\\n\\n    {{emptyField}}\\n</h2>\\n<h2 *ngIf=\\\"noData\\\">\\n\\n    {{noData}}\\n</h2>\\n<div *ngIf=\\\"isLoading\\\">\\n    <mat-progress-bar mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n\\n\\n<div *ngIf=\\\"serverDown\\\">\\n    Something happened on the server\\n</div>\\n<div *ngIf=\\\"tableData\\\">\\n\\n    <ct-table [records]=\\\"tableData\\\" [caption]=\\\"'ROMYYY'\\\" [index]=\\\"index\\\" [flag]=\\\"direction[index]\\\" [settings]=\\\"settings\\\" (trigger)=\\\"sortBy2($event)\\\">\\n\\n    </ct-table>\\n</div>\\n\\n<div *ngIf=\\\"tableData\\\">\\n    <pagination [pageSize]=\\\"pageSizes\\\" [numberOfRecords]=\\\"count\\\" [(pageOffset)]=\\\"offset\\\" (offSetVal)=\\\"offSetVal($event)\\\">\\n    </pagination>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/searchAllForm/search-all.component.html\n// module id = ./src/app/forms/searchAllForm/search-all.component.html\n// module chunks = main","import { Component, OnChanges, Input, ViewChild } from '@angular/core';\nimport { SearchAllInputFields, Response, salesYearList, classificationList, SearchAllResponse } from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ColumnSetting } from '../../shared/layout.model'\n\n\n@Component({\n    selector: 'search-all-comp',\n    templateUrl: './search-all.component.html',\n    styleUrls: ['./search-all.component.css'],\n    providers: [SearchService]\n\n})\nexport class SearchAllComponent implements OnChanges {\n\n\n    tableData: SearchAllResponse[];\n    isLoading: boolean = false;\n    submitted = false;\n    offset: number = 0;\n    label: SearchAllInputFields;\n\n    settings: ColumnSetting[] = [\n        { primaryKey: 'product_description', header: 'Product Description' },\n        { primaryKey: 'product_brand', header: 'Product Brand' },\n        { primaryKey: 'product_manufacturer', header: 'Produt Manufacturer' },\n        { primaryKey: 'classification_number', header: 'Classification Number' },\n        { primaryKey: 'classification_name', header: 'Classification Name' },\n        { primaryKey: 'classification_type', header: 'Classification Type' },\n        { primaryKey: 'cnf_code', header: 'CNF CODE' },\n        { primaryKey: 'cluster_number', header: 'Cluster Number' },\n        { primaryKey: 'product_comment', header: 'Product Comment' },\n\n        { primaryKey: 'sales_upc', header: 'Sales UPC' },\n        { primaryKey: 'sales_description', header: 'Sales Description' },\n        { primaryKey: 'sales_year', header: 'Sales Year' },\n        { primaryKey: 'nielsen_category', header: 'Nielsen Category' },\n        { primaryKey: 'sales_source', header: 'Sales Source' },\n        { primaryKey: 'sales_collection_date', header: 'Sales Collection Date' },\n        { primaryKey: 'dollar_rank', header: 'Dollar Rank' },\n        { primaryKey: 'sales_comment', header: 'Sales Comment' },\n        { primaryKey: 'label_upc', header: 'Label UPC' },\n\n        { primaryKey: 'label_description', header: 'Label Description' },\n        { primaryKey: 'label_source', header: 'Label Source' },\n        { primaryKey: 'label_ingredients', header: 'Label Ingredients' },\n        { primaryKey: 'label_collection_date', header: 'Label Collection Date' },\n        { primaryKey: 'label_comment', header: 'Label Comment' }\n\n    ];\n\n\n\n    listOfClass: classificationList[];\n    listSalesYear: salesYearList[];\n    count = 0;\n    pageSizes = 10;\n    index: number = 0;\n    flag: boolean = true;\n    direction: boolean[];\n    orderby: string = '';\n    emptyField: string;\n    noData: string;\n    serverDown: boolean = false;\n\n    labelForm: FormGroup;\n\n    constructor(private fb: FormBuilder,\n        private searchService: SearchService) {\n\n        this.createForm();\n\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n\n    }\n\n    ngOnInit(): void {\n        this.searchService.getClassificationLatest().subscribe(response => {\n\n            const { data, message, status } = response;\n            this.listOfClass = data.dataList;\n\n\n        }\n        );\n        this.searchService.getSalesYearList().subscribe(response => {\n\n            const { data, message, status } = response;\n            this.listSalesYear = data.dataList;\n\n\n        }\n        );\n    }\n\n\n\n\n\n    ngOnChanges() {\n\n        this.labelForm.reset({\n            product_description: this.label.product_description,\n            product_brand: this.label.product_brand,\n            product_manufacturer: this.label.product_manufacturer,\n            classification_number: this.label.classification_number,\n            classification_name: this.label.classification_name,\n            classification_type: this.label.classification_type,\n            cnf_code: this.label.cnf_code,\n            cluster_number: this.label.cluster_number,\n            product_comment: this.label.product_comment,\n            sales_upc: this.label.sales_upc,\n            sales_description: this.label.sales_description,\n\n            sales_year: this.label.sales_year,\n            nielsen_category: this.label.nielsen_category,\n            sales_source: this.label.sales_source,\n            sales_collection_date_from: this.label.sales_collection_date_from,\n            sales_collection_date_to: this.label.sales_collection_date_to,\n            dollar_rank_from: this.label.dollar_rank_from,\n            dollar_rank_to: this.label.dollar_rank_to,\n            sales_comment: this.label.sales_comment,\n            label_upc: this.label.label_upc,\n            label_description: this.label.label_description,\n            label_source: this.label.label_source,\n            label_ingredients: this.label.label_ingredients,\n            label_collection_date_from: this.label.label_collection_date_from,\n            label_collection_date_to: this.label.label_collection_date_to,\n            label_comment: this.label.label_comment\n        }\n        );\n\n    }\n\n    createForm() {\n        this.labelForm = this.fb.group({\n            product_description: '',\n            product_brand: '',\n            product_manufacturer: '',\n            classification_number: '',\n            classification_name: '',\n            classification_type: '',\n            cnf_code: ['', [Validators.pattern('\\\\d+')]],\n            cluster_number: ['', [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            product_comment: '',\n            sales_year: ['', [\n                Validators.pattern('\\\\d+'),\n                Validators.maxLength(4),\n                Validators.minLength(4)\n\n            ]],\n            sales_description: '',\n            sales_upc: ['', [Validators.pattern('\\\\d+')]],\n            nielsen_category: '',\n            sales_source: '',\n            sales_collection_date_from: '',\n            sales_collection_date_to: '',\n            dollar_rank_from: ['', [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            dollar_rank_to: ['', [Validators.pattern('^[0-9]+([,.][0-9]+)?$')]],\n            sales_comment: '',\n            label_upc: ['', [Validators.pattern('\\\\d+')]],\n            label_description: '',\n            label_source: '',\n            label_ingredients: '',\n            label_collection_date_from: '',\n            label_collection_date_to: '',\n            label_comment: ''\n\n\n\n        });\n        this.labelForm.valueChanges\n            .subscribe(data => this.onValueChanged(data));\n\n        this.onValueChanged();\n    }\n\n\n\n\n    onValueChanged(data?: any) {\n        if (!this.labelForm) { return; }\n        const form = this.labelForm;\n\n        for (const field in this.formErrors) {\n            this.formErrors[field] = '';\n            const control = form.get(field);\n\n            if (control && control.dirty && !control.valid) {\n                const messages = this.validationMessages[field];\n                for (const key in control.errors) {\n                    this.formErrors[field] += messages[key] + ' ';\n                }\n            }\n        }\n\n    }\n    onSubmit() {\n\n\n        this.setValues();\n\n        this.isLoading = true;\n        this.searchService.searchAll(JSON.stringify(this.label)).finally(() => this.isLoading = false).subscribe(response => {\n            const { data, message, status } = response;\n\n            if (status === 202) {\n                this.emptyField = message;\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n            }\n            else if (status === 200) {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n\n\n\n\n\n                for (var num = 0; num < this.settings.length; num++) {\n                    if (num === 0) {\n                        this.direction[num] = true;\n                    } else {\n                        this.direction[num] = false;\n                    }\n                }\n            } else if (status === 205) {\n\n                this.emptyField = \"No query values entered\";\n                this.tableData = null;\n            } else if (status === 602) {\n\n                this.emptyField = \"Invalid date(s) range\";\n                this.tableData = null;\n            } else {\n                this.noData = \"Something happened\";\n                this.tableData = null;\n            }\n\n        }, (error) => {\n            this.serverDown = true;\n            this.tableData = null;\n\n        });\n\n\n\n    }\n\n    prepareSaveProduct(): SearchAllInputFields {\n        return this.labelForm.value;\n    }\n\n\n    offSetVal(n: number) {\n        this.offset = n;\n        this.label.offset = n;\n\n        this.isLoading = true;\n        this.searchService.searchAll(JSON.stringify(this.label)).finally(() => {\n            this.isLoading = false;\n        }\n        ).subscribe(response => {\n            const { data, message, status } = response;\n            this.isLoading = false;\n\n            if (status === 202) {\n                this.emptyField = message;\n                // console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n\n\n            }\n\n\n\n        }, (error) => {\n            this.serverDown = true;\n\n        });\n    }\n\n\n    sortBy2(i: number) {\n        this.index = i;\n        this.flag = this.direction[i];\n        this.direction = this.direction.map((item, index) => i === index ? !this.direction[i] : false);\n\n        this.isLoading = true;\n        this.offset = 0;\n        this.label.offset = 0;\n        this.label.orderby = this.settings[i].primaryKey;\n        this.label.flag = this.direction[i];\n        this.isLoading = false;\n        this.searchService.searchAll(JSON.stringify(this.label)).finally(() => this.isLoading = false).subscribe(response => {\n            const { data, message, status } = response;\n\n            if (status === 205) {\n                this.emptyField = message;\n                //console.log(message);\n                this.tableData = null;\n            } else if (status === 203) {\n\n                this.noData = message;\n\n                this.tableData = null;\n            } else if (status === 204) {\n                this.noData = message;\n\n                this.tableData = null;\n\n            } else {\n                this.emptyField = null;\n                this.count = data.count;\n                this.tableData = data.dataList;\n                //console.log(\"Data received\", data.dataList);\n\n            }\n\n\n\n        }, (error) => {\n            this.serverDown = true;\n\n        });\n\n    }\n\n    formErrors = {\n        'product_description': '',\n        'cnf_code': '',\n        'cluster_number': '',\n        'sales_upc': '',\n        'sales_year': '',\n        'dollar_rank_from': '',\n        'dollar_rank_to': '',\n        'label_upc': ''\n    }\n    validationMessages = {\n\n        'cnf_code': {\n            'pattern': 'Must be digits'\n        },\n        'cluster_number': {\n            'pattern': 'Must be a number'\n        },\n        'dollar_rank_from': {\n            pattern: 'must be a number'\n        },\n        'dollar_rank_to': {\n            pattern: 'must be a number'\n        },\n        'sales_upc': {\n            pattern: 'must be digits'\n        },\n        'label_upc': {\n            pattern: 'must be digits'\n        },\n        'sales_year': {\n            'pattern': 'Invalid Sales UPC',\n            'maxLength': 'Must be 4 digits',\n            'minLength': 'Must be 4 digits'\n        }\n\n    }\n    setValues(): void {\n        this.offset = 0;\n        this.count = 0;\n        this.noData = null;\n        this.emptyField = null;\n\n\n        this.direction = [];\n        this.direction[this.index] = false;\n        this.index = 0;\n        this.flag = true;\n\n        this.label = this.prepareSaveProduct();\n\n        this.label.label_collection_date_from = this.label.label_collection_date_from && this.label.label_collection_date_from != \"\" ? this.label.label_collection_date_from : null;\n        this.label.label_collection_date_to = this.label.label_collection_date_to && this.label.label_collection_date_to != \"\" ? this.label.label_collection_date_to : null;\n\n        this.label.sales_collection_date_from = this.label.sales_collection_date_from && this.label.sales_collection_date_from != \"\" ? this.label.sales_collection_date_from : null;\n        this.label.sales_collection_date_to = this.label.sales_collection_date_to && this.label.sales_collection_date_to != \"\" ? this.label.sales_collection_date_to : null;\n\n        this.label.orderby = \"product_description\";\n        this.label.flag = this.flag;\n        this.label.offset = this.offset;\n        this.submitted = true;\n    }\n\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/searchAllForm/search-all.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';import { BrowserModule } from '@angular/platform-browser';\nimport { TableLayoutComponent } from '../../shared/table-layout.component'\n\nimport { SearchAllComponent }  from './search-all.component';\nimport {SharedModule} from '../../shared/shared.module'\n import {PaginationModelModule} from '../../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\n\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatCardModule,\nMatProgressBarModule,\nBrowserModule,\nSharedModule,\nPaginationModelModule,\nMatDatepickerModule\n      \n       ],\n  declarations: [ \n\n    SearchAllComponent\n    ],\n  exports: [\n    SearchAllComponent\n   ]\n\n})\nexport class SearchAllModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/searchAllForm/search-all.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { ImportCsvComponent }    from './import-csv.component';\n \nconst importCsvRoutes: Routes = [\n  { path: 'importFile',  component: ImportCsvComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(importCsvRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ImportCsvRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/imports/importCSV/import-csv-routing.module.ts","module.exports = \"td, th {\\n    padding: 9px;\\n    border: none;\\n}\\nth{\\n    text-align: left;\\n\\n}\\ntr:nth-child(even){\\n    background-color: #f0f5f5;\\n}\\ntable{\\n    border-collapse: collapse;\\n        width: 100%;\\n        margin-top: 12px;\\n    \\n}\\n/* tr:last-child, th{\\n  border-bottom:   1px solid lightgray;\\n} */\\ntd:last-child{\\n    text-align: right;\\n}\\ntr:nth-child(1){\\n    border-top:   1px solid lightgray;\\n}\\ntd:nth-child(1){\\n    font-weight: bolder;\\n}\\n.selected{\\n    font-weight: bold;\\n    color: crimson;\\n}\\n.selectedSales{\\n    font-weight: bold;\\n    color: darkblue;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/imports/importCSV/import-csv.component.css\n// module id = ./src/app/imports/importCSV/import-csv.component.css\n// module chunks = main","module.exports = \"\\n<div style=\\\"background-color:white; padding:20px; border:1px solid lightgray; background-color:transparent\\\">\\n    <span style=\\\"margin-left:10px; font-size:1.5em\\\">Import File</span>\\n\\n    <div class=\\\"row\\\" style=\\\"display: flex; min-height:300px;flex-wrap: wrap\\\">\\n        \\n        \\n        <div style=\\\"flex: 1 0 300px; background-color:white; border:1.5px solid lightgray;margin:10px;\\\">\\n\\n            <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"importCsvFileForm\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\" style=\\\"margin-top:13%\\\">\\n\\n\\n\\n                <div class=\\\"form-group\\\">\\n                        \\n                        <label class=\\\"control-label col-sm-3 required\\\"  for=\\\"Type\\\">Type: </label>\\n                        <div class=\\\"col-sm-9\\\">\\n                        <select class=\\\"form-control\\\" id=\\\"Type\\\" formControlName=\\\"type\\\" style=\\\"width:100%\\\" required (change)=\\\"updateSelectedValue($event.target.value)\\\">\\n        \\n                            <option [value]=\\\"1\\\">Market Share</option>\\n                            <option [value]=\\\"2\\\">Label</option>\\n                           \\n        \\n                        </select>\\n                </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label col-sm-3\\\" for=\\\"file\\\">Select a file:</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <input type=\\\"file\\\" class=\\\"form-control\\\" #fileInput name=\\\"csv_file\\\" id=\\\"file\\\" formControlName=\\\"csv_file\\\"  (change)=\\\"validateFile($event)\\\" style=\\\"width:100%\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                            <button style=\\\"float:right; margin-right:20px; width:80px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!importCsvFileForm.valid || submitted || !validFile || !validSize\\\">Import</button>\\n\\n                    </div>\\n\\n            </form>\\n\\n\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\" style=\\\"margin:6px\\\">\\n                    <strong>Error!</strong> {{errorMessage}}\\n                  </div>\\n                  <div *ngIf=\\\"isLoading\\\">\\n                        \\n                        <progress-spinner></progress-spinner>\\n                      </div>\\n                      \\n        </div>\\n        <div style=\\\"flex: 1 0 300px; background-color:white;  border:1.5px solid lightgray; margin:10px; \\\">\\n            <div style=\\\"margin-left:10px; font-size:1.5em; font-weight:bolder; margin-top: 12px;\\\">Required Format</div>\\n\\n            <table>\\n                <tr>\\n                    <td >Max File Size</td>\\n                    <td [ngClass]=\\\"{'selected': currentlySelectedValue == 2,'selectedSales': currentlySelectedValue == 1}\\\"><span *ngIf=\\\"sizeOfFile\\\" >{{sizeOfFile}}</span></td>\\n                </tr>\\n                <tr>\\n                    <td>Supported File Type:</td>\\n                    <td>CSV</td>\\n                </tr>\\n                <tr>\\n                    <td>Character Encoding: </td>\\n                    <td>UTF-8</td>\\n                </tr>\\n                <tr>\\n                    <td>Delimiter</td>\\n                    <td>Commat (,)</td>\\n                </tr>\\n                <tr>\\n                    <td>Has Column Header?</td>\\n                    <td>Yes</td>\\n                </tr>\\n            </table>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/imports/importCSV/import-csv.component.html\n// module id = ./src/app/imports/importCSV/import-csv.component.html\n// module chunks = main","import { Component, OnChanges, Input, Output, ViewChild} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { saveAs } from 'file-saver/FileSaver';\nimport { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions, ResponseContentType } from '@angular/http';\nimport 'rxjs/add/operator/retry';\nimport 'rxjs/add/operator/retryWhen';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/operator/timeout';\n\n\n\n\n\nexport const saveFile = (blobContent: Blob, fileName: string) => {\n    const blob = new Blob([blobContent], { type: 'application/octet-stream' });\n    saveAs(blob, fileName);\n};\nconst maxFileSizeSales = 2046976;\nconst maxFileSizeLabel = 599040;\n\nexport const getFileNameFromResponseContentDisposition = (res: Response) => {\n    const contentDisposition = res.headers.get('content-disposition') || '';\n    const matches = /filename=([^;]+)/ig.exec(contentDisposition);\n    const fileName = (matches[1] || 'untitled').trim();\n   \n    return fileName;\n};\n\n@Component({\n    selector: 'import-csv',\n    templateUrl: './import-csv.component.html',\n    styleUrls: ['./import-csv.component.css']\n\n\n})\n@Injectable()\nexport class ImportCsvComponent {\n\n    @Input() flag: number;\n    importCsvFileForm: FormGroup;\n    isLoading: boolean = false;\n    submitted = false;\n    serverDown: boolean = false;\n    errorMessage: string = null;\n    file: File;\n    validFile: boolean;\n    validSize: boolean;\n    sizeOfFile: string = \"2 Mb\";\n    currentlySelectedValue: number = 1;\n    currentMaxSize:  number = maxFileSizeSales;\n    //this.importCsvFileForm.controls['type']\n\n\n\n    @ViewChild('fileInput') fileInput;\n\n    constructor(private fb: FormBuilder, private createRecordService: CreateRecordService,  private http: Http) {\n        this.createForm();\n        this.importCsvFileForm.controls['type'].setValue(1);\n    }\n\n\n\n    createForm() {\n        this.importCsvFileForm = this.fb.group({\n            csv_file: null,\n            type: ''\n        });\n\n    }\n\n    onSubmit() {\n        \n       const options = new RequestOptions({responseType: ResponseContentType.Blob });\n       // const header =  new Headers({ 'Content-Type: 'multipart/form-data' });\n      \n\n       let headers = new Headers();\n      //headers.append('Content-Type', 'multipart/form-data');\n       headers.append('Accept', 'text/plain');\n      // let options = new RequestOptions({ headers: headers });\n      let fileBrowser = this.fileInput.nativeElement;\n       let formData:FormData = new FormData();\n       formData.append('csv_file', fileBrowser.files[0], fileBrowser.files[0].name);\n        this.submitted = true;\n        this.isLoading = true\n        var importValue = this.importCsvFileForm.controls['type'].value == '1'? 'importMarketShare': (this.importCsvFileForm.controls['type'].value == '2'?'importLabel':null);\n        \n  console.log(\"en effet\");\n  console.log(formData ,options);\n        this.http.post(`http://localhost:8080/fcdr-rest-service/rest/ImportService/${importValue}`, formData, options)\n            .timeout(5000)\n                .retryWhen(errors => {\n                    return errors.scan(Attemptcount =>{\n                            Attemptcount++;\n                        if(Attemptcount < 4){\n                            console.log('Attemp ',Attemptcount);\n                            return Attemptcount;\n\n                        }else{\n                            throw errors;\n                        }\n                    },0).delay(5000)\n                })\n                .map( r => r.blob())\n                .finally(() => {this.isLoading = false; this.submitted = false;})\n                .subscribe (response => {\n\n           //this.downloadFile(response);\n            //const fileName = getFileNameFromResponseContentDisposition(res );\n             saveFile(response, \"importReport.txt\");\n             this.importCsvFileForm.controls['csv_file'].setValue(null);\n             this.validateSize();\n        }\n        , (error) => {\n                this.errorMessage = \"Can't access the server at this time\";\n                this.serverDown = true;\n                this.importCsvFileForm.controls['csv_file'].setValue(null);\n                this.validateSize();\n            });\n           \n\n    }\n\n    downloadFile(data: Response){\n        var blob = new Blob([data], { type: 'text/plain' });\n        var url= window.URL.createObjectURL(blob);\n        window.open(url);\n      }\n    validateFile(input: EventTarget) {\n        \n        this.validFile = true;\n        this.validSize = true;\n\n\n        let eventObj: MSInputMethodContext = <MSInputMethodContext> input;\n        let target: HTMLInputElement = <HTMLInputElement> eventObj.target;\n        let files: FileList = target.files;\n        this.file = files[0];\n        \n        this.errorMessage = null;\n        if(this.file == undefined) return;\n        if(this.file.type != \"text/csv\" || this.file.name.split('.').pop().toLowerCase() != 'csv'){\n            this.validFile = false;\n            this.errorMessage = \"Must be a CSV file\";\n            return;\n\n        }else{\n        if (this.file.size > this.currentMaxSize){\n            this.validSize= false;\n            this.errorMessage = \"File is too big\";\n        }else if (this.file.size < 1){\n            //this.validSize= false;\n           // this.errorMessage = \"File is too small\";\n        }\n    }\n}\nupdateSelectedValue(n: number){\n    console.log(n, \"is the selected value\");\n    this.currentlySelectedValue = n;\n    if(n == 2){\n        this.sizeOfFile = \"585 kb\";\n        this.currentMaxSize = maxFileSizeLabel;\n    }else if(n == 1){\n        this.sizeOfFile = \"2 Mb\";\n        this.currentMaxSize = maxFileSizeSales;\n    }\n    console.log(this.currentMaxSize,\"is the current max\");\n    this.validateSize();\n}\n\n// private prepareSave(): FormData {\n//     let input = new FormData();\n//     input.append('csv_file', this.importCsvFileForm.get('csv_file').value);\n//     input.append('type', this.importCsvFileForm.get('type').value);\n//     return input;\n//   }\n\n  validateSize(){\n      \n    let fileBrowser = this.fileInput.nativeElement;\n  \n      if(fileBrowser.files[0]){\n        this.errorMessage = null;\n        this.validSize= true;\n        if (fileBrowser.files[0].size > this.currentMaxSize || fileBrowser.files[0].size < 1){\n            this.validSize= false;\n            this.errorMessage = \"File is too big\";\n        }\n      }else{\n        this.validSize= false;\n        this.validFile = false;\n          \n      }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/imports/importCSV/import-csv.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ImportCsvComponent }  from './import-csv.component';\nimport {ImportCsvRoutingModule} from './import-csv-routing.module'\n import {PaginationModelModule} from '../../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\nimport {ProgressSpinnerModule} from '../../progressSpinner/progress-spinner.module'\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatProgressBarModule,\nImportCsvRoutingModule,\nProgressSpinnerModule,\nBrowserModule,\nPaginationModelModule\n      \n       ],\n  declarations: [ \n\n    ImportCsvComponent\n    ],\n  exports: [\n    ImportCsvComponent\n   ]\n\n})\nexport class ImportCsvModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/imports/importCSV/import-csv.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \nimport { ImportImagesComponent }    from './import-images.component';\n \nconst importImagesRoutes: Routes = [\n  { path: 'importImages',  component: ImportImagesComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(importImagesRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ImportImagesRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/imports/importImages/import-images-routing.module.ts","module.exports = \"td, th {\\n    padding: 9px;\\n    border: none;\\n}\\nth{\\n    text-align: left;\\n\\n}\\ntr:nth-child(even){\\n    background-color: #f0f5f5;\\n}\\ntable{\\n    border-collapse: collapse;\\n        width: 100%;\\n        margin-top: 12px;\\n    \\n}\\n/* tr:last-child, th{\\n  border-bottom:   1px solid lightgray;\\n} */\\ntd:last-child{\\n    text-align: right;\\n}\\ntr:nth-child(1){\\n    border-top:   1px solid lightgray;\\n}\\ntd:nth-child(1){\\n    font-weight: bolder;\\n}\\n.selected{\\n    font-weight: bold;\\n    color: crimson;\\n}\\n.selectedSales{\\n    font-weight: bold;\\n    color: darkblue;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/imports/importImages/import-images.component.css\n// module id = ./src/app/imports/importImages/import-images.component.css\n// module chunks = main","module.exports = \"\\n<div style=\\\"background-color:white; padding:20px; border:1px solid lightgray; background-color:transparent\\\">\\n    <span style=\\\"margin-left:10px; font-size:1.5em\\\">Import images</span>\\n\\n    <div class=\\\"row\\\" style=\\\"display: flex; min-height:300px;flex-wrap: wrap\\\">\\n        \\n        \\n        <div style=\\\"flex: 1 0 300px; background-color:white; border:1.5px solid lightgray;margin:10px;\\\">\\n\\n            <form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"importImagesForm\\\" enctype=\\\"multipart/form-data\\\" class=\\\"form-horizontal\\\" style=\\\"margin-top:13%\\\">\\n\\n\\n\\n      \\n                    <div class=\\\"form-group\\\">\\n                        <label class=\\\"control-label col-sm-3\\\" for=\\\"file\\\">Select a file:</label>\\n                        <div class=\\\"col-sm-9\\\">\\n                            <input type=\\\"file\\\" class=\\\"form-control\\\" #fileInput name=\\\"image\\\" id=\\\"file\\\" formControlName=\\\"image\\\"  (change)=\\\"validateFile($event)\\\" style=\\\"width:100%\\\" multiple accept=\\\".jpg, .jpeg, .png\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                            <button style=\\\"float:right; margin-right:20px; width:80px\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!importImagesForm.valid || submitted || !validFile || !validSize\\\">Import</button>\\n\\n                    </div>\\n\\n            </form>\\n\\n\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage\\\" style=\\\"margin:6px\\\">\\n                    <strong>Error!</strong> {{errorMessage}}\\n            </div>\\n                  <div *ngIf=\\\"isLoading\\\">\\n                        \\n                        <progress-spinner></progress-spinner>\\n                      </div>\\n                      \\n        </div>\\n        <div style=\\\"flex: 1 0 300px; background-color:white;  border:1.5px solid lightgray; margin:10px; \\\">\\n            <div style=\\\"margin-left:10px; font-size:1.5em; font-weight:bolder; margin-top: 12px;\\\">Required Format</div>\\n\\n            <table>\\n                <tr>\\n                    <td >Max File Size</td>\\n                    <td><span *ngIf=\\\"sizeOfFile\\\" >{{sizeOfFile}}</span></td>\\n                </tr>\\n                <tr>\\n                    <td>Supported File Type:</td>\\n                    <td>.jpg, .jpeg, .png</td>\\n                </tr>\\n     \\n            </table>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/imports/importImages/import-images.component.html\n// module id = ./src/app/imports/importImages/import-images.component.html\n// module chunks = main","import { Component, OnChanges, Input, Output, ViewChild} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormGroup, FormBuilder, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { CreateRecordService } from '../../services/create-records.service';\nimport { saveAs } from 'file-saver/FileSaver';\nimport { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions, ResponseContentType } from '@angular/http';\n\n\nexport const saveFile = (blobContent: Blob, fileName: string) => {\n    const blob = new Blob([blobContent], { type: 'application/octet-stream' });\n    saveAs(blob, fileName);\n};\n const maxSize = 20469760;\n//const maxSize = 1050000;\nconst maxFileSizeLabel = 204;\n\nexport const getFileNameFromResponseContentDisposition = (res: Response) => {\n    const contentDisposition = res.headers.get('content-disposition') || '';\n    const matches = /filename=([^;]+)/ig.exec(contentDisposition);\n    const fileName = (matches[1] || 'untitled').trim();\n   \n    return fileName;\n};\n\n@Component({\n    selector: 'import-images',\n    templateUrl: './import-images.component.html',\n    styleUrls: ['./import-images.component.css']\n\n\n})\n@Injectable()\nexport class ImportImagesComponent {\n\n    @Input() flag: number;\n    importImagesForm: FormGroup;\n    isLoading: boolean = false;\n    submitted = false;\n    serverDown: boolean = false;\n    errorMessage: string = null;\n    file: File;\n    validFile: boolean;\n    validSize: boolean;\n    sizeOfFile: string = \"20 Mb\";\n    currentlySelectedValue: number = 1;\n    @ViewChild('fileInput') fileInput;\n\n    constructor(private fb: FormBuilder, private createRecordService: CreateRecordService,  private http: Http) {\n        this.createForm();\n    }\n\n\n\n    createForm() {\n        this.importImagesForm = this.fb.group({\n            image: null\n        });\n\n    }\n\n    onSubmit() {\n        \n       const options = new RequestOptions({responseType: ResponseContentType.Blob });\n      \n\n       let headers = new Headers();\n       headers.append('Accept', 'text/plain');\n      let fileBrowser = this.fileInput.nativeElement;\n       let formData:FormData = new FormData();\n\n\n       if(fileBrowser.files.size < 1){\n        this.validFile = false;\n        this.errorMessage = \"Must select at least one file\";\n       }\n\n       for(var index = 0; index<fileBrowser.files.length; ++index ){\n        formData.append('image', fileBrowser.files[index], fileBrowser.files[index].name);\n\n       }\n        this.submitted = true;\n        this.isLoading = true\n\n        this.http.post(`http://localhost:8080/fcdr-rest-service/rest/ImportService/importImage`, formData, options)\n                .map( r => r.blob())\n                .finally(() => {this.isLoading = false; this.submitted = false;})\n                .subscribe (response => {\n\n             saveFile(response, \"importImagesReport.txt\");\n             this.importImagesForm.controls['image'].setValue(null);\n        }\n        , (error) => {\n                this.errorMessage = \"Can't access the server at this time\";\n                this.serverDown = true;\n                this.importImagesForm.controls['image'].setValue(null);\n            });\n           \n\n    }\n\n    downloadFile(data: Response){\n        var blob = new Blob([data], { type: 'text/plain' });\n        var url= window.URL.createObjectURL(blob);\n        window.open(url);\n      }\n    validateFile(input: EventTarget) {\n        \n        this.validFile = true;\n        this.validSize = true;\n        this.errorMessage = null;\n\n\n        let eventObj: MSInputMethodContext = <MSInputMethodContext> input;\n        let target: HTMLInputElement = <HTMLInputElement> eventObj.target;\n        let files: FileList = target.files;\n       \n       \n        this.file = files[0];\n        let totalSize = 0;\n        for(var i = 0; i < files.length; i++){\n\n            totalSize+=files[i].size;\n\n        }\n\n        if(totalSize > maxSize){\n            this.validSize= false;\n            this.errorMessage = \"Limit exceeded, select fewer files\";\n        }else if(totalSize < 0){\n            this.validSize= false;\n            this.errorMessage = \"Must select at least one file\";\n        }\n        \n\n}\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/imports/importImages/import-images.component.ts","import { NgModule }      from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ImportImagesComponent }  from './import-images.component';\nimport {ImportImagesRoutingModule} from './import-images-routing.module'\n import {PaginationModelModule} from '../../pagination/pagination.model'\n\nimport {RouterModule} from '@angular/router';\nimport {ProgressSpinnerModule} from '../../progressSpinner/progress-spinner.module'\n\n\n\n@NgModule({\n  imports:      [ \nReactiveFormsModule,\nFormsModule,\nMatProgressBarModule,\nImportImagesRoutingModule,\nProgressSpinnerModule,\nBrowserModule,\nPaginationModelModule\n      \n       ],\n  declarations: [ \n\n    ImportImagesComponent\n    ],\n  exports: [\n    ImportImagesComponent\n   ]\n\n})\nexport class ImportImagesModule { }\n//BrowserModule /* or CommonModule */, \n //     FormsModule, ReactiveFormsModule\n\n\n// WEBPACK FOOTER //\n// ./src/app/imports/importImages/import-images.module.ts","import { Directive, AfterViewInit, ElementRef } from '@angular/core';\n \n@Directive({\n  selector: '[appAutofocus]'\n})\nexport class AutofocusDirective implements AfterViewInit {\n \n  constructor() {\n  }\n \n  ngAfterViewInit() {\n    // this.el.nativeElement.focus();\n    \n    console.log(document.querySelectorAll(\"button.actions\"));\n    // this.el.nativeElement.style.color = \"red\";\n    \n  }\n \n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/modal-box/autofocus.directive.ts","module.exports = \".modalContent {\\n    background-color: rgba(0, 0, 0, .2);\\n    /*opacity: 0.1;*/\\n    position: fixed;\\n    padding:0;\\n    margin:0;\\n\\n    top:0;\\n    left:0;\\n\\n    width: 100%;\\n    height: 100%;\\n    z-index: 100;\\n   -webkit-font-smoothing: antialiased !important;\\n    \\n}\\n.modalHeader{\\n    width: 100%;\\n    height: 3%;\\n    /*background: lightgray;*/\\n    font-size: 2em;\\n    margin-bottom: 10px;\\n    font-weight: bold;\\n    margin-left: 10px;\\n}\\n.modalMain{\\n    background-color: #fefefe;\\n    top: 20%;\\n    left:50%;     \\n    position: absolute;\\n    -webkit-transform: translate(-50%,-50%);\\n            transform: translate(-50%,-50%);\\n    width: 60%;\\n    \\n    margin: auto;\\n\\n    -webkit-transform: translate3d(-50%,0,0) !important;\\n    transform: translate3d(-50%,0,0) !important;\\n    /*-webkit-transform:translateZ(45deg);\\n    transform:translateZ(45deg);*/\\n    /*height: 100px;\\n    overflow: hidden;*/\\n \\n\\n}\\n.modalFooter{\\n    float: right;\\n    /*margin-right: 10px;*/\\n}\\nmd-icon{\\n    cursor: pointer;\\n}\\n.modalBody{\\n    max-height: 80%;\\n    overflow: auto;\\n    z-index: 102;\\n    padding-left:110px;\\n\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modal-box/modal-box.component.css\n// module id = ./src/app/modal-box/modal-box.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"modalType == 'sales' || modalType =='package'\\\" class=\\\"modalContent\\\" tabindex=\\\"-1\\\">\\n    <div class=\\\"modalMain\\\">\\n        <div class=\\\"modalHeader\\\"></div>\\n        <div class=\\\"modalBody\\\" style=\\\"margin-left: 10px;\\\">\\n        \\n        <div >\\n            <h2>Do you want to relink it to a different product instead?</h2>\\n        </div>\\n\\n</div>\\n<div class=\\\"modalFooter\\\">\\n</div>\\n<div style=\\\"width: 100%; height: 50px; position: fixed; background-color:white; padding-right:50px; \\\" appAutofocus>\\n<span style=\\\" float: right;\\\">\\n<button class=\\\"btn btn-default actions\\\" (click)=\\\"responseToCall(1)\\\" style=\\\"width:160px\\\" >Yes, Relink!</button>\\n<button class=\\\"btn btn-default actions\\\" (click)=\\\"responseToCall(2)\\\" style=\\\"width:160px\\\">No,Delete Record!</button>\\n<button class=\\\"btn btn-default actions\\\" (click)=\\\"responseToCall(3)\\\" style=\\\"width:160px\\\">Cancel</button>\\n</span>\\n</div>\\n\\n</div>\\n\\n</div>\\n\\n<div *ngIf=\\\"modalType == 'product'\\\" class=\\\"modalContent\\\" tabindex=\\\"-1\\\">\\n        <div class=\\\"modalMain\\\">\\n            <div class=\\\"modalHeader\\\"></div>\\n            <div class=\\\"modalBody\\\" style=\\\"margin-left: 10px;\\\">\\n            \\n            <div>\\n                <h2>Are you sure you want to delete this Product and all associated Labels and Market Share?</h2>\\n            </div>\\n    \\n    </div>\\n    <div class=\\\"modalFooter\\\">\\n    </div>\\n    <div style=\\\"width: 100%; height: 50px; position: fixed; background-color:white; padding-right:50px; \\\">\\n    <span style=\\\" float: right;\\\">\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"responseToCall(2)\\\" style=\\\"width:160px\\\">Delete Record!</button>\\n    <button class=\\\"btn btn-default\\\" (click)=\\\"responseToCall(3)\\\" style=\\\"width:160px\\\">Cancel</button>\\n    </span>\\n    </div>\\n    \\n    </div>\\n    \\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modal-box/modal-box.component.html\n// module id = ./src/app/modal-box/modal-box.component.html\n// module chunks = main","import { Component, Input, EventEmitter, Output } from '@angular/core';\n// import {MdIconRegistry} from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n@Component({\n    selector: 'modal-box',\n    templateUrl: './modal-box.component.html',\n    styleUrls: ['./modal-box.component.css']\n\n\n})\nexport class ModalBoxComponent {\n\n    constructor() {\n\n    }\n\n    @Input() from: string;\n\n    @Input() modalType: string;\n    @Output() fireBack = new EventEmitter<number>();\n\n    // update() {\n    //     this.fireBack.emit(true);\n    // }\n\n    responseToCall(value : number){\n        \n        this.fireBack.emit(value);\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/modal-box/modal-box.component.ts","import { NgModule } from '@angular/core';\n import { CommonModule } from '@angular/common';\n import { ModalBoxComponent} from './modal-box.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {BrowserAnimationsModule} from '@angular/platform-browser/animations'\nimport { MatIconModule} from '@angular/material/icon';\n\n//  import {MdCardModule,MdProgressBarModule, MdInputModule, MdButtonModule,MdSidenavModule, MdSelectModule, MdSliderModule,MdNativeDateModule, MdRadioModule, MdDatepickerModule} from '@angular/material'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AddClassificationModule }  from '../classification-center/add-classification/add-classification.module';\nimport { AutofocusDirective } from './autofocus.directive'; \n\n@NgModule({\n    imports:[\n        CommonModule,\n        AddClassificationModule,\nMatIconModule,\n\n        // ReactiveFormsModule,\n        // FormsModule,\n        // MdCardModule,\n        // MdProgressBarModule,\n        // MdInputModule,\n        // MdButtonModule,\n        // MdSidenavModule,\n        // MdSelectModule,\n        // MdSliderModule,\n         BrowserModule,\n         BrowserAnimationsModule\n    ],\n    declarations:[\n    ModalBoxComponent,\n    AutofocusDirective\n    ],\n    exports: [\n        ModalBoxComponent\n    ]\n\n\n})\n\nexport class ModalBoxModule{\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modal-box/modal-box.module.ts","module.exports = \".badge{\\n\\n  \\n}\\n\\ndiv.selected2 {\\n    background-color: #33cccc;\\n    \\n}\\n\\ndiv.selected{\\n    background-color: #009999;\\n}\\n\\na{\\n    text-decoration: none;\\n}\\n\\n.custom{\\n    cursor: pointer;\\n    display: inline-block;\\n   height: 40px; \\n    width: 40px;\\n    margin: 2px;\\n  background-color: #33cccc;\\n   \\n}\\n\\nspan{\\n    position: relative;\\n    top: 50%;\\n    left: 50%;\\n    float:left;\\n\\n    -webkit-transform: translate(-50%, -50%);\\n\\n            transform: translate(-50%, -50%);\\n}\\n\\n.custom2{\\n\\n   height: 40px; \\n    width: 100px;\\n    margin: 2px;\\n  background-color: #33cccc;\\n}\\n\\n.alignPagination{\\n    float: right;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pagination/pagination.component.css\n// module id = ./src/app/pagination/pagination.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alignPagination\\\" *ngIf=\\\"numberOfRecords >0\\\">\\n    <div *ngIf=\\\"page\\\">\\n\\n        <div class=\\\"custom custom2\\\" *ngIf=\\\"pageOffset>0\\\"   tabindex=\\\"0\\\" (click)=\\\"DecreaseOffset()\\\" (keypress)=\\\"DecreaseOffset()\\\">\\n            <span > ⇚ Previous</span>\\n        </div>\\n\\n        <ng-container *ngFor=\\\"let pg of page; let i = index\\\">\\n\\n            <div class=\\\"custom\\\"  tabindex=\\\"0\\\"   (click)=\\\"updateOffset(pg)\\\" (keypress)=\\\"updateOffset(pg)\\\" [ngClass]=\\\"{'selected': pg === pageOffset}\\\">\\n                <span  >{{pg}} </span>\\n            </div>\\n        </ng-container>\\n\\n\\n\\n\\n        <ng-container *ngIf=\\\"pageOffset < numberOfPage -1\\\">\\n            <div class=\\\"custom custom2\\\"  (click)=\\\"Increaseffset()\\\" (keypress)=\\\"Increaseffset()\\\"  tabindex=\\\"0\\\">\\n                <span  >Next ⇛</span>\\n            </div>\\n        </ng-container>\\n\\n    </div>\\n\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pagination/pagination.component.html\n// module id = ./src/app/pagination/pagination.component.html\n// module chunks = main","import { Component, Input, EventEmitter, Output, OnChanges} from '@angular/core';\n\n@Component({\n    selector: 'pagination',\n    templateUrl: './pagination.component.html',\n    styleUrls: ['./pagination.component.css']\n })\n\n\nexport class PaginationComponent implements OnChanges{\n\n    @Input() pageOffset: number =0;\n    @Output() offSetVal: EventEmitter<number> = new EventEmitter<number>();\n    @Input() pageSize: number;\n    @Input() numberOfRecords: number;\n    pages: number[];\n    page:any[];\n    numberOfPage: number;\n    maxNumberOfPages: number = 9;\n    \n    \n    // getSelected(index: number): boolean {\n    //     return index === <number>this.offSet;\n    // }\n\n     ngOnChanges(){\n        \nconsole.log(this.numberOfRecords, \"to be displayes\");\n         if(this.numberOfRecords > 0){\n             this.numberOfPage = Math.ceil(this.numberOfRecords/this.pageSize);\n            //  this.pages = new Array(this.numberOfPage);\n             \n             console.log(this.numberOfPage, \"is the number of pages\");\n            //  for(var i=0; i < this.numberOfPage; i++){\n            //      this.pages[i] = i ;\n            //  }\n             //New algorithm starts here\n             \n             this.page = new Array(this.maxNumberOfPages);\n             if(this.numberOfPage >= this.maxNumberOfPages){\n             if(this.pageOffset < 4){\n                \n                 for(var i = 0; i<= 6; ++i){\n                     this.page[i] = i;\n                 }\n                 this.page[7]=\"...\";\n                 this.page[8]=this.numberOfPage -1;\n             }else if(this.pageOffset >= (this.numberOfPage -5)){\n\n               this.page[0]=1;\n               this.page[1]=\"...\";\n                let count = this.numberOfPage -7;\n                for(var index = 2; index <=8; index++){\n                    console.log(count, \"is the value\");\n                    this.page[index] = count++;\n                }\n\n\n             }else{\n                this.page[0]=0;\n                this.page[1]=\"...\";\n                this.page[2] = this.pageOffset -2;\n                this.page[3] = this.pageOffset -1;\n                this.page[4] = this.pageOffset;\n                this.page[5] = this.pageOffset +1;\n                this.page[6] = this.pageOffset +2;\n                this.page[7]=\"...\";\n                this.page[8]=this.numberOfPage -1;\n             }\n            }else{\n                this.page = new Array(this.numberOfPage);\n                for (var index = 0; index < this.numberOfPage; ++index){\n                    this.page[index]= index;\n                }\n            }\n//pageOffset >  (pages.length - 4) && pages.length >5 && pageOffset>3\"\n            //  if(this.pageOffset > (this.numberOfPage - 4) && this.numberOfPage > 5 && this.pageOffset > 3){\n            //     this.page[0] = 0; \n            //     let index = this.numberOfPage;\n            //     while(this.pageOffset > 3 && (this.pageOffset > this.numberOfPage - 4) && this.numberOfPage > 5){\n            //        // this.page[]\n            //     }\n            //  }\n\n\n             //new algorithm ends here\n         }\n    }\n\nupdateOffset(page: number){\n    if(typeof page === 'number'){\n   this.pageOffset = page;\n   this.offSetVal.emit(page);\n   console.log(\"the page off set\", page);\n   console.log(this.pageOffset);\n    }\n}\nDecreaseOffset(){\n    this.pageOffset -=1;\n     this.offSetVal.emit(this.pageOffset);\n}\nIncreaseffset(){\n    this.pageOffset +=1;\n     this.offSetVal.emit(this.pageOffset);\n  \n}\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pagination/pagination.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { PaginationComponent } from './pagination.component';\nimport { StyleCellDirective } from './style.directive';\nimport {  CommonModule} from '@angular/common';  \n\n@NgModule({\n    imports:[\nBrowserModule,\nCommonModule\n    ],\n    declarations: [ \n        PaginationComponent,\n        StyleCellDirective\n         ],\n\n    exports: [ PaginationComponent ]\n})\nexport class PaginationModelModule {\n\n\n\n }\n\n\n// WEBPACK FOOTER //\n// ./src/app/pagination/pagination.model.ts","import { Directive, ElementRef, HostListener,\n         Input, Renderer } from '@angular/core';\n\n\n\n         \n@Directive({ selector: '[ctStyleCell]'})\n\nexport class StyleCellDirective {\n\n   // @Input() ctStyleCell: string;\n\n    // constructor(\n    //    private el: ElementRef) { }\n           constructor(\n       private el: ElementRef, \n       private renderer: Renderer) { \n\n\n\n           \n           console.log(\"OYESSOO\");\n       }\n       \n    @HostListener('click', ['$event']) \n    \n    handleClick(){\n\n       console.log(\"OYESSOO\");\n\n      // this.el.nativeElement.style.backgroundColor = 'yellow';\n            this.renderer.setElementStyle(\n                 this.el.nativeElement, \n                 'backgroundColor', \n                 'yellow');\n  \n        \n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pagination/style.directive.ts","module.exports = \".loader {\\n    border: 16px solid #f3f3f3;\\n    border-radius: 50%;\\n    border-top: 16px solid #3498db;\\n    width: 200px;\\n    height: 200px;\\n    -webkit-animation: spin 2s linear infinite; /* Safari */\\n    animation: spin 2s linear infinite;\\n\\n    /* -webkit-transform: translate3d(-50%,0,0) !important;\\n    transform: translate3d(-50%,0,0) !important;\\n     */\\n  }\\n  \\n  /* Safari */\\n  \\n  @-webkit-keyframes spin {\\n    0% { -webkit-transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); }\\n  }\\n  \\n  @keyframes spin {\\n    0% { -webkit-transform: rotate(0deg); transform: rotate(0deg); }\\n    100% { -webkit-transform: rotate(360deg); transform: rotate(360deg); }\\n  }\\n  \\n  .wrapper{\\n    z-index: 102;\\n    background-color: rgba(0, 0, 0, .2);\\n    /*opacity: 0.1;*/\\n    position: fixed;\\n    padding:0;\\n    margin:0;\\n\\n    top:0;\\n    left:0;\\n\\n    width: 100%;\\n    height: 100%;\\n    z-index: 100;\\n   -webkit-font-smoothing: antialiased !important;\\n  }\\n  \\n  .wrapper > span {\\n      display: inline;\\n      position: absolute;\\n      top:50%;\\n      left:50%;\\n      -webkit-transform: translate(-50%, -50%);\\n              transform: translate(-50%, -50%);\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/progressSpinner/progress-spinner.component.css\n// module id = ./src/app/progressSpinner/progress-spinner.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper\\\">\\n<span>\\n<div class=\\\"loader\\\"></div>\\n</span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/progressSpinner/progress-spinner.component.html\n// module id = ./src/app/progressSpinner/progress-spinner.component.html\n// module chunks = main","import { Component, Input, EventEmitter, Output } from '@angular/core';\n// import {MdIconRegistry} from '@angular/material';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n\n@Component({\n    selector: 'progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.component.css']\n\n\n})\nexport class ProgressSpinnerComponent{\n\n\n// @Output() displayModal= new EventEmitter<boolean>();\n\n  constructor() {\n\n  }\n\n\n\n// update(){\n//     this.displayModal.emit(true);\n// }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/progressSpinner/progress-spinner.component.ts","import { NgModule } from '@angular/core';\n import { CommonModule } from '@angular/common';\n import { ProgressSpinnerComponent} from './progress-spinner.component';\n\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n    imports:[\n        CommonModule,\n         BrowserModule,\n\n    ],\n    declarations:[\n        ProgressSpinnerComponent\n    ],\n    exports: [\n        ProgressSpinnerComponent\n    ]\n\n\n})\n\nexport class ProgressSpinnerModule{\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/progressSpinner/progress-spinner.module.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormComponent } from '../forms/productForm/form.component';\nimport { SalesFormComponent } from '../forms/salesForm/sales-form.component';\nimport { RadioButtonComponent } from './radio-button.component';\nimport { LabelFormComponent } from '../forms/labelForm/label-form.component';\nimport { SearchAllComponent } from '../forms/searchAllForm/search-all.component';\n\n\nconst ButtonsRoutes: Routes = [\n    // { path: 'salesSearch', component: SalesFormComponent },\n\n    {\n        path: 'searchengine', component: RadioButtonComponent, children: [\n            { path: '', redirectTo: 'search', pathMatch: 'full' },\n            { path: 'search', component: FormComponent },\n            { path: 'salesSearch', component: SalesFormComponent },\n            { path: 'labelSearch', component: LabelFormComponent },\n            { path: 'searchAll', component: SearchAllComponent }\n        ]\n    },\n\n\n];\n\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(\n            ButtonsRoutes)\n\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class RadioButtonRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/radio-button/radio-button-routing.module.ts","module.exports = \".section-margin{\\n    margin-bottom: 10px;\\n}\\n\\n.innerNav a {\\n  padding: 5px 10px;\\n  text-decoration: none;\\n  margin-right: 10px;\\n  margin-top: 10px;\\n  display: inline-block;\\n  background-color: #eee;\\n  border-radius: 4px;\\n}\\n\\n.innerNav nav a:visited,.innerNav a:link {\\n  color: #607D8B;\\n}\\n\\n.innerNav a:hover {\\n  color: #039be5;\\n  background-color: #CFD8DC;\\n}\\n\\n.innerNav  a.active {\\n  color: #039be5;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/radio-button/radio-button.component.css\n// module id = ./src/app/radio-button/radio-button.component.css\n// module chunks = main","module.exports = \"<!--<section class=\\\"section-margin\\\">\\n  <span style=\\\"font-size: 1.2em;\\\"> <label><strong>Search by:</strong></label></span>\\n<mat-radio-group [(ngModel)]=\\\"searchBy\\\">\\n  <mat-radio-button class=\\\"example-margin\\\" value=\\\"product\\\">\\n    Product\\n  </mat-radio-button>\\n  <mat-radio-button class=\\\"example-margin\\\" value=\\\"sales\\\">\\n    Market Share\\n  </mat-radio-button>\\n  <mat-radio-button class=\\\"example-margin\\\" value=\\\"label\\\">\\n    Label\\n  </mat-radio-button>\\n  <mat-radio-button class=\\\"example-margin\\\" value=\\\"searchall\\\">\\n    Search All\\n  </mat-radio-button>\\n</mat-radio-group>\\n</section>-->\\n<!--<forms-center [searchBy]=\\\"searchBy\\\">\\n</forms-center>-->\\n\\n<nav class=\\\"innerNav\\\">\\n      <a routerLink=\\\"./search\\\" routerLinkActive=\\\"active\\\">Product</a>\\n      <a routerLink=\\\"./salesSearch\\\" routerLinkActive=\\\"active\\\">Sales</a>\\n      <a routerLink=\\\"./labelSearch\\\" routerLinkActive=\\\"active\\\">Label</a>\\n      <a routerLink=\\\"./searchAll\\\" routerLinkActive=\\\"active\\\">Search All</a>\\n \\n</nav>\\n      <router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/radio-button/radio-button.component.html\n// module id = ./src/app/radio-button/radio-button.component.html\n// module chunks = main","import { Component } from '@angular/core';\n@Component({\n    selector: 'radio-button',\n    templateUrl: './radio-button.component.html',\n    styleUrls: ['./radio-button.component.css']\n\n\n})\nexport class RadioButtonComponent{\n\n    searchBy ='product';\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/radio-button/radio-button.component.ts","import { NgModule }      from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { RadioButtonComponent }  from './radio-button.component';\nimport {MatRadioModule} from '@angular/material/radio'\nimport {FormsCenterModule} from '../forms-center/forms-center.module'\nimport {RouterModule} from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {SalesFormModule} from '../forms/salesForm/sales-form.module'\nimport {FormModule} from '../forms/productForm/form.module'\nimport {RadioButtonRoutingModule} from './radio-button-routing.module'\n\n\n\n\n\n@NgModule({\n  imports:      [ \nMatRadioModule,\nFormsCenterModule,\nBrowserModule,\nFormsModule,\nSalesFormModule,\nFormModule,\nRouterModule,\nRadioButtonRoutingModule\n      \n       ],\n  declarations: [ \n\n    RadioButtonComponent\n    ],\n  exports: [\n    RadioButtonComponent\n   ]\n\n})\nexport class RadioButtonModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/radio-button/radio-button.module.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/timeout';\nimport { productParams, UpdateResponse, Response, productCreateResponse } from '../data-model';\nimport { environment } from '../../environments/environment'\n\n\nimport 'rxjs/add/observable/forkJoin';\n@Injectable()\n\nexport class CreateRecordService {\n\n    headers = new Headers({ 'Content-Type': 'application/json' });\n    options = new RequestOptions({ headers: this.headers });\n    apiUrl = environment.apiUrl;\n\n\n    constructor(private http: Http) { }\n\n\n\n    createProduct(queryString: string): Observable<productCreateResponse> {\n        return this.http\n            .post(this.apiUrl + 'ProductService/create', queryString, this.options)\n            .map(response => response.json() as productCreateResponse);\n    }\n\n\n\n    createSales(queryString: string): Observable<UpdateResponse> {\n        console.log(queryString);\n        return this.http\n            .post(this.apiUrl + 'SalesService/insert', queryString, this.options)\n            .map(response => response.json() as UpdateResponse)\n    }\n\n    createLabel(queryString: string): Observable<UpdateResponse> {\n\n        return this.http\n            .post(this.apiUrl + 'PackageService/insert', queryString, this.options)\n            .map(response => response.json() as UpdateResponse)\n    }\n\n    createNft(queryString: string) {\n\n        return this.http\n            .post(this.apiUrl + 'PackageService/insertNft', queryString, this.options)\n            .map(response => response.json())\n    }\n\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/create-records.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions, ResponseOptionsArgs } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/timeoutWith';\nimport 'rxjs/add/operator/delay';\nimport { DeleteResponse, ImageModel } from '../data-model';\nimport { environment } from '../../environments/environment'\n\n\nimport 'rxjs/add/observable/forkJoin';\n@Injectable()\n\nexport class DeleteRecordService {\n\n    headers = new Headers({ 'Content-Type': 'application/json' });\n    options = new RequestOptions({ headers: this.headers });\n    apiUrl = environment.apiUrl;\n\n    constructor(private http: Http) { }\n\n\n    deleteSalesRecord(id: string | number): Observable<DeleteResponse> {\n\n        return this.http\n            .delete(this.apiUrl + `SalesService/delete/${id}`, this.options)\n\n            .map(response => response.json() as DeleteResponse)\n    }\n\n    deleteLabelRecord(id: string | number): Observable<DeleteResponse> {\n\n        return this.http\n            .delete(this.apiUrl + `PackageService/delete/${id}`, this.options)\n            .map(response => response.json() as DeleteResponse)\n    }\n\n\n    deleteProductRecord(id: string | number): Observable<DeleteResponse> {\n\n        return this.http\n            .delete(this.apiUrl + `ProductService/delete/${id}`, this.options)\n            .map(response => response.json() as DeleteResponse)\n    }\n\n    reLinkRecord(queryString: string) {\n\n        return this.http\n            .post(this.apiUrl + 'ProductService/relinkRecord', queryString, this.options)\n            .map(response => response.json())\n    }\n\n    deleteImage(id: string | number) {\n\n        return this.http\n            .delete(this.apiUrl + `PackageService/deleteImage/${id}`, this.options)\n            .map(response => response.json())\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/delete-record.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions, ResponseOptionsArgs } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/timeoutWith';\nimport 'rxjs/add/operator/delay';\nimport { UpdateResponse } from '../data-model';\nimport { environment } from '../../environments/environment'\n\n\nimport 'rxjs/add/observable/forkJoin';\n@Injectable()\n\nexport class EditRecordService {\n\n        headers = new Headers({ 'Content-Type': 'application/json' });\n        options = new RequestOptions({ headers: this.headers });\n        apiUrl = environment.apiUrl;\n\n\n        constructor(private http: Http) { }\n\n\n\n        updateProduct(queryString: string): Observable<UpdateResponse> {\n\n                return this.http\n                        .put(this.apiUrl + 'ProductService/update', queryString, this.options)\n                        .map(response => response.json() as UpdateResponse)\n        }\n\n\n        updateSales(queryString: string): Observable<UpdateResponse> {\n                return this.http\n                        .put(this.apiUrl + 'SalesService/update', queryString, this.options)\n                        .map(response => response.json() as UpdateResponse)\n        }\n\n        UpdateLabel(queryString: string): Observable<UpdateResponse> {\n\n                return this.http\n                        .put(this.apiUrl + 'PackageService/update', queryString, this.options)\n                        .map(response => response.json() as UpdateResponse)\n        }\n        updateNft(queryString: string) {\n\n                return this.http\n                        .put(this.apiUrl + 'PackageService/updateNft', queryString, this.options)\n                        .map(response => response.json())\n        }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/edit-records.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions, ResponseOptionsArgs } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/timeout';\nimport { productParams, Response, productAllFields, ResponseComponentName } from '../data-model';\nimport { environment } from '../../environments/environment'\n\n\nimport 'rxjs/add/observable/forkJoin';\n@Injectable()\n\nexport class GetRecordService {\n\n    headers = new Headers({ 'Content-Type': 'application/json' });\n    options = new RequestOptions({ headers: this.headers });\n    apiUrl = environment.apiUrl;\n\n\n    constructor(private http: Http) { }\n\n\n\n    getProduct(id: number | string): Observable<Response<productAllFields>> {\n\n        return this.http\n            .get(this.apiUrl + `ProductService/productclassification/${id}`, this.options)\n            .map(response => response.json() as Response<productAllFields>);\n    }\n\n\n\n\n    getAllRecords(id: number | string) {\n\n\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `ProductService/productclassification/${id}`, this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + `ProductService/productlabels/${id}`, this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + `ProductService/productsales/${id}`, this.options)\n                .map(response => response.json())\n        );\n\n    }\n\n    getProductAndClassificationList(id: number | string) {\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `ProductService/productclassification/${id}`, this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + 'ClassificationService/classification', this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + 'ProductService/restaurantTypes', this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + 'ProductService/types', this.options)\n                .map(response => response.json()\n\n                ));\n\n    }\n\n    getSalesRecords(id: number | string) {\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `SalesService/sales/${id}`, this.options)\n                .map(response => response.json()));\n    }\n\n\n    getSalesRecordsAndClassification(id: number | string) {\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `SalesService/sales/${id}`, this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + 'ClassificationService/classification', this.options)\n                .map(response => response.json()));\n    }\n\n    getPackageRecords(id: number | string) {\n        let body = JSON.stringify({ \"package_id\": id, \"flag\": \"true\" });\n        let body_prepared = JSON.stringify({ \"package_id\": id, \"flag\": \"false\" });\n\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `PackageService/package/${id}`, this.options)\n                .map(response => response.json()),\n            this.http\n                .post(this.apiUrl + `PackageService/getNft`, body, this.options)\n                .map(response => response.json()),\n            this.http\n                .post(this.apiUrl + `PackageService/getNft`, body_prepared, this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + `PackageService/getListOfImages/${id}`, this.options)\n                .map(response => response.json()));\n    }\n\n    getPackageAndClassification(id: number | string) {\n\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `PackageService/package/${id}`, this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + 'ClassificationService/classification', this.options)\n                .map(response => response.json()),\n            this.http\n                .get(this.apiUrl + `PackageService/unitOfMeasure`, this.options)\n                .map(response => response.json())\n        );\n\n    }\n    getComponentNames() {\n\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `PackageService/listofcomponents`, this.options)\n                .map(response => response.json() as ResponseComponentName),\n            this.http\n                .get(this.apiUrl + `PackageService/unitOfMeasure`, this.options)\n                .map(response => response.json()));\n\n\n    }\n\n    getNftSoldRecordsEdit(id: number | string, flag: boolean | string) {\n        let body = JSON.stringify({ \"package_id\": id, \"flag\": flag });\n\n        return Observable.forkJoin(\n            this.http\n                .get(this.apiUrl + `PackageService/listofcomponents`, this.options)\n                .map(response => response.json() as ResponseComponentName),\n            this.http\n                .get(this.apiUrl + `PackageService/unitOfMeasure`, this.options)\n                .map(response => response.json()),\n            this.http\n                .post(this.apiUrl + `PackageService/getNft`, body, this.options)\n                .map(response => response.json()));\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/getRecord.service.ts","import { Injectable } from '@angular/core';\nimport { Headers, Http, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/timeout';\nimport { Params, Response, SalesData, LabelData, ClassificationList, addClass,productParams,SearchAllResponse, classificationList, salesYearList} from '../data-model';\n\nimport {environment} from '../../environments/environment'\nimport 'rxjs/add/observable/forkJoin';\n\n\n\n\n@Injectable()\n\nexport class SearchService {\n\n     apiUrl = environment.apiUrl;\n  \n     headers = new Headers({ 'Content-Type': 'application/json' });\n    options = new RequestOptions({ headers: this.headers });\n\n    constructor(private http: Http) { }\n\n    search(queryString: string): Observable<Response<Params>> {\n\n\n        return this.http\n            .post(this.apiUrl+'ProductService/productsfiltered', queryString, this.options)\n            .map(response => response.json() as Response<Params>);\n\n    }\n\n\n    searchAll(queryString: string): Observable<Response<SearchAllResponse>> {\n\n        return this.http\n            .post(this.apiUrl+'ProductService/productsaleslabel', queryString, this.options)\n            .map(response => response.json() as Response<SearchAllResponse>);\n\n    }\n\n    getProduct(id: number | string): Observable<Response<productParams>> {\n\n\n        let body = JSON.stringify({ \"product_id\": id });\n        return this.http\n \n            .post(this.apiUrl+'ProductService/productsfiltered', body, this.options)\n            .map(response => response.json() as Response<productParams>);\n    }\n\n\n    searchSales(queryString: string): Observable<Response<SalesData>> {\n\n        return this.http\n            .post(this.apiUrl+'SalesService/salesfiltered', queryString, this.options)\n            .map(response => response.json() as Response<SalesData>);\n            \n \n\n    }\n\n    searchLabel(queryString: string): Observable<Response<LabelData>> {\n\n        return this.http\n            .post(this.apiUrl+'PackageService/packagefiltered', queryString, this.options)\n            .map(response => response.json() as Response<LabelData>);\n\n    }\n\n    getClassification(): Observable<Response<addClass>> {\n        return this.http\n            .get(this.apiUrl+'ClassificationService/classification', this.options)\n            .map(response => response.json() as Response<addClass>);\n\n\n    }\n\n\n    getClassificationLatest(): Observable<Response<ClassificationList>> {\n        return this.http\n            .get(this.apiUrl+'ClassificationService/classification', this.options)\n            .map(response => response.json() as Response<ClassificationList>);\n\n\n    }\n\n        getClassificationAndUnitofMeasure(){\n        return Observable.forkJoin(\n        this.http\n            .get(this.apiUrl+'ClassificationService/classification', this.options)\n            .map(response => response.json() as Response<ClassificationList>),\n            this.http\n                 .get(this.apiUrl+'PackageService/unitOfMeasure', this.options)\n                 .map(response => response.json()),\n\n        );\n    }\n\n    getSalesYearList(): Observable<Response<salesYearList>> {\n        return this.http\n            .get(this.apiUrl+'SalesService/salesyears', this.options)\n            .map(response => response.json() as Response<salesYearList>);\n    }\n\n\n\n\n    getClassificationRestaurant() {\n        return  Observable.forkJoin(\n            this.http\n            .get(this.apiUrl+'ClassificationService/classification', this.options)\n            .map(response => response.json() as Response<ClassificationList>),\n            this.http\n            .get(this.apiUrl+'ProductService/restaurantTypes', this.options)\n            .map(response => response.json()),\n            this.http\n            .get(this.apiUrl+'ProductService/types', this.options)\n            .map(response => response.json()\n        \n        ));\n\n\n\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/search.service.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport { CurrencyPipe } from '@angular/common';\n@Pipe({ name: 'formatCell' })\nexport class FormatCellPipe implements PipeTransform {\n    \n    constructor (\n        private currencyPipe: CurrencyPipe\n    ) { }\n    transform(value: any, format: string) {\n        if ( value === undefined || value===null || value==='') {\n            return 'not available';\n        }\n        // if ( format === 'default' ) {\n        //     if ( Array.isArray(value) ) {\n        //         if ( typeof value[0] !== 'object' ) {\n        //             return value.join(', ');\n        //         } else {\n        //             return value.map( obj => {\n        //                 return obj.name\n        //             }).join(', ');\n        //         }\n        //     }\n        //     if ( typeof value === \"object\") {\n        //         return value.name\n        //     }\n        // }\n        \n        if (format === 'currency') {\n            return this.currencyPipe.transform(value, 'USD', true);\n        }\n        \n        return value;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/format-cell.pipe.ts","import { NgModule } from '@angular/core';\nimport { CommonModule, CurrencyPipe } from '@angular/common';\nimport { TableLayoutComponent } from './table-layout.component';\nimport { FormatCellPipe } from './format-cell.pipe';\nimport {StyleCellDirective} from './style-cell.directive'\nimport { BrowserModule } from '@angular/platform-browser';\nimport {RouterModule} from '@angular/router'\nimport {ConfirmBoxModule} from '../confirmbox/confirm-box.module';\n\n\n@NgModule({\n    imports: [ \n        CommonModule,\n        BrowserModule,\n        RouterModule,\n        ConfirmBoxModule ],\n    declarations: [ \n    TableLayoutComponent,\n    FormatCellPipe,\n    StyleCellDirective\n     ],\n    exports: [\n        CommonModule, \n        TableLayoutComponent \n    ],\n    providers: [CurrencyPipe]\n})\nexport class SharedModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { Directive, ElementRef, \n         Input, Renderer, OnInit } from '@angular/core';\n\n\n\n         \n@Directive({ selector: '[ctStyleCell]'})\n\nexport class StyleCellDirective implements OnInit {\n\n    @Input() ctStyleCell: string;\n\n    constructor(\n       private el: ElementRef, \n       private renderer: Renderer) { }\n       \n    ngOnInit() {\n        if (this.ctStyleCell === undefined ||this.ctStyleCell === null || this.ctStyleCell === '') {\n            this.renderer.setElementStyle(\n                 this.el.nativeElement, \n                 'color', \n                 '#dcdcdc');\n            this.renderer.setElementStyle(\n                 this.el.nativeElement, \n                 'text-align', \n                 'center');\n        }\n        if (typeof this.ctStyleCell === 'number') {\n            this.renderer.setElementStyle(\n                 this.el.nativeElement, \n                 'text-align', \n                 'right');\n        }else{\n              this.renderer.setElementStyle(\n                 this.el.nativeElement, \n                 'padding-left', \n                 '5px');\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/style-cell.directive.ts","module.exports = \".table {\\n    width: 100%;\\n    border-collapse: collapse;\\n    margin-top: 15px;\\n    margin-bottom: 15px;\\n    border-left: 1.5px  #33cccc solid;\\n    border-right: 1.5px  #33cccc solid;\\n    border-bottom: 1.5px  #33cccc solid;\\n    font-family: Roboto, \\\"Helvetica-Neue\\\", sans-serif;\\n}\\n\\n.table tr:nth-child(even){\\n    background-color: #f0f5f5;\\n}\\n\\n.tableheader{\\n    background-color: #33cccc;\\n}\\n\\nthead{\\n    text-align: left;\\n}\\n\\n.iconGroup{\\n   float: right;\\n   color:darkblue;\\n  cursor: pointer;\\n\\n}\\n\\nth{\\n    padding: 6px;\\n    font-weight: 500 bold;\\n    text-decoration: none;\\n    font-size: 18px;\\n    /* font-weight: bold; */\\n}\\n\\ntd {\\n    padding: 5px;\\n    border: none;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    max-width: 250px;\\n   \\n}\\n\\ntd:not(:first-child) {\\n    border-left: 1px solid lightgray;\\n}\\n\\ntd:not(:last-child) {\\n    border-right: 1px solid lightgray;\\n}\\n\\n.toggle{ /* IE 9 */\\n    -webkit-transform: rotateX(0deg); /* Chrome, Safari, Opera */\\n    transform: rotateX(0deg);\\n     \\n}\\n\\n.my-class{\\n  background-color: #009999;\\n  \\n\\n\\n}\\n\\n.toggle2{ /* IE 9 */\\n    -webkit-transform: rotateX(180deg); /* Chrome, Safari, Opera */\\n    transform: rotateX(180deg);\\n     \\n}\\n\\n.addHand{\\n     cursor: pointer;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/table-layout.component.css\n// module id = ./src/app/shared/table-layout.component.css\n// module chunks = main","module.exports = \"\\n\\n<div *ngIf=\\\"records && !isRelink\\\" style=\\\"overflow-x: auto;\\\">\\n<table class=\\\"table\\\">\\n    <thead>\\n      <tr role=\\\"row\\\">\\n        \\n            <th rowspan=\\\"1\\\" colspan=\\\"1\\\" tabindex=\\\"0\\\" class=\\\"addHand tableheader\\\" *ngFor=\\\"let map of columnMaps ; let i=index\\\" \\n             (keypress)=\\\"sortCol(i)\\\" (click)=\\\"sortCol(i)\\\"\\n            [ngClass]=\\\"{'my-class': (i === selectedRow && i===index) || (i===index && index===0)}\\\"> {{ map.header }}                       \\n                       <span class=\\\"iconGroup\\\" *ngIf=\\\"(i === selectedRow && i===index) || (i===index && index===0)\\\" [ngClass]=\\\"{'toggle': flag && i === selectedRow , 'toggle2':!flag  && i === selectedRow} \\\">⇑</span>                  \\n            </th>\\n          \\n        </tr>\\n    </thead>\\n    <tbody>\\n<tr *ngFor=\\\"let record of records\\\">\\n\\n    <ng-container *ngFor=\\\"let map of columnMaps; let i=index\\\">\\n        \\n        <td *ngIf=\\\"i === 0\\\" \\n        [ctStyleCell]=\\\"record[map.primaryKey]\\\"\\n         style=\\\"text-decoration: underline; cursor: pointer;\\\">\\n         \\n         <a [routerLink]='returnUrl(record)'> {{ record[map.primaryKey] | formatCell:map.format }} </a>\\n     <!--<td *ngFor=\\\"let map of columnMaps\\\"\\n     [ctStyleCell]=\\\"record[map.primaryKey]\\\" \\n                 (click)=\\\"passIt(record.product_id)\\\">\\n           {{ record[map.primaryKey] | formatCell:map.format }}-->\\n     </td>\\n             <td *ngIf=\\\"i > 0\\\" \\n        [ctStyleCell]=\\\"record[map.primaryKey]\\\"\\n        >\\n         {{ record[map.primaryKey] | formatCell:map.format }} \\n     <!--<td *ngFor=\\\"let map of columnMaps\\\"\\n     [ctStyleCell]=\\\"record[map.primaryKey]\\\" \\n                 (click)=\\\"passIt(record.product_id)\\\">\\n           {{ record[map.primaryKey] | formatCell:map.format }}-->\\n     </td>\\n     </ng-container>\\n</tr>\\n    </tbody>\\n</table>\\n</div>\\n\\n<div *ngIf=\\\"isRelink\\\" style=\\\"overflow-x: auto;\\\">\\n    <table class=\\\"table\\\">\\n        <thead>\\n          <tr role=\\\"row\\\">\\n            \\n                <th rowspan=\\\"1\\\" colspan=\\\"1\\\" class=\\\"addHand tableheader\\\" *ngFor=\\\"let map of columnMaps ; let i=index\\\" \\n                (keypress)=\\\"sortCol(i)\\\" (click)=\\\"sortCol(i)\\\"\\n                [ngClass]=\\\"{'my-class': (i === selectedRow && i===index) || (i===index && index===0)}\\\">{{ map.header }}                       \\n                           <span class=\\\"iconGroup\\\" *ngIf=\\\"(i === selectedRow && i===index) || (i===index && index===0)\\\" [ngClass]=\\\"{'toggle': flag && i === selectedRow , 'toggle2':!flag  && i === selectedRow} \\\">⇑</span>                  \\n                </th>\\n              \\n            </tr>\\n        </thead>\\n        <tbody>\\n    <tr *ngFor=\\\"let record of records\\\">\\n    \\n        <ng-container *ngFor=\\\"let map of columnMaps; let i=index\\\">\\n            \\n            <td *ngIf=\\\"i === 0\\\" \\n            [ctStyleCell]=\\\"record[map.primaryKey]\\\"\\n             style=\\\"text-decoration: underline; cursor: pointer;\\\" (click)=\\\"relink(record)\\\">\\n             \\n              {{ record[map.primaryKey] | formatCell:map.format }} \\n         <!--<td *ngFor=\\\"let map of columnMaps\\\"\\n         [ctStyleCell]=\\\"record[map.primaryKey]\\\" \\n                     (click)=\\\"passIt(record.product_id)\\\">\\n               {{ record[map.primaryKey] | formatCell:map.format }}-->\\n         </td>\\n                 <td *ngIf=\\\"i > 0\\\" \\n            [ctStyleCell]=\\\"record[map.primaryKey]\\\"\\n            >\\n             {{ record[map.primaryKey] | formatCell:map.format }} \\n         <!--<td *ngFor=\\\"let map of columnMaps\\\"\\n         [ctStyleCell]=\\\"record[map.primaryKey]\\\" \\n                     (click)=\\\"passIt(record.product_id)\\\">\\n               {{ record[map.primaryKey] | formatCell:map.format }}-->\\n         </td>\\n         </ng-container>\\n    </tr>\\n        </tbody>\\n    </table>\\n    </div>\\n    <confirm-box [flag]=\\\"flagLink\\\" *ngIf=\\\"flagLink\\\"></confirm-box>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/table-layout.component.html\n// module id = ./src/app/shared/table-layout.component.html\n// module chunks = main","import { Component, Input, OnChanges, EventEmitter, Output } from '@angular/core';\nimport {ColumnSetting} from './layout.model'\nimport {Params, Response} from '../data-model';\nimport 'rxjs/add/operator/switchMap';\nimport {Router, ActivatedRoute, ParamMap} from '@angular/router';\nimport { DeleteRecordService } from '../services/delete-record.service';\n \n@Component({\n    selector: 'ct-table',\n    templateUrl: './table-layout.component.html',\n    styleUrls: ['./table-layout.component.css'],\n    providers: [DeleteRecordService]\n })\n\n\n\nexport class TableLayoutComponent implements OnChanges { \n\n\n\n    column: string = 'CategoryName';\n    @Input() records: Params;\n    @Input() caption: string;\n    @Input() settings: ColumnSetting[];\n    @Input() isRelink: boolean = false;\n    @Input() typeToRelink: string; \n    @Input() recordId: number;\n    @Input() type: string;\n    serverDown: boolean = false;\n    flagLink: number = null;\n    @Input() index: number;\n    @Input() flag: boolean;\n    modalType: string;\n\n    isLoading: boolean;\n    @Output() trigger: EventEmitter<number> = new EventEmitter<number>();\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,    private deleteRecordService: DeleteRecordService\n    ){}\n    \n    columnMaps: ColumnSetting[]; \n    selectedRow: number;\n\n\n    ngOnChanges() {\n\n\n        if (this.settings) { \n            this.columnMaps = this.settings;\n        } else { // no settings, create column maps with defaults\n            this.columnMaps = Object.keys(this.records[0])\n\n                .map( key => {\n                     return {\n                         primaryKey: key,\n                         header: key.slice(0, 1).toUpperCase() + \n                            key.replace(/_/g, ' ' ).slice(1),\n                        format: 'default'\n                }\n            });\n        }\n    }\n\n\n\n    sortCol(i: number){\n        this.selectedRow = i;\n\n        console.log(i);\n        this.index = i;\n          \n          this.trigger.emit(this.index);\n    }\n    passIt(pid: number): void{\n\nthis.router.navigate(['/viewproduct', pid]);\n        console.log(pid, \"NOOOO\");\n    }\n    returnUrl(record: any){\n\n        history.pushState(this.records, \"something\");\n        return `/viewproduct/${record.product_id || record.productId}`;\n    }\n\n    relink(record: any){\n        if(confirm(\"Are you sure you want to link it to this product?\")){\n           let obj = {\n\n                    \"product_id\": record.product_id,\n                    \"record_id\": this.recordId,\n                    \"type\": this.type\n\n            }\n\n            this.relinkRecord(obj); \n        }\n        \n    }\n\n    relinkRecord(obj: any){\n        console.log(obj);\n\n\n        this.flagLink = null;\n\n        this.isLoading = true;\n\n        this.deleteRecordService.reLinkRecord(JSON.stringify(obj)).finally(() => this.isLoading = false).subscribe(response => {\n\n            const {message, status, record_id} = response;\n\n            if (status === 202) {\n                this.flagLink = 2;\n               \n            } else if (status === 203) {\n                this.flagLink = 2;\n\n            } else if (status === 204) {\n                this.flagLink = 2;\n            } else if (status === 200) {\n\n                //this.callP.emit(1);\n                this.flagLink = 1;\n                setTimeout(() => {\n                   console.log(\"the record id is\", record_id);\n                    this.router.navigate(['/viewproduct',record_id]);\n                },\n                    4000);\n            }\n            else {\n                this.flagLink = 2;\n            }\n\n        }, (error) => {\n            this.serverDown = true;\n            this.flagLink = 2;\n          \n\n        });\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/table-layout.component.ts","module.exports = \".addButton{\\n    float: right;\\n     margin-right: 10px;\\n \\n     cursor: pointer;\\n    \\n}\\n.container{\\n\\n    width: 100%;\\n    height: 50px;\\n    background-color: #33cccc;\\n    margin-top: 20px;\\n  \\n}\\n.classificationList{\\n    position: relative;\\n    top: 30%;\\n    \\n}\\n.title{\\n    margin-left: 6px;\\n    font-weight: bold;\\n}\\n.tableData{\\n    width: 100%;\\n    position: relative;\\n\\n\\n}\\n/*td:not(:first-child) {\\n    border-left: 1px solid lightgray;\\n}\\n\\ntd:not(:last-child) {\\n    border-right: 1px solid lightgray;\\n}*/\\ntd, th {\\n    padding: 9px;\\n    border: none;\\n}\\nth{\\n    text-align: left;\\n\\n}\\ntr:nth-child(even){\\n    background-color: #f0f5f5;\\n}\\nth:last-child, td:last-child{\\nborder-right: 1px solid lightgray;\\n/*border-left:1px solid lightgray;*/\\n\\n}\\nth:first-child, td:first-child{\\nborder-left: 1px solid lightgray;\\n}\\ntable{\\n    border-collapse: collapse;\\n        width: 100%;\\n    margin-bottom: 20px;\\n}\\ntr:last-child, th{\\n  border-bottom:   1px solid lightgray;\\n}\\ntd:last-child{\\n    text-align: right;\\n}\\nmd-icon{\\n    cursor: pointer;\\n}\\n.addIcon{\\n\\nfont-size: 25px; \\nfloat:right;    \\nmargin-top: -3px; \\ncursor: pointer; \\n\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/table/table.component.css\n// module id = ./src/app/table/table.component.css\n// module chunks = main","module.exports = \"<div>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"classificationList\\\">\\n      <span class=\\\"title\\\">{{caption}}</span>\\n\\n      <span class=\\\"glyphicon glyphicon-plus addIcon\\\" (click)=\\\"addNewRecord()\\\"></span>\\n\\n\\n    </div>\\n    </div>\\n    <div class=\\\"tableData\\\" *ngIf=\\\"records && settings\\\" style=\\\"max-height: 500px; overflow-y: scroll\\\">\\n      <table>\\n<tr>\\n  <th *ngFor=\\\"let map of settings ; let i=index\\\">\\n\\n    {{map.header}}\\n  </th>\\n\\n</tr>\\n<tr *ngFor=\\\"let record of records\\\">\\n\\n  <ng-container *ngFor=\\\"let map of settings; let i=index\\\">\\n    \\n    <td *ngIf=\\\"i === 0\\\" style=\\\"text-decoration: underline; cursor: pointer;\\\">  <a [routerLink]='viewData(record)'>{{ record[map.primaryKey]}}\\n      </a>\\n</td>\\n<td *ngIf=\\\"i > 0\\\">\\n\\n\\n  {{ record[map.primaryKey] }}\\n\\n</td>\\n</ng-container>\\n</tr>\\n\\n\\n\\n\\n</table>\\n</div>\\n\\n\\n\\n\\n<!--<div class=\\\"container\\\" *ngIf=\\\"flager === 2\\\">\\n  <div class=\\\"classificationList\\\">\\n    <span class=\\\"title\\\">{{caption}}</span>\\n\\n    <span class=\\\"glyphicon glyphicon-plus addIcon\\\" (click)=\\\"addLabel()\\\"></span>\\n\\n\\n\\n  </div>\\n  <div class=\\\"tableData\\\" *ngIf=\\\"records && settings\\\">\\n    <table style=\\\"width:100%;\\\">\\n<tr>\\n  <th *ngFor=\\\"let map of settings ; let i=index\\\">\\n\\n    {{map.header}}\\n  </th>\\n\\n</tr>\\n<tr *ngFor=\\\"let record of records; let i=index\\\">\\n\\n  <ng-container *ngFor=\\\"let map of settings\\\">\\n\\n    <td *ngIf=\\\"i===0\\\" style=\\\"text-decoration: underline; cursor: pointer;\\\"> {{ record[map.primaryKey]}}\\n\\n</td>\\n<td *ngIf=\\\"i > 0\\\">\\n  {{ record[map.primaryKey] }}\\n\\n</td>\\n</ng-container>\\n</tr>\\n\\n\\n\\n\\n</table>\\n</div>\\n</div>-->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/table/table.component.html\n// module id = ./src/app/table/table.component.html\n// module chunks = main","import { Component, EventEmitter, Input,Output } from '@angular/core';\nimport {ColumnSetting} from '../shared/layout.model'\nimport {Params, Response} from '../data-model';\n\n@Component({\n    selector: 'custom-table',\n    templateUrl: './table.component.html',\n    styleUrls: ['./table.component.css']\n\n\n})\nexport class TableComponent{\n\n    @Input() records: any;\n    @Input() caption: string;\n    @Input() flager: number;\n    @Input() settings: ColumnSetting[];\n\n    @Output() deleteEvent = new EventEmitter<boolean>();\n    @Output() addSalesRecord = new EventEmitter<boolean>();\n     @Output() addLabelRecord = new EventEmitter<boolean>();\n    @Output() addRecord = new EventEmitter<number>();\n\n     \n    title =\"Classifications\";\n    addClass: string;\n    flag: boolean = true;\n   \nadd(name: string){\n    console.log(\"CLICKED\");\n    // this.addEvent.emit(true);\n     this.flag = true;\n    this.addClass = name;\n}\n\n// checkModal(flag: boolean){\n//     this.addClass = null;\n// }\n// delete(){\n//     this.deleteEvent.emit(true);\n// }\n// update(){\n//     this.updateEvent.emit(true);\n\n// }\n\naddSales(){\nthis.addSalesRecord.emit(true);\n}\naddLabel(){\nthis.addLabelRecord.emit(true);\n}\n\naddNewRecord(){\nconsole.log(\"here again\");\nthis.addRecord.emit(this.flager);\n\n\n}\nviewData(value: any): string{\nconsole.log(\"something\", value);\nif(this.flager ===1) {\n       //encodeURI\n   return  `/view-sales/${value.sales_id}`;\n\n   }else if(this.flager ===2){\n   return  `/view-package/${value.label_id}`;\n   }\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/table/table.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { TableComponent } from './table.component';\nimport {  CommonModule} from '@angular/common';  \nimport { MatIconModule} from '@angular/material/icon';\nimport {RouterModule} from '@angular/router'\nimport {ViewSalesModule} from '../views/viewSales/view-sales.module'\nimport {ViewPackageModule} from '../views/viewPackage/view-package.module'\n\n@NgModule({\n    imports:[\nBrowserModule,\nCommonModule,\nMatIconModule,\nRouterModule,\nViewSalesModule,\nViewPackageModule\n    ],\n    declarations: [ \n        TableComponent\n         ],\n\n    exports: [ TableComponent ]\n})\nexport class CustumTableModule {\n\n\n\n }\n\n\n// WEBPACK FOOTER //\n// ./src/app/table/table.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \n import { ViewPackageComponent} from './view-package.component';\n//   import {CreateNftComponent} from '../../createRecords/createNft/create-nft.component'\n\nconst viewPackageRoutes: Routes = [\n  { path: 'view-package/:id',  component: ViewPackageComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(viewPackageRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ViewPackageRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewPackage/view-package-routing.module.ts","module.exports = \"td {\\n    padding: 9px;\\n    border: none;\\n}\\nth{\\n    padding: 9px;\\n    text-align: left;\\n    border-top: 1px solid lightgray;\\n\\n}\\ntr:nth-child(even){\\n    background-color: #f0f5f5;\\n}\\nth:last-child, td:last-child{\\nborder-right: 1px solid lightgray;\\n/*border-left:1px solid lightgray;*/\\n\\n}\\nth:first-child, td:first-child{\\nborder-left: 1px solid lightgray;\\n}\\ntable{\\n    border-collapse: collapse;\\n        width: 100%;\\n    margin-bottom: 20px;\\n}\\ntr:last-child, th{\\n  border-bottom:   1px solid lightgray;\\n}\\ntd:last-child{\\n    text-align: right;\\n}\\n.imageContainer{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n    -webkit-box-pack: justify;\\n        -ms-flex-pack: justify;\\n            justify-content: space-between\\n}\\n.box{\\n    width: 33.3333%;\\n    -webkit-box-flex:1;\\n        -ms-flex:1;\\n            flex:1;\\n    height: 180px;\\n    margin:10px;\\n}\\n/*.panel-heading{\\n    padding: 1.5px;\\n}\\n.panel-body{\\n    padding: 2px;\\n}*/\\n.close{\\n    position: relative;\\n    top: 4px;\\n    right: 27px;\\n    z-index: 10;\\n    font-size: 2em;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/viewPackage/view-package.component.css\n// module id = ./src/app/views/viewPackage/view-package.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"packageData\\\">\\n\\n        <div style=\\\"margin-bottom:10px\\\">\\n                <h2 >Package Details</h2>\\n            \\n        </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"callViewProduct()\\\" style=\\\"margin-top:0px\\\">View Product</button>\\n            \\n</div>\\n<div class=\\\"col-md-6\\\" style=\\\"text-align: right\\\" >\\n\\n<!--<a class=\\\"btn btn-default\\\" routerLink=\\\"./editProduct\\\" routerLinkActive=\\\"active\\\">Edit Product</a>-->\\n<button class=\\\"btn btn-default\\\" (click)=\\\"callDelete()\\\" [disabled]=\\\"submitted\\\">Delete Package</button>\\n<button class=\\\"btn btn-default\\\" (click)=\\\"callEdit()\\\" [disabled]=\\\"submitted\\\">Edit Package</button>\\n<button class=\\\"btn btn-default\\\" (click)=\\\"callRelink()\\\" [disabled]=\\\"submitted\\\">Relink Package</button>\\n\\n\\n\\n</div>\\n</div>\\n\\n\\n\\n<div class=\\\"container2\\\">\\n\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#home\\\">1</a></li>\\n        <li><a data-toggle=\\\"tab\\\" href=\\\"#menu1\\\">2</a></li>\\n\\n    </ul>\\n\\n    <div class=\\\"tab-content\\\">\\n        <div id=\\\"home\\\" class=\\\"tab-pane fade in active\\\">\\n            <!--Start of the first tab-->\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Informed Dining Program\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.informed_dining_program}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Nft Last Update Date\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.nft_last_update_date}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Child Item\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.child_item}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--<table style=\\\"width:100%; margin-top:10px;\\\">-->\\n            <!--<tr>\\n        <th>Informed  Dining Program</th>\\n        <td>{{packageData.informed_dining_program}}</td>\\n    </tr>\\n        <tr>\\n        <th>Nft Last Update Date</th>\\n        <td>{{packageData.nft_last_update_date}}</td>\\n    </tr>\\n\\n        <tr>\\n        <th>Child Item</th>\\n        <td>{{packageData.child_item}}</td>\\n    </tr>\\n               <tr>\\n        <th>Product Grouping</th>\\n        <td>{{packageData.product_grouping}}</td>\\n    </tr>-->\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Label UPC\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_upc}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Label Description\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_description}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Classification Number\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.classification_number}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Classification Name\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.classification_name}}\\n                        </div>\\n                    </div>\\n                    <!--end of the first tab-->\\n                </div>\\n            </div>\\n\\n\\n\\n        </div>\\n        <div id=\\\"menu1\\\" class=\\\"tab-pane fade\\\">\\n            <!--Start of the second tab-->\\n           <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Nielsen Item Rank\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.nielsen_item_rank}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Nielsen Category \\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_nielsen_category}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Package Brand\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_brand}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n\\n                       <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Package Manufacturer\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_manufacturer}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Package Country \\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_country}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Net Quantity\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_size}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n\\n                                   <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Net Quantity Unit of MEasure\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.package_size_unit_of_measure}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                            Number of Units \\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.number_of_units}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                           Multi Part Flag\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.multi_part_flag}}\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-12\\\">\\n                                    <div class=\\\"panel panel-info\\\">\\n                        <div class=\\\"panel-heading\\\">\\n                           Storage Type\\n                        </div>\\n\\n                        <div class=\\\"panel-body\\\">\\n                            {{packageData.storage_type}}\\n                        </div>\\n                    </div>\\n            </div>\\n            </div>\\n\\n<!--end of the second tab-->\\n\\n</div>\\n\\n\\n<!--end of fourth tab-->\\n\\n\\n</div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n\\n    <!--start of the left panel-->\\n    <div class=\\\"col-sm-6\\\" style=\\\"min-height: 500px\\\">\\n\\n<div class=\\\"row\\\">\\n    <div >\\n\\n\\n        <div id=\\\"tab\\\" class=\\\"btn-group btn-group-justified\\\" data-toggle=\\\"buttons\\\">\\n            <a href=\\\"#sold\\\" class=\\\"btn btn-default active\\\" data-toggle=\\\"tab\\\">\\n                <input type=\\\"radio\\\" />As sold\\n            </a>\\n            <a href=\\\"#prepared\\\" class=\\\"btn btn-default\\\" data-toggle=\\\"tab\\\">\\n                <input type=\\\"radio\\\" />As Prepared\\n            </a>\\n\\n        </div>\\n\\n        <div class=\\\"tab-content\\\">\\n            <div class=\\\"tab-pane active\\\" id=\\\"sold\\\">\\n\\n\\n\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                Per Serving <br> Size\\n                            </div>\\n\\n                            <div class=\\\"panel-body\\\">\\n                                {{packageData.as_sold_per_serving_amount}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                Per Serving Unit of Measure\\n                            </div>\\n\\n                            <div class=\\\"panel-body\\\">\\n                                {{packageData.as_sold_unit_of_measure}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\">\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                Per Serving Amount in Grams\\n                            </div>\\n\\n                            <div class=\\\"panel-body\\\">\\n                                {{packageData.as_sold_per_serving_amount_in_grams}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"panel panel-info\\\">\\n                    <div class=\\\"panel-heading\\\">\\n                        Common Household Measure\\n                    </div>\\n\\n                    <div class=\\\"panel-body\\\">\\n                        {{packageData.common_household_measure}}\\n                    </div>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"componentViewSold\\\">\\n                    <button class=\\\"btn btn-default\\\" (click)=\\\"editNft(true)\\\" style=\\\"float:right\\\">Edit Nutrition Fact Table</button>\\n                    <table>\\n                        <tr>\\n                            <th *ngFor=\\\"let map of nftSettings ; let i=index\\\">\\n\\n                                {{map.header}}\\n                            </th>\\n\\n                        </tr>\\n                        <tr *ngFor=\\\"let record of componentViewSold\\\">\\n\\n                            <ng-container *ngFor=\\\"let map of nftSettings; let i=index\\\">\\n\\n                                <td> {{ record[map.primaryKey]}}\\n\\n                                </td>\\n\\n                            </ng-container>\\n                        </tr>\\n\\n\\n\\n\\n                    </table>\\n                </div>\\n                <div *ngIf=\\\"!componentViewSold\\\">\\n                    \\n\\n                    <a [routerLink]='getPathAsSold()' class=\\\"btn btn-default\\\">Add NFT as sold</a>\\n\\n                </div>\\n\\n                <!--End of as sold content-->\\n            </div>\\n            <div class=\\\"tab-pane\\\" id=\\\"prepared\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                Per Serving Size\\n                            </div>\\n\\n                            <div class=\\\"panel-body\\\">\\n                                {{packageData.as_prepared_per_serving_amount}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                Per Serving Unit of Measure\\n                            </div>\\n\\n                            <div class=\\\"panel-body\\\">\\n                                {{packageData.as_prepared_unit_of_measure}}\\n                            </div>\\n                        </div>\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                Per Serving Amount in Grams\\n                            </div>\\n\\n                            <div class=\\\"panel-body\\\">\\n                                {{packageData.as_prepared_per_serving_amount_in_grams}}\\n                            </div>\\n                        </div>\\n\\n\\n\\n                    </div>\\n\\n\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"panel panel-info\\\">\\n                            <div class=\\\"panel-heading\\\">\\n                                Calculated?\\n                            </div>\\n\\n                            <div class=\\\"panel-body\\\">\\n                                {{packageData.calculated}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n                <div *ngIf=\\\"componentViewPrepared\\\">\\n                                        <button class=\\\"btn btn-default\\\" (click)=\\\"editNft(false)\\\" style=\\\"float:right\\\">Edit Nutrition Fact Table</button>\\n\\n\\n                    <table>\\n                        <tr>\\n                            <th *ngFor=\\\"let map of nftSettings ; let i=index\\\">\\n\\n                                {{map.header}}\\n                            </th>\\n\\n                        </tr>\\n                        <tr *ngFor=\\\"let record of componentViewPrepared\\\">\\n\\n                            <ng-container *ngFor=\\\"let map of nftSettings; let i=index\\\">\\n\\n                                <td> {{ record[map.primaryKey]}}\\n\\n                                </td>\\n\\n                            </ng-container>\\n                        </tr>\\n\\n\\n\\n\\n                    </table>\\n                </div>\\n                <div *ngIf=\\\"!componentViewPrepared\\\">\\n                    <a [routerLink]='getPath()' class=\\\"btn btn-default\\\">Add NFT as prepared</a>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n</div>\\n</div>\\n<!--end of the left panel-->\\n<!--start of the right panel-->\\n<div class=\\\"col-sm-6\\\">\\n\\n\\n\\n    <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            Ingredients\\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n            {{packageData.ingredients}}\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            Nutrition Fact Table\\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n            {{packageData.nutrition_fact_table}}\\n        </div>\\n    </div>\\n\\n    <!-- <img src=\\\"assets/039978303943.jpeg\\\" alt=\\\"Smiley face\\\" height=\\\"300\\\" width=\\\"300\\\" class=\\\"image\\\" (click)=\\\"openImage()\\\"> -->\\n    <!-- add-image -->\\n    <button  *ngIf=\\\"!showForm\\\" class=\\\"btn btn-default\\\" (click)=\\\"addImage()\\\" >Add image</button>\\n\\n    <add-image [id]='package_id' *ngIf=\\\"showForm && package_id\\\" (imagesList)=\\\"updateImageGalery($event)\\\"></add-image>\\n\\n    <div *ngIf=\\\"listOfImages && !showForm\\\" class=\\\"imageContainer\\\">\\n        \\n            \\n            <ng-container *ngFor=\\\"let image of listOfImages \\\">\\n                   \\n                    <img  [src]=\\\"returnImage(image.image_name)\\\" alt=\\\"Label image\\\" title=\\\"Click on the top right icon to delete this image\\\" class=\\\"image box\\\" (click)=\\\"openImage()\\\">\\n                    <span class=\\\"close\\\" (click)=\\\"confirmAction(image.image_id)\\\">&times;</span>\\n            </ng-container>\\n          \\n        \\n    </div>\\n\\n    \\n\\n</div>\\n</div>\\n<!--end of the right panel-->\\n\\n<div class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Storage Statements\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        {{packageData.storage_statements}}\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Health Claims\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        {{packageData.health_claims}}\\n    </div>\\n</div>\\n\\n<div class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Other Package Statements\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        {{packageData.other_package_statements}}\\n    </div>\\n</div>\\n<div class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Suggested Direction\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        {{packageData.suggested_directions}}\\n    </div>\\n</div>\\n\\n<div class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Nutrient Claims\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        {{packageData.nutrient_claims}}\\n    </div>\\n</div>\\n\\n<div class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Package Comment\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        {{packageData.package_comment}}\\n    </div>\\n</div>\\n<table style=\\\"width:100%;\\\" class=\\\"table table-striped\\\">\\n<tr>\\n    <th>Package Source</th>\\n    <th>Collection Date</th>\\n    <th>Edited By</th>\\n    <th>Creation Date</th>\\n    <th>Last Edit Date</th>\\n</tr>\\n\\n<tr>\\n\\n    <td>{{packageData.package_source}}</td>\\n\\n\\n    <td>{{packageData.package_collection_date}}</td>\\n\\n\\n    <td>{{packageData.edited_by}}</td>\\n\\n    <td>{{packageData.creation_date}}</td>\\n\\n\\n    <td>{{packageData.last_edit_date}}</td>\\n</tr>\\n\\n</table>\\n\\n</div>\\n<confirm-box [flag]=\\\"flag\\\"></confirm-box>\\n\\n<modal-box [modalType]=\\\"type\\\"\\n            (fireBack)=\\\"responseFromModal($event)\\\">\\n            </modal-box>\\n\\n<confirm-box [flag]=\\\"confirmDeleteImageTransation\\\"></confirm-box>\\n<!-- <confirm-box [flag]=\\\"flag_add_image\\\"></confirm-box> -->\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/viewPackage/view-package.component.html\n// module id = ./src/app/views/viewPackage/view-package.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Component, OnChanges, Input, OnInit, AfterContentChecked } from '@angular/core';\nimport { Response,  labelViewFields, NftAsSold, componentView, NftAsPrepared} from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { GetRecordService } from '../../services/getRecord.service';\nimport { DeleteRecordService } from '../../services/delete-record.service';\nimport { ColumnSetting } from '../../shared/layout.model'\n\nimport { Observable } from 'rxjs/Observable';\nimport { AbstractControl } from '@angular/forms';\n\nexport type ImageModel = {\n    image_name: string,\n    image_id: number\n};\n\ndeclare var $: any;\n@Component({\n    selector: 'view-package',\n    templateUrl: './view-package.component.html',\n    styleUrls: ['./view-package.component.css'],\n    providers: [DeleteRecordService]\n\n})\n\n\n\nexport class ViewPackageComponent implements OnInit {\n\n    flag: number;\n    flag_add_image: number;\n    Ids: any;\n    confirmDeleteImageTransation: number; \n    packageData: labelViewFields;\n    type:string; \n    isLoading: boolean;\n    emptyField: string = null;\n    serverDown: boolean;\n    submitted: boolean = false;\n    nftAsSold: NftAsSold;\n    nftAsPrepared: NftAsPrepared;\n    componentViewPrepared: componentView[];\n    componentViewSold: componentView[];\n    idToRelink: number = null;\n    @Input() listOfImages: ImageModel[];\n    imagesBackUp: ImageModel[];\n    showForm: boolean = false; \n    package_id: number;\n\n    nftSettings: ColumnSetting[] = [\n        { primaryKey: 'name', header: 'Component' },\n        { primaryKey: 'amount', header: 'Amount' },\n        { primaryKey: 'unit_of_measure', header: 'Unit of Measure' },\n        { primaryKey: 'daily_value', header: '% DV' },\n        { primaryKey: 'amount_per100g', header: 'Amount Per 100g' }\n\n    ];\n\n\n\n    constructor(\n\n        private getRecordService: GetRecordService,\n        private deleteRecordService: DeleteRecordService,\n        private router: Router,\n        private route: ActivatedRoute) {\n\n\n\n    }\n\n\n    ngOnInit(): void {\n        \n         this.packageData=null;\n         this.componentViewPrepared = null;\n\n        this.route.paramMap\n            .switchMap((param: ParamMap) =>\n\n                this.getRecordService.getPackageRecords(param.get('id'))).subscribe(\n            response => {\n                console.log(response);\n\n                this.packageData = response[0].data.dataList[0];\n                this.package_id = this.packageData.package_id;\n                this.nftAsPrepared = response[2];\n                this.listOfImages = response[3].dataList;\n                this.imagesBackUp= response[3].dataList;\n                if(this.nftAsPrepared.nft.length < 1){\n                    this.componentViewPrepared = null;\n                }else{\n                this.componentViewPrepared = this.nftAsPrepared.nft;\n\n                }\n\n                 this.nftAsSold = response[1];\n                if(this.nftAsSold.nft.length < 1){\n                    this.componentViewSold = null;\n                }else{\n                this.componentViewSold = this.nftAsSold.nft;\n\n                }\n                this.ngOnChanges();\n\n            }\n            );\n\n\n\n    }\n    ngOnChanges() {\n\n\n    }\n    getPath(){\n         return  `/add-nft-prepared/${+this.route.snapshot.paramMap.get('id')}`;\n    }\n    getPathAsSold(){\n                 return  `/add-nft/${+this.route.snapshot.paramMap.get('id')}`;\n\n    }\n    editNft(flag: boolean){\n        //edit-nft-sold\n\n        \n        // if(flag){\n        // this.router.navigate(['/edit-nft-sold', this.route.snapshot.paramMap.get('id'),  true]);\n        // }else{\n\n                    this.router.navigate(['/edit-nft', this.route.snapshot.paramMap.get('id'),  flag]);\n\n        \n    }\n\n    addImage(){\n        this.showForm = true; \n    }\n\n\nopenImage(){\n    $('.image').viewer();\n\t\t\t\t//$('.images').viewer();\n}\n\ncallEdit(){\n            this.router.navigate(['/edit-label', this.packageData.package_id])\n        this.flag = null;\n}\ncallDelete(){\n    this.type = 'package';\n}\n\nresponseFromModal(value: number) {\n\n    if (value == 2) {\n        this.type = null;\n        this.deleteLabel(this.packageData.package_id);\n        this.type = null;\n\n    } else if(value==1){\n        this.type = null;\n        this.callRelink();\n    }else {\n          this.type = null;\n    }\n\n}\ncallRelink(){\n    this.router.navigate(['/product-relink', this.packageData.package_id, 'package']);\n}\ndeleteLabel(id: number | string) {\n    this.submitted = true;\n    this.deleteRecordService.deleteLabelRecord(id).finally(() => this.isLoading = false).subscribe(response => {\n\n        const {message, status} = response;\n\n        if (status === 202) {\n            this.flag = 2;\n        } else if (status === 203) {\n            this.flag = 2;\n\n        } else if (status === 204) {\n            this.flag = 2;\n        } else if (status === 200) {\n            this.flag = 1;\n\n            setTimeout(() => {\n\n                this.router.navigate(['/viewproduct', this.packageData.product_id]);\n            },\n                4000);\n        }\n        else {\n            this.flag = 2;\n        }\n\n    }, (error) => {\n        this.serverDown = true;\n        this.flag = 2;\n        this.submitted = false;\n\n    });\n\n}\ncallViewProduct(){\n    this.router.navigate(['/viewproduct', this.packageData.product_id]);\n}\nreturnImage(imagePath : string){\n    return \"http://localhost:8080/fcdr-rest-service/rest/PackageService/getLabelImages/\"+imagePath;\n}\n\nupdateImageGalery(imageList: ImageModel []){\n    console.log(imageList, \"is the image list\");\n    this.confirmDeleteImageTransation = null;\n    if(imageList== null){\n        this.confirmDeleteImageTransation = 2;\n     this.listOfImages = this.imagesBackUp;\n     this.showForm = false;\n   \n       \n    }else{\n        this.confirmDeleteImageTransation = 1;\n    this.listOfImages = imageList;\n    this.imagesBackUp = imageList;\n    this.showForm = false;\n   \n    }\n}\nconfirmAction(id: any){\n    this.confirmDeleteImageTransation = null;\n    if(!window.confirm(\"Are you sure you want to delete this image?\")) return false;\n\n    this.route.paramMap\n    .switchMap((param: ParamMap) =>\n\n        this.deleteRecordService.deleteImage(id)).subscribe(\n    response => {\n        console.log(response);\n        if(response.status == 200){\n            this.listOfImages = response.dataList;\n            this.confirmDeleteImageTransation = 1;\n\n        }else{\n            this.listOfImages = this.imagesBackUp;\n            this.confirmDeleteImageTransation = 2;\n\n        }\n\n    }\n    , (error) => {\n        this.confirmDeleteImageTransation = 2;\n        this.listOfImages = this.imagesBackUp;\n        this.serverDown = true;\n        this.flag = 2;\n        this.submitted = false;\n\n    });\n}\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewPackage/view-package.component.ts","import { NgModule } from '@angular/core';\n import { CommonModule } from '@angular/common';\n import { ViewPackageComponent} from './view-package.component';\n\nimport {GetRecordService} from '../../services/getRecord.service'\nimport {ModalBoxModule} from '../../modal-box/modal-box.module'\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport {RouterModule} from '@angular/router';\nimport {CreateNftAsPreparedModule} from '../../createRecords/createNftPrepared/create-nft-as-prepared.module';\nimport {CreateNftModule} from '../../createRecords/createNft/create-nft.module';\nimport {ViewPackageRoutingModule} from './view-package-routing.module';\nimport {AddImageModule} from '../../addImage/add-image.module'\n\n@NgModule({\n    imports:[\n        CommonModule,\n        ConfirmBoxModule,\n        ModalBoxModule,\n        RouterModule,\n        CreateNftAsPreparedModule,\n        \n        ViewPackageRoutingModule,\n        AddImageModule\n         // CreateNftModule\n      \n       \n    ],\n    declarations:[\n    ViewPackageComponent\n    ],\n    providers: [\n        GetRecordService\n    ]\n\n})\n\n\nexport class ViewPackageModule{\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewPackage/view-package.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewProductComponent} from './view-product.component';\nimport { EditProductComponent }  from '../../editForms/editProduct/edit-product.component';\n\nconst viewProductRoutes: Routes = [\n\n    {\n        path: 'viewproduct/:id', component: ViewProductComponent\n    },\n\n\n];\n\n@NgModule({\n  imports: [\n            RouterModule.forChild(\n            viewProductRoutes\n        )\n  ],\n  declarations: []\n})\nexport class ViewProductRoutingModule {\n\n\n }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewProduct/view-product-routing.module.ts","module.exports = \"td, th {\\n    padding: 9px;\\n    border: none;\\n}\\nth{\\n    text-align: left;\\n\\n}\\ntr:nth-child(odd){\\n    background-color: #f0f5f5;\\n}\\nth:last-child, td:last-child{\\nborder-right: 1px solid lightgray;\\nborder-left:1px solid lightgray;\\n\\n}\\nth:first-child, td:first-child{\\nborder-left: 1px solid lightgray;\\n}\\ntable{\\n    border-collapse: collapse;\\n}\\ntr:last-child, th{\\n  border-bottom:   1px solid lightgray;\\n}\\n.displayTables{\\n    margin-bottom:124px;\\n}\\n/*td:last-child{\\n    text-align: right;\\n}\\n tr:first-child{\\n\\t border-top: 1px solid lightgray;\\n\\n }*/\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/viewProduct/view-product.component.css\n// module id = ./src/app/views/viewProduct/view-product.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!editFields\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2 style=\\\"margin-top:0px\\\">Product Details</h2>\\n</div>\\n<div class=\\\"col-md-6\\\" style=\\\"text-align: right\\\" >\\n\\n  <button class=\\\"btn btn-default\\\" (click)=\\\"callDelete()\\\" [disabled]=\\\"submitted\\\">Delete Product</button>\\n  <!--<a class=\\\"btn btn-default\\\" routerLink=\\\"./editProduct\\\" routerLinkActive=\\\"active\\\">Edit Product</a>-->\\n\\n<button class=\\\"btn btn-default\\\" (click)=\\\"callEdit()\\\" [disabled]=\\\"submitted\\\">Edit Product</button>\\n\\n\\n</div>\\n</div>\\n\\n\\n<div *ngIf=\\\"params\\\" class=\\\"viewProduct\\\">\\n  <table style=\\\"width:100%; margin-top:10px;\\\">\\n\\n<tr>\\n  <th>Classification Name</th>\\n  <td>{{params.classification_name}}</td>\\n</tr>\\n\\n<tr>\\n  <th>Classification Number</th>\\n  <td>{{params.classification_number}}</td>\\n\\n</tr>\\n<tr>\\n  <th>Classification Type</th>\\n  <td>{{params.classification_type}}</td>\\n\\n</tr>\\n<tr>\\n  <th>Manufacturer</th>\\n  <td>{{params.product_manufacturer}}</td>\\n</tr>\\n\\n<tr>\\n  <th>Brand</th>\\n  <td>{{params.product_brand}}</td>\\n\\n</tr>\\n<tr>\\n  <th>CNF CODE</th>\\n  <td>{{params.cnf_code}}</td>\\n\\n</tr>\\n<tr>\\n  <th>Cluster Number</th>\\n  <td>{{params.cluster_number}}</td>\\n\\n</tr>\\n\\n<tr>\\n  <th>Description</th>\\n  <td>{{params.product_description}}</td>\\n\\n</tr>\\n<tr>\\n  <th>Restaurant Type</th>\\n  <td>{{params.restaurant_type}}</td>\\n\\n</tr>\\n<tr>\\n  <th>Type</th>\\n  <td>{{params.type}}</td>\\n\\n</tr>\\n</table>\\n<table style=\\\"width:100%; margin-top:10px;\\\">\\n\\n<tr>\\n  <th>Creation Date</th>\\n  <th>Last Edit date</th>\\n  <th>Edited By</th>\\n</tr>\\n<tr>\\n  <td>{{params.creation_date}}</td>\\n  <td>{{params.last_edit_date}}</td>\\n  <td>{{params.edited_by}}</td>\\n</tr>\\n</table>\\n\\n</div>\\n</div>\\n<!--<div *ngIf=\\\"editFields\\\">\\n<edit-product [product]=\\\"editFields\\\"\\n              (callP)=\\\"receiveCall($event)\\\"\\n      \\n      >-->\\n\\n<!--</edit-product>\\n</div>-->\\n<!--<confirm-box [flag]=\\\"flag\\\"></confirm-box>-->\\n\\n<div *ngIf=\\\"salesData\\\" class=\\\"displayTables\\\" >\\n  <custom-table [records]=\\\"salesData\\\" \\n                [caption]=\\\"'Sales Records'\\\" \\n                [settings]=\\\"settingsSales\\\"\\n                [flager]=\\\"1\\\"\\n                (addRecord)=\\\"addNewRecord($event)\\\"\\n              >\\n\\n  </custom-table>\\n\\n</div>\\n\\n  <div *ngIf=\\\"labelData\\\" class=\\\"displayTables\\\" >\\n  <custom-table [records]=\\\"labelData\\\" \\n                [caption]=\\\"'Label Records'\\\" \\n                [settings]=\\\"settingsLabel\\\"\\n                [flager]=\\\"2\\\"\\n                (addRecord)=\\\"addNewRecord($event)\\\"\\n\\n                >\\n\\n  </custom-table>\\n\\n  </div>\\n\\n\\n  <confirm-box [flag]=\\\"flag\\\"></confirm-box>\\n<modal-box [modalType]=\\\"type\\\"\\n            (fireBack)=\\\"responseFromModal($event)\\\">\\n            </modal-box>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/viewProduct/view-product.component.html\n// module id = ./src/app/views/viewProduct/view-product.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Component, OnChanges, Input, OnInit } from '@angular/core';\nimport { Response, productAllFields, salesFieldsView, labelFieldsView } from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { GetRecordService } from '../../services/getRecord.service';\n\nimport { Observable } from 'rxjs/Observable';\nimport { FormGroup, FormBuilder, FormArray, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ColumnSetting } from '../../shared/layout.model'\nimport { DeleteRecordService } from '../../services/delete-record.service';\n\n@Component({\n    selector: 'view-product',\n    templateUrl: './view-product.component.html',\n    styleUrls: ['./view-product.component.css'],\n    providers: [DeleteRecordService]\n})\n\n\nexport class ViewProductComponent implements OnInit {\n\n    flag: number;\n    Ids: any;\n    params: productAllFields;\n    salesData: salesFieldsView[];\n    labelData: labelFieldsView[];\n    editFields: productAllFields = null;\n    productForm: FormGroup;\n    emptyField: string = null;\n    type: string;\n    submitted: boolean = false;\n    isLoading: boolean;\n    serverDown: boolean;\n\n\n\n    settingsSales: ColumnSetting[] = [\n        { primaryKey: 'sales_upc', header: 'Sales UPC' },\n        { primaryKey: 'nielsen_category', header: 'Nielsen Category' },\n        { primaryKey: 'sales_year', header: 'Sales Year' },\n        { primaryKey: 'sales_source', header: 'Sales Source' },\n        { primaryKey: 'dollar_volume', header: 'Dollar Volume' }\n\n    ];\n\n\n    settingsLabel: ColumnSetting[] = [\n        { primaryKey: 'label_upc', header: 'Label UPC' },\n        { primaryKey: 'label_description', header: 'Label Description' },\n        { primaryKey: 'label_collection_date', header: 'Label Collection Date' },\n        { primaryKey: 'label_source', header: 'Label  Source' },\n        { primaryKey: 'label_creation_date', header: 'Label Creation Date' },\n        { primaryKey: 'label_last_edit_date', header: 'Last Edit Date' },\n        { primaryKey: 'label_last_edited_by', header: 'Edited By' }\n\n    ];\n\n    constructor(private fb: FormBuilder,\n        private searchService: SearchService,\n        private getRecordService: GetRecordService,\n        private deleteRecordService: DeleteRecordService,\n        private router: Router,\n        private route: ActivatedRoute) {\n\n\n\n    }\n\n\n    ngOnInit(): void {\n     \n    this.params=null;\n    this.salesData=null;\n    this.labelData=null;\n    this.editFields = null;\n        this.route.paramMap\n            .switchMap((param: ParamMap) =>\n\n                this.getRecordService.getAllRecords(param.get('id'))).subscribe(\n            response => {\n                console.log(response);\n                //this.listOfClass = response[0];\n                //this.params = response[0].data.values[0];\n                this.params = response[0].data.dataList[0];\n                this.salesData = response[2].data.dataList;\n                this.labelData = response[1].data.dataList;\n\n            }\n            );\n\n    }\n    ngOnChanges() {\n        \n\n    }\n\n    // updateView(value: number){\n\n    //     this.ngOnInit();\n    //     this.flag = value;\n\n    // }\n\n\n    addSales(event: boolean){\n        if(event){\n\n\n            this.router.navigate(['/salescreate'], {queryParams:{ id:this.params.product_id}, skipLocationChange: true });\n        }\n    }\n    addLabel(event: boolean){\n        if(event){\n\n            this.router.navigate(['/add-label', this.params.product_id])\n        }\n\n    }\n    callEdit() {\n        this.router.navigate(['/edit-product', this.params.product_id])\n        this.flag = null;\n       \n    }\n    receiveCall(event: number){\n\n            this.editFields = null;\n            this.flag = event;\n            this.ngOnInit();\n    }\n\n    addNewRecord(value: number){\n        console.log(\"clicked\")\n        if(value===1){\n            this.router.navigate(['/salescreate', this.params.product_id])\n        }else if(value===2){\n            this.router.navigate(['/add-label', this.params.product_id])\n        }\n    }\n\n\n    callDelete() {\n        this.type = 'product';\n    }\n    responseFromModal(value: number) {\n        if (value ==2) {\n            this.type = null;\n            this.deleteProduct(this.params.product_id);\n            this.type = null;\n\n        } else {\n              this.type = null;\n        }\n    }\n    deleteProduct(id: number | string) {\n        this.submitted = true;\n        this.deleteRecordService.deleteProductRecord(id).finally(() => this.isLoading = false).subscribe(response => {\n\n            const {message, status} = response;\n\n            if (status === 202) {\n                this.flag = 2;\n            } else if (status === 203) {\n                this.flag = 2;\n\n            } else if (status === 204) {\n                this.flag = 2;\n            } else if (status === 200) {\n                this.flag = 1;\n\n                setTimeout(() => {\n\n                    this.router.navigate(['/searchengine/search']);\n                },\n                    4000);\n            }\n            else {\n                this.flag = 2;\n            }\n\n        }, (error) => {\n            this.serverDown = true;\n            this.flag = 2;\n            this.submitted = false;\n\n        });\n\n    }\n\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewProduct/view-product.component.ts","import { NgModule } from '@angular/core';\n import { CommonModule } from '@angular/common';\n import { ViewProductComponent} from './view-product.component';\nimport { SearchService } from '../../services/search.service';\nimport {GetRecordService} from '../../services/getRecord.service'\nimport {CustumTableModule} from '../../table/table.module'\nimport {EditProductModule} from '../../editForms/editProduct/edit-product.module'\nimport {ModalBoxModule} from '../../modal-box/modal-box.module'\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n import {MatCardModule} from '@angular/material/card';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ViewProductRoutingModule} from './view-product-routing.module'\n\n@NgModule({\n    imports:[\n        CommonModule,\n        CustumTableModule,\n        ModalBoxModule,\n      //  EditProductModule,\n        ConfirmBoxModule,\n        ViewProductRoutingModule\n       \n    ],\n    declarations:[\n    ViewProductComponent\n    ],\n    providers: [\n        SearchService,\n        GetRecordService\n    ]\n\n\n})\n\nexport class ViewProductModule{\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewProduct/view-product.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n \n import { ViewSalesComponent} from './view-sales.component';\n \nconst viewSalesRoutes: Routes = [\n  { path: 'view-sales/:id',  component: ViewSalesComponent }\n];\n \n@NgModule({\n  imports: [\n    RouterModule.forChild(viewSalesRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ViewSalesRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewSales/view-sales-routing.module.ts","module.exports = \"td, th {\\n    padding: 9px;\\n    border: none;\\n}\\nth{\\n    text-align: left;\\n\\n}\\ntr:nth-child(odd){\\n    background-color: #f0f5f5;\\n}\\nth:last-child, td:last-child{\\nborder-right: 1px solid lightgray;\\nborder-left:1px solid lightgray;\\n\\n}\\nth:first-child, td:first-child{\\nborder-left: 1px solid lightgray;\\n}\\ntable{\\n    border-collapse: collapse;\\n}\\ntr:last-child, th{\\n  border-bottom:   1px solid lightgray;\\n}\\n.displayTables{\\n    margin-bottom:124px;\\n}\\ntr{\\n        border-bottom: 1px solid lightgray;\\n}\\nth{\\n    width:30%;\\n}\\n/*td:last-child{\\n    text-align: right;\\n}\\n tr:first-child{\\n\\t border-top: 1px solid lightgray;\\n\\n }*/\\n.box {border:2px solid #0094ff;}\\n.box h2 {background:#0094ff;color:white;padding:10px; margin-top: 0}\\n.box p {color:#333;padding:10px;}\\n.box {\\n    -moz-border-radius-topright:5px;\\n    -moz-border-radius-topleft:5px;\\n    -webkit-border-top-right-radius:5px;\\n    -webkit-border-top-left-radius:5px;\\n}\\n.dl-horizontal{\\n    margin: 0;\\n}\\n.dl-horizontal td{\\n    width: 260px;\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/viewSales/view-sales.component.css\n// module id = ./src/app/views/viewSales/view-sales.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"salesData\\\">\\n    <div style=\\\"margin-bottom:10px\\\">\\n\\n        <h2>Sales Details</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n\\n\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"callViewProduct()\\\" style=\\\"margin-top:0px\\\">View Product</button>\\n        </div>\\n\\n        <div class=\\\"col-md-6\\\" style=\\\"text-align: right\\\">\\n\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"callDelete()\\\" [disabled]=\\\"submitted\\\">Delete Sales</button>\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"callEdit()\\\" [disabled]=\\\"submitted\\\">Edit Sales</button>\\n            <button class=\\\"btn btn-default\\\" (click)=\\\"callRelink()\\\" [disabled]=\\\"submitted\\\">Relink Sales</button>\\n\\n\\n        </div>\\n    </div>\\n\\n\\n    <ul class=\\\"nav nav-tabs\\\">\\n        <li class=\\\"active\\\">\\n            <a data-toggle=\\\"tab\\\" href=\\\"#home\\\">Tab 1</a>\\n        </li>\\n        <li>\\n            <a data-toggle=\\\"tab\\\" href=\\\"#menu1\\\">Tab 2</a>\\n        </li>\\n   \\n    </ul>\\n\\n    <div class=\\\"tab-content\\\">\\n        <div id=\\\"home\\\" class=\\\"tab-pane fade in active\\\">\\n            <!--Start of the first tab-->\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Sales UPC</dt>\\n                <dd>{{salesData.sales_upc}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Sales Description</dt>\\n                <dd>{{salesData.sales_description}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Control Label Flag?</dt>\\n                <dd>{{salesData.control_label_flag}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Dollar Volume</dt>\\n                <dd>{{salesData.dollar_volume}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Dollar Share</dt>\\n                <dd>{{salesData.dollar_share}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Dollar Rank</dt>\\n                <dd>{{salesData.dollar_rank}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Dollar Volume % Change</dt>\\n                <dd>{{salesData.dollar_volume_percentage_change}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Kilo Volume</dt>\\n                <dd>{{salesData.kilo_volume}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Kilo Share</dt>\\n                <dd>{{salesData.kilo_share}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Kilo Rank</dt>\\n                <dd>{{salesData.kilo_volume_rank}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Kilo Volume % Change</dt>\\n                <dd>{{salesData.kilo_volume_percentage_change}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Average AC Dist</dt>\\n                <dd>{{salesData.average_ac_dist}}</dd>\\n            </dl>\\n\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Average Retail Price</dt>\\n                <dd>{{salesData.average_retail_price}}</dd>\\n            </dl>\\n\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Dollar Volume Total</dt>\\n                <dd>{{salesData.dollar_volume_total}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Kilo Volume Total</dt>\\n                <dd>{{salesData.kilo_volume_total}}</dd>\\n            </dl>\\n            <!--End of the first tab-->\\n        </div>\\n        <div id=\\\"menu1\\\" class=\\\"tab-pane fade\\\">\\n            <!--Start of the second tab-->\\n            <dl class=\\\"dl-horizontal\\\">\\n                    <dt>Nielsen Category</dt>\\n                    <dd>{{salesData.nielsen_category}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Collection Date</dt>\\n                <dd>{{salesData.sales_collection_date}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Sales Year</dt>\\n                <dd>{{salesData.sales_year}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Source</dt>\\n                <dd>{{salesData.sales_source}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Classification Number</dt>\\n                <dd>{{salesData.classification_number}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Classification Type</dt>\\n                <dd>{{salesData.classification_type}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Brand</dt>\\n                <dd>{{salesData.sales_brand}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Manufacturer</dt>\\n                <dd>{{salesData.sales_manufacturer}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Product Grouping</dt>\\n                <dd>{{salesData.product_grouping}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Cluster Number</dt>\\n                <dd>{{salesData.cluster_number}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Number of Units</dt>\\n                <dd>{{salesData.number_of_units}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                <dt>Comment</dt>\\n                <dd>{{salesData.sales_comment}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                    <dt>Creation Date</dt>\\n                    <dd>{{salesData.creation_date}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                    <dt>Last Edit Date</dt>\\n                    <dd>{{salesData.last_edit_date}}</dd>\\n            </dl>\\n            <dl class=\\\"dl-horizontal\\\">\\n                    <dt>Edited By</dt>\\n                    <dd>{{salesData.edited_by}}</dd>\\n            </dl>\\n    \\n            <!--End of the second tab-->\\n\\n        </div>\\n\\n    </div>\\n\\n\\n\\n</div>\\n\\n<confirm-box [flag]=\\\"flag\\\"></confirm-box>\\n<modal-box [modalType]=\\\"type\\\" (fireBack)=\\\"responseFromModal($event)\\\">\\n</modal-box>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/views/viewSales/view-sales.component.html\n// module id = ./src/app/views/viewSales/view-sales.component.html\n// module chunks = main","import 'rxjs/add/operator/switchMap';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Component, OnChanges, Input, OnInit } from '@angular/core';\nimport { Response, AllSalesFieldsView } from '../../data-model';\nimport { SearchService } from '../../services/search.service';\nimport { GetRecordService } from '../../services/getRecord.service';\nimport { DeleteRecordService } from '../../services/delete-record.service';\n\nimport { Observable } from 'rxjs/Observable';\nimport { AbstractControl } from '@angular/forms';\n\n\n@Component({\n    selector: 'view-sales',\n    templateUrl: './view-sales.component.html',\n    styleUrls: ['./view-sales.component.css'],\n    providers: [DeleteRecordService]\n\n})\n\n\nexport class ViewSalesComponent implements OnInit {\n\n    flag: number;\n    Ids: any;\n    salesData: AllSalesFieldsView;\n    editFields: AllSalesFieldsView;\n    type: string;\n    isLoading: boolean;\n    emptyField: string = null;\n    serverDown: boolean;\n    submitted: boolean = false;\n\n\n\n    constructor(\n\n        private getRecordService: GetRecordService,\n        private deleteRecordService: DeleteRecordService,\n        private router: Router,\n        private route: ActivatedRoute) {\n\n\n\n    }\n\n\n    ngOnInit(): void {\n\n        this.salesData = null;\n        this.editFields = null;\n        let id = this.route.snapshot.paramMap.get(decodeURI('id'));\n        this.getRecordService.getSalesRecords(encodeURI(id)).subscribe(\n            response => {\n                console.log(response);\n\n                this.salesData = response[0].data.dataList[0];\n\n\n            });\n        // this.route.paramMap\n        //     .switchMap((param: ParamMap) =>\n\n        //         this.getRecordService.getSalesRecords(param.get('id'))).subscribe(\n        //     response => {\n        //         console.log(response);\n\n        //         this.salesData = response[0].data.dataList[0];\n\n\n        //     }\n        //     );\n\n\n\n    }\n    ngOnChanges() {\n\n\n    }\n    receiveCall(event: number) {\n\n        this.editFields = null;\n        this.flag = event;\n        this.ngOnInit();\n    }\n\n    callEdit() {\n        this.router.navigate(['/edit-sales', this.route.snapshot.paramMap.get('id')])\n        this.flag = null; this.flag = null;\n    }\n    callDelete() {\n        this.type = 'sales';\n    }\n    responseFromModal(value: number) {\n        if (value ==2 ) {\n            this.type = null;\n            this.deleteSales(this.route.snapshot.paramMap.get('id'));\n            this.type = null;\n\n        } else if(value ==1){\n            this.callRelink();\n\n        }else {\n              this.type = null;\n        }\n    }\n    deleteSales(id: number | string) {\n        this.submitted = true;\n        this.deleteRecordService.deleteSalesRecord(id).finally(() => this.isLoading = false).subscribe(response => {\n\n            const {message, status} = response;\n\n            if (status === 202) {\n                this.flag = 2;\n                this.submitted = false;\n            } else if (status === 203) {\n                this.flag = 2;\n                this.submitted = false;\n            } else if (status === 204) {\n                this.flag = 2;\n                 this.submitted = false;\n            } else if (status === 200) {\n                this.flag = 1;\n\n                setTimeout(() => {\n\n                    this.router.navigate(['/viewproduct', this.salesData.product_id]);\n                },\n                    4000);\n            }\n            else {\n                this.submitted = false;\n                this.flag = 2;\n            }\n\n        }, (error) => {\n            this.serverDown = true;\n            this.flag = 2;\n            this.submitted = false;\n\n        });\n\n    }\n\n    callRelink(){\n        this.router.navigate(['/product-relink', this.route.snapshot.paramMap.get('id'), 'sales']);\n\n    }\n    callViewProduct(){\n        this.router.navigate(['/viewproduct', this.salesData.product_id]);\n    }\n    resize(event){\n\n        let eventObj: MSInputMethodContext = <MSInputMethodContext> event;\n        let target: HTMLInputElement = <HTMLInputElement> eventObj.target;\n       let height= target.clientHeight;\n       console.log(\"the height\", event.target.innerHeight);\n    }\n\n    toFixed(x) {\n        if (Math.abs(x) < 1.0) {\n          var e = parseInt(x.toString().split('e-')[1]);\n          if (e) {\n              x *= Math.pow(10,e-1);\n              x = '0.' + (new Array(e)).join('0') + x.toString().substring(2);\n          }\n        } else {\n          var e = parseInt(x.toString().split('+')[1]);\n          if (e > 20) {\n              e -= 20;\n              x /= Math.pow(10,e);\n              x += (new Array(e+1)).join('0');\n          }\n        }\n        console.log(\"the number is fixed: \", x)\n        return x;\n      }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewSales/view-sales.component.ts","import { NgModule } from '@angular/core';\n import { CommonModule } from '@angular/common';\n import { ViewSalesComponent} from './view-sales.component';\n\nimport {GetRecordService} from '../../services/getRecord.service'\nimport {EditSalesModule} from '../../editForms/editSales/edit-sales.module'\nimport {ModalBoxModule} from '../../modal-box/modal-box.module'\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ConfirmBoxModule} from '../../confirmbox/confirm-box.module'\nimport {RouterModule} from '@angular/router';\nimport {ViewSalesRoutingModule} from './view-sales-routing.module'\n\n@NgModule({\n    imports:[\n        CommonModule,\n        EditSalesModule,\n        ConfirmBoxModule,\n        ModalBoxModule,\n        RouterModule,\n        ViewSalesRoutingModule\n        \n       \n    ],\n    declarations:[\n    ViewSalesComponent\n    ],\n    providers: [\n        GetRecordService\n    ]\n\n})\n\nexport class ViewSalesModule{\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/views/viewSales/view-sales.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'http://192.168.187.128:8080/fcdr-rest-service/rest/'\n  // apiUrl:process.env.NODE_API_ENV\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}